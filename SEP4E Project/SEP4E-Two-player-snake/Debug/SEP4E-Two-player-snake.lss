
SEP4E-Two-player-snake.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000009e  00800100  00004ebe  00004f52  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00004ebe  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000006a4  0080019e  0080019e  00004ff0  2**0
                  ALLOC
  3 .comment      00000060  00000000  00000000  00004ff0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00005050  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000678  00000000  00000000  00005090  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000051da  00000000  00000000  00005708  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000181b  00000000  00000000  0000a8e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00004652  00000000  00000000  0000c0fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000184c  00000000  00000000  00010750  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000022b5  00000000  00000000  00011f9c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003347  00000000  00000000  00014251  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000598  00000000  00000000  00017598  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__vector_8>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 7a 14 	jmp	0x28f4	; 0x28f4 <__vector_13>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 66 0e 	jmp	0x1ccc	; 0x1ccc <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 82 15 	jmp	0x2b04	; 0x2b04 <__vector_20>
      54:	0c 94 db 15 	jmp	0x2bb6	; 0x2bb6 <__vector_21>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 36 16 	jmp	0x2c6c	; 0x2c6c <__vector_28>
      74:	0c 94 8f 16 	jmp	0x2d1e	; 0x2d1e <__vector_29>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d8 e0       	ldi	r29, 0x08	; 8
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	ee eb       	ldi	r30, 0xBE	; 190
      90:	fe e4       	ldi	r31, 0x4E	; 78
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	ae 39       	cpi	r26, 0x9E	; 158
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	28 e0       	ldi	r18, 0x08	; 8
      a0:	ae e9       	ldi	r26, 0x9E	; 158
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a2 34       	cpi	r26, 0x42	; 66
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 a6 08 	call	0x114c	; 0x114c <main>
      b2:	0c 94 5d 27 	jmp	0x4eba	; 0x4eba <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <byte_stuff>:
      ba:	cf 93       	push	r28
      bc:	df 93       	push	r29
      be:	cd b7       	in	r28, 0x3d	; 61
      c0:	de b7       	in	r29, 0x3e	; 62
      c2:	2c 97       	sbiw	r28, 0x0c	; 12
      c4:	0f b6       	in	r0, 0x3f	; 63
      c6:	f8 94       	cli
      c8:	de bf       	out	0x3e, r29	; 62
      ca:	0f be       	out	0x3f, r0	; 63
      cc:	cd bf       	out	0x3d, r28	; 61
      ce:	98 87       	std	Y+8, r25	; 0x08
      d0:	8f 83       	std	Y+7, r24	; 0x07
      d2:	69 87       	std	Y+9, r22	; 0x09
      d4:	5b 87       	std	Y+11, r21	; 0x0b
      d6:	4a 87       	std	Y+10, r20	; 0x0a
      d8:	2c 87       	std	Y+12, r18	; 0x0c
      da:	8a 85       	ldd	r24, Y+10	; 0x0a
      dc:	9b 85       	ldd	r25, Y+11	; 0x0b
      de:	9a 83       	std	Y+2, r25	; 0x02
      e0:	89 83       	std	Y+1, r24	; 0x01
      e2:	8c 85       	ldd	r24, Y+12	; 0x0c
      e4:	88 2f       	mov	r24, r24
      e6:	90 e0       	ldi	r25, 0x00	; 0
      e8:	2a 85       	ldd	r18, Y+10	; 0x0a
      ea:	3b 85       	ldd	r19, Y+11	; 0x0b
      ec:	82 0f       	add	r24, r18
      ee:	93 1f       	adc	r25, r19
      f0:	9c 83       	std	Y+4, r25	; 0x04
      f2:	8b 83       	std	Y+3, r24	; 0x03
      f4:	89 85       	ldd	r24, Y+9	; 0x09
      f6:	88 2f       	mov	r24, r24
      f8:	90 e0       	ldi	r25, 0x00	; 0
      fa:	2f 81       	ldd	r18, Y+7	; 0x07
      fc:	38 85       	ldd	r19, Y+8	; 0x08
      fe:	82 0f       	add	r24, r18
     100:	93 1f       	adc	r25, r19
     102:	9e 83       	std	Y+6, r25	; 0x06
     104:	8d 83       	std	Y+5, r24	; 0x05
     106:	69 c0       	rjmp	.+210    	; 0x1da <byte_stuff+0x120>
     108:	8f 81       	ldd	r24, Y+7	; 0x07
     10a:	98 85       	ldd	r25, Y+8	; 0x08
     10c:	fc 01       	movw	r30, r24
     10e:	80 81       	ld	r24, Z
     110:	88 2f       	mov	r24, r24
     112:	90 e0       	ldi	r25, 0x00	; 0
     114:	00 97       	sbiw	r24, 0x00	; 0
     116:	21 f0       	breq	.+8      	; 0x120 <byte_stuff+0x66>
     118:	8f 3f       	cpi	r24, 0xFF	; 255
     11a:	91 05       	cpc	r25, r1
     11c:	41 f1       	breq	.+80     	; 0x16e <byte_stuff+0xb4>
     11e:	4a c0       	rjmp	.+148    	; 0x1b4 <byte_stuff+0xfa>
     120:	8b 81       	ldd	r24, Y+3	; 0x03
     122:	9c 81       	ldd	r25, Y+4	; 0x04
     124:	9c 01       	movw	r18, r24
     126:	21 50       	subi	r18, 0x01	; 1
     128:	31 09       	sbc	r19, r1
     12a:	8a 85       	ldd	r24, Y+10	; 0x0a
     12c:	9b 85       	ldd	r25, Y+11	; 0x0b
     12e:	82 17       	cp	r24, r18
     130:	93 07       	cpc	r25, r19
     132:	d8 f4       	brcc	.+54     	; 0x16a <byte_stuff+0xb0>
     134:	8a 85       	ldd	r24, Y+10	; 0x0a
     136:	9b 85       	ldd	r25, Y+11	; 0x0b
     138:	9c 01       	movw	r18, r24
     13a:	2f 5f       	subi	r18, 0xFF	; 255
     13c:	3f 4f       	sbci	r19, 0xFF	; 255
     13e:	3b 87       	std	Y+11, r19	; 0x0b
     140:	2a 87       	std	Y+10, r18	; 0x0a
     142:	2f 81       	ldd	r18, Y+7	; 0x07
     144:	38 85       	ldd	r19, Y+8	; 0x08
     146:	f9 01       	movw	r30, r18
     148:	20 81       	ld	r18, Z
     14a:	fc 01       	movw	r30, r24
     14c:	20 83       	st	Z, r18
     14e:	8a 85       	ldd	r24, Y+10	; 0x0a
     150:	9b 85       	ldd	r25, Y+11	; 0x0b
     152:	9c 01       	movw	r18, r24
     154:	2f 5f       	subi	r18, 0xFF	; 255
     156:	3f 4f       	sbci	r19, 0xFF	; 255
     158:	3b 87       	std	Y+11, r19	; 0x0b
     15a:	2a 87       	std	Y+10, r18	; 0x0a
     15c:	2f 81       	ldd	r18, Y+7	; 0x07
     15e:	38 85       	ldd	r19, Y+8	; 0x08
     160:	f9 01       	movw	r30, r18
     162:	20 81       	ld	r18, Z
     164:	fc 01       	movw	r30, r24
     166:	20 83       	st	Z, r18
     168:	33 c0       	rjmp	.+102    	; 0x1d0 <byte_stuff+0x116>
     16a:	80 e0       	ldi	r24, 0x00	; 0
     16c:	4d c0       	rjmp	.+154    	; 0x208 <byte_stuff+0x14e>
     16e:	8b 81       	ldd	r24, Y+3	; 0x03
     170:	9c 81       	ldd	r25, Y+4	; 0x04
     172:	9c 01       	movw	r18, r24
     174:	21 50       	subi	r18, 0x01	; 1
     176:	31 09       	sbc	r19, r1
     178:	8a 85       	ldd	r24, Y+10	; 0x0a
     17a:	9b 85       	ldd	r25, Y+11	; 0x0b
     17c:	82 17       	cp	r24, r18
     17e:	93 07       	cpc	r25, r19
     180:	b8 f4       	brcc	.+46     	; 0x1b0 <byte_stuff+0xf6>
     182:	8a 85       	ldd	r24, Y+10	; 0x0a
     184:	9b 85       	ldd	r25, Y+11	; 0x0b
     186:	9c 01       	movw	r18, r24
     188:	2f 5f       	subi	r18, 0xFF	; 255
     18a:	3f 4f       	sbci	r19, 0xFF	; 255
     18c:	3b 87       	std	Y+11, r19	; 0x0b
     18e:	2a 87       	std	Y+10, r18	; 0x0a
     190:	fc 01       	movw	r30, r24
     192:	10 82       	st	Z, r1
     194:	8a 85       	ldd	r24, Y+10	; 0x0a
     196:	9b 85       	ldd	r25, Y+11	; 0x0b
     198:	9c 01       	movw	r18, r24
     19a:	2f 5f       	subi	r18, 0xFF	; 255
     19c:	3f 4f       	sbci	r19, 0xFF	; 255
     19e:	3b 87       	std	Y+11, r19	; 0x0b
     1a0:	2a 87       	std	Y+10, r18	; 0x0a
     1a2:	2f 81       	ldd	r18, Y+7	; 0x07
     1a4:	38 85       	ldd	r19, Y+8	; 0x08
     1a6:	f9 01       	movw	r30, r18
     1a8:	20 81       	ld	r18, Z
     1aa:	fc 01       	movw	r30, r24
     1ac:	20 83       	st	Z, r18
     1ae:	10 c0       	rjmp	.+32     	; 0x1d0 <byte_stuff+0x116>
     1b0:	80 e0       	ldi	r24, 0x00	; 0
     1b2:	2a c0       	rjmp	.+84     	; 0x208 <byte_stuff+0x14e>
     1b4:	8a 85       	ldd	r24, Y+10	; 0x0a
     1b6:	9b 85       	ldd	r25, Y+11	; 0x0b
     1b8:	9c 01       	movw	r18, r24
     1ba:	2f 5f       	subi	r18, 0xFF	; 255
     1bc:	3f 4f       	sbci	r19, 0xFF	; 255
     1be:	3b 87       	std	Y+11, r19	; 0x0b
     1c0:	2a 87       	std	Y+10, r18	; 0x0a
     1c2:	2f 81       	ldd	r18, Y+7	; 0x07
     1c4:	38 85       	ldd	r19, Y+8	; 0x08
     1c6:	f9 01       	movw	r30, r18
     1c8:	20 81       	ld	r18, Z
     1ca:	fc 01       	movw	r30, r24
     1cc:	20 83       	st	Z, r18
     1ce:	00 00       	nop
     1d0:	8f 81       	ldd	r24, Y+7	; 0x07
     1d2:	98 85       	ldd	r25, Y+8	; 0x08
     1d4:	01 96       	adiw	r24, 0x01	; 1
     1d6:	98 87       	std	Y+8, r25	; 0x08
     1d8:	8f 83       	std	Y+7, r24	; 0x07
     1da:	2f 81       	ldd	r18, Y+7	; 0x07
     1dc:	38 85       	ldd	r19, Y+8	; 0x08
     1de:	8d 81       	ldd	r24, Y+5	; 0x05
     1e0:	9e 81       	ldd	r25, Y+6	; 0x06
     1e2:	28 17       	cp	r18, r24
     1e4:	39 07       	cpc	r19, r25
     1e6:	40 f4       	brcc	.+16     	; 0x1f8 <byte_stuff+0x13e>
     1e8:	2a 85       	ldd	r18, Y+10	; 0x0a
     1ea:	3b 85       	ldd	r19, Y+11	; 0x0b
     1ec:	8b 81       	ldd	r24, Y+3	; 0x03
     1ee:	9c 81       	ldd	r25, Y+4	; 0x04
     1f0:	28 17       	cp	r18, r24
     1f2:	39 07       	cpc	r19, r25
     1f4:	08 f4       	brcc	.+2      	; 0x1f8 <byte_stuff+0x13e>
     1f6:	88 cf       	rjmp	.-240    	; 0x108 <byte_stuff+0x4e>
     1f8:	2a 85       	ldd	r18, Y+10	; 0x0a
     1fa:	3b 85       	ldd	r19, Y+11	; 0x0b
     1fc:	89 81       	ldd	r24, Y+1	; 0x01
     1fe:	9a 81       	ldd	r25, Y+2	; 0x02
     200:	a9 01       	movw	r20, r18
     202:	48 1b       	sub	r20, r24
     204:	59 0b       	sbc	r21, r25
     206:	ca 01       	movw	r24, r20
     208:	2c 96       	adiw	r28, 0x0c	; 12
     20a:	0f b6       	in	r0, 0x3f	; 63
     20c:	f8 94       	cli
     20e:	de bf       	out	0x3e, r29	; 62
     210:	0f be       	out	0x3f, r0	; 63
     212:	cd bf       	out	0x3d, r28	; 61
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	08 95       	ret

0000021a <byte_unstuff>:
     21a:	cf 93       	push	r28
     21c:	df 93       	push	r29
     21e:	cd b7       	in	r28, 0x3d	; 61
     220:	de b7       	in	r29, 0x3e	; 62
     222:	2c 97       	sbiw	r28, 0x0c	; 12
     224:	0f b6       	in	r0, 0x3f	; 63
     226:	f8 94       	cli
     228:	de bf       	out	0x3e, r29	; 62
     22a:	0f be       	out	0x3f, r0	; 63
     22c:	cd bf       	out	0x3d, r28	; 61
     22e:	98 87       	std	Y+8, r25	; 0x08
     230:	8f 83       	std	Y+7, r24	; 0x07
     232:	69 87       	std	Y+9, r22	; 0x09
     234:	5b 87       	std	Y+11, r21	; 0x0b
     236:	4a 87       	std	Y+10, r20	; 0x0a
     238:	2c 87       	std	Y+12, r18	; 0x0c
     23a:	8f 81       	ldd	r24, Y+7	; 0x07
     23c:	98 85       	ldd	r25, Y+8	; 0x08
     23e:	9a 83       	std	Y+2, r25	; 0x02
     240:	89 83       	std	Y+1, r24	; 0x01
     242:	89 85       	ldd	r24, Y+9	; 0x09
     244:	88 2f       	mov	r24, r24
     246:	90 e0       	ldi	r25, 0x00	; 0
     248:	2f 81       	ldd	r18, Y+7	; 0x07
     24a:	38 85       	ldd	r19, Y+8	; 0x08
     24c:	82 0f       	add	r24, r18
     24e:	93 1f       	adc	r25, r19
     250:	9c 83       	std	Y+4, r25	; 0x04
     252:	8b 83       	std	Y+3, r24	; 0x03
     254:	8c 85       	ldd	r24, Y+12	; 0x0c
     256:	88 2f       	mov	r24, r24
     258:	90 e0       	ldi	r25, 0x00	; 0
     25a:	2a 85       	ldd	r18, Y+10	; 0x0a
     25c:	3b 85       	ldd	r19, Y+11	; 0x0b
     25e:	82 0f       	add	r24, r18
     260:	93 1f       	adc	r25, r19
     262:	9e 83       	std	Y+6, r25	; 0x06
     264:	8d 83       	std	Y+5, r24	; 0x05
     266:	39 c0       	rjmp	.+114    	; 0x2da <byte_unstuff+0xc0>
     268:	8a 85       	ldd	r24, Y+10	; 0x0a
     26a:	9b 85       	ldd	r25, Y+11	; 0x0b
     26c:	fc 01       	movw	r30, r24
     26e:	80 81       	ld	r24, Z
     270:	88 23       	and	r24, r24
     272:	09 f5       	brne	.+66     	; 0x2b6 <byte_unstuff+0x9c>
     274:	8a 85       	ldd	r24, Y+10	; 0x0a
     276:	9b 85       	ldd	r25, Y+11	; 0x0b
     278:	01 96       	adiw	r24, 0x01	; 1
     27a:	9b 87       	std	Y+11, r25	; 0x0b
     27c:	8a 87       	std	Y+10, r24	; 0x0a
     27e:	8a 85       	ldd	r24, Y+10	; 0x0a
     280:	9b 85       	ldd	r25, Y+11	; 0x0b
     282:	fc 01       	movw	r30, r24
     284:	80 81       	ld	r24, Z
     286:	88 23       	and	r24, r24
     288:	31 f0       	breq	.+12     	; 0x296 <byte_unstuff+0x7c>
     28a:	8a 85       	ldd	r24, Y+10	; 0x0a
     28c:	9b 85       	ldd	r25, Y+11	; 0x0b
     28e:	fc 01       	movw	r30, r24
     290:	80 81       	ld	r24, Z
     292:	8f 3f       	cpi	r24, 0xFF	; 255
     294:	71 f4       	brne	.+28     	; 0x2b2 <byte_unstuff+0x98>
     296:	8f 81       	ldd	r24, Y+7	; 0x07
     298:	98 85       	ldd	r25, Y+8	; 0x08
     29a:	9c 01       	movw	r18, r24
     29c:	2f 5f       	subi	r18, 0xFF	; 255
     29e:	3f 4f       	sbci	r19, 0xFF	; 255
     2a0:	38 87       	std	Y+8, r19	; 0x08
     2a2:	2f 83       	std	Y+7, r18	; 0x07
     2a4:	2a 85       	ldd	r18, Y+10	; 0x0a
     2a6:	3b 85       	ldd	r19, Y+11	; 0x0b
     2a8:	f9 01       	movw	r30, r18
     2aa:	20 81       	ld	r18, Z
     2ac:	fc 01       	movw	r30, r24
     2ae:	20 83       	st	Z, r18
     2b0:	0f c0       	rjmp	.+30     	; 0x2d0 <byte_unstuff+0xb6>
     2b2:	80 e0       	ldi	r24, 0x00	; 0
     2b4:	29 c0       	rjmp	.+82     	; 0x308 <byte_unstuff+0xee>
     2b6:	8f 81       	ldd	r24, Y+7	; 0x07
     2b8:	98 85       	ldd	r25, Y+8	; 0x08
     2ba:	9c 01       	movw	r18, r24
     2bc:	2f 5f       	subi	r18, 0xFF	; 255
     2be:	3f 4f       	sbci	r19, 0xFF	; 255
     2c0:	38 87       	std	Y+8, r19	; 0x08
     2c2:	2f 83       	std	Y+7, r18	; 0x07
     2c4:	2a 85       	ldd	r18, Y+10	; 0x0a
     2c6:	3b 85       	ldd	r19, Y+11	; 0x0b
     2c8:	f9 01       	movw	r30, r18
     2ca:	20 81       	ld	r18, Z
     2cc:	fc 01       	movw	r30, r24
     2ce:	20 83       	st	Z, r18
     2d0:	8a 85       	ldd	r24, Y+10	; 0x0a
     2d2:	9b 85       	ldd	r25, Y+11	; 0x0b
     2d4:	01 96       	adiw	r24, 0x01	; 1
     2d6:	9b 87       	std	Y+11, r25	; 0x0b
     2d8:	8a 87       	std	Y+10, r24	; 0x0a
     2da:	2f 81       	ldd	r18, Y+7	; 0x07
     2dc:	38 85       	ldd	r19, Y+8	; 0x08
     2de:	8b 81       	ldd	r24, Y+3	; 0x03
     2e0:	9c 81       	ldd	r25, Y+4	; 0x04
     2e2:	28 17       	cp	r18, r24
     2e4:	39 07       	cpc	r19, r25
     2e6:	40 f4       	brcc	.+16     	; 0x2f8 <byte_unstuff+0xde>
     2e8:	2a 85       	ldd	r18, Y+10	; 0x0a
     2ea:	3b 85       	ldd	r19, Y+11	; 0x0b
     2ec:	8d 81       	ldd	r24, Y+5	; 0x05
     2ee:	9e 81       	ldd	r25, Y+6	; 0x06
     2f0:	28 17       	cp	r18, r24
     2f2:	39 07       	cpc	r19, r25
     2f4:	08 f4       	brcc	.+2      	; 0x2f8 <byte_unstuff+0xde>
     2f6:	b8 cf       	rjmp	.-144    	; 0x268 <byte_unstuff+0x4e>
     2f8:	2f 81       	ldd	r18, Y+7	; 0x07
     2fa:	38 85       	ldd	r19, Y+8	; 0x08
     2fc:	89 81       	ldd	r24, Y+1	; 0x01
     2fe:	9a 81       	ldd	r25, Y+2	; 0x02
     300:	a9 01       	movw	r20, r18
     302:	48 1b       	sub	r20, r24
     304:	59 0b       	sbc	r21, r25
     306:	ca 01       	movw	r24, r20
     308:	2c 96       	adiw	r28, 0x0c	; 12
     30a:	0f b6       	in	r0, 0x3f	; 63
     30c:	f8 94       	cli
     30e:	de bf       	out	0x3e, r29	; 62
     310:	0f be       	out	0x3f, r0	; 63
     312:	cd bf       	out	0x3d, r28	; 61
     314:	df 91       	pop	r29
     316:	cf 91       	pop	r28
     318:	08 95       	ret

0000031a <snake_change_direction>:
static snake_t* snakes[2];
static bool run_game = false;
static uint8_t food_location = 1;

void snake_change_direction(Player_t player, Direction_t direction)
{
     31a:	cf 93       	push	r28
     31c:	df 93       	push	r29
     31e:	00 d0       	rcall	.+0      	; 0x320 <snake_change_direction+0x6>
     320:	cd b7       	in	r28, 0x3d	; 61
     322:	de b7       	in	r29, 0x3e	; 62
     324:	89 83       	std	Y+1, r24	; 0x01
     326:	6a 83       	std	Y+2, r22	; 0x02
	switch(snakes[player]->direction)
     328:	89 81       	ldd	r24, Y+1	; 0x01
     32a:	88 2f       	mov	r24, r24
     32c:	90 e0       	ldi	r25, 0x00	; 0
     32e:	88 0f       	add	r24, r24
     330:	99 1f       	adc	r25, r25
     332:	82 56       	subi	r24, 0x62	; 98
     334:	9e 4f       	sbci	r25, 0xFE	; 254
     336:	fc 01       	movw	r30, r24
     338:	80 81       	ld	r24, Z
     33a:	91 81       	ldd	r25, Z+1	; 0x01
     33c:	fc 01       	movw	r30, r24
     33e:	81 81       	ldd	r24, Z+1	; 0x01
     340:	88 2f       	mov	r24, r24
     342:	90 e0       	ldi	r25, 0x00	; 0
     344:	83 30       	cpi	r24, 0x03	; 3
     346:	91 05       	cpc	r25, r1
     348:	61 f0       	breq	.+24     	; 0x362 <snake_change_direction+0x48>
     34a:	84 30       	cpi	r24, 0x04	; 4
     34c:	91 05       	cpc	r25, r1
     34e:	1c f4       	brge	.+6      	; 0x356 <snake_change_direction+0x3c>
     350:	01 97       	sbiw	r24, 0x01	; 1
     352:	39 f0       	breq	.+14     	; 0x362 <snake_change_direction+0x48>
		case D_LEFT:
			if((direction == D_UP) || (direction == D_DOWN))
				snakes[player]->direction = direction;
			break;
	}
}
     354:	31 c0       	rjmp	.+98     	; 0x3b8 <snake_change_direction+0x9e>
static bool run_game = false;
static uint8_t food_location = 1;

void snake_change_direction(Player_t player, Direction_t direction)
{
	switch(snakes[player]->direction)
     356:	84 30       	cpi	r24, 0x04	; 4
     358:	91 05       	cpc	r25, r1
     35a:	b9 f0       	breq	.+46     	; 0x38a <snake_change_direction+0x70>
     35c:	06 97       	sbiw	r24, 0x06	; 6
     35e:	a9 f0       	breq	.+42     	; 0x38a <snake_change_direction+0x70>
		case D_LEFT:
			if((direction == D_UP) || (direction == D_DOWN))
				snakes[player]->direction = direction;
			break;
	}
}
     360:	2b c0       	rjmp	.+86     	; 0x3b8 <snake_change_direction+0x9e>
{
	switch(snakes[player]->direction)
	{
		case D_DOWN:
		case D_UP:
			if((direction == D_LEFT) || (direction == D_RIGHT))
     362:	8a 81       	ldd	r24, Y+2	; 0x02
     364:	84 30       	cpi	r24, 0x04	; 4
     366:	19 f0       	breq	.+6      	; 0x36e <snake_change_direction+0x54>
     368:	8a 81       	ldd	r24, Y+2	; 0x02
     36a:	86 30       	cpi	r24, 0x06	; 6
     36c:	11 f5       	brne	.+68     	; 0x3b2 <snake_change_direction+0x98>
				snakes[player]->direction = direction;
     36e:	89 81       	ldd	r24, Y+1	; 0x01
     370:	88 2f       	mov	r24, r24
     372:	90 e0       	ldi	r25, 0x00	; 0
     374:	88 0f       	add	r24, r24
     376:	99 1f       	adc	r25, r25
     378:	82 56       	subi	r24, 0x62	; 98
     37a:	9e 4f       	sbci	r25, 0xFE	; 254
     37c:	fc 01       	movw	r30, r24
     37e:	80 81       	ld	r24, Z
     380:	91 81       	ldd	r25, Z+1	; 0x01
     382:	2a 81       	ldd	r18, Y+2	; 0x02
     384:	fc 01       	movw	r30, r24
     386:	21 83       	std	Z+1, r18	; 0x01
			break;
     388:	14 c0       	rjmp	.+40     	; 0x3b2 <snake_change_direction+0x98>
		case D_RIGHT:
		case D_LEFT:
			if((direction == D_UP) || (direction == D_DOWN))
     38a:	8a 81       	ldd	r24, Y+2	; 0x02
     38c:	83 30       	cpi	r24, 0x03	; 3
     38e:	19 f0       	breq	.+6      	; 0x396 <snake_change_direction+0x7c>
     390:	8a 81       	ldd	r24, Y+2	; 0x02
     392:	81 30       	cpi	r24, 0x01	; 1
     394:	81 f4       	brne	.+32     	; 0x3b6 <snake_change_direction+0x9c>
				snakes[player]->direction = direction;
     396:	89 81       	ldd	r24, Y+1	; 0x01
     398:	88 2f       	mov	r24, r24
     39a:	90 e0       	ldi	r25, 0x00	; 0
     39c:	88 0f       	add	r24, r24
     39e:	99 1f       	adc	r25, r25
     3a0:	82 56       	subi	r24, 0x62	; 98
     3a2:	9e 4f       	sbci	r25, 0xFE	; 254
     3a4:	fc 01       	movw	r30, r24
     3a6:	80 81       	ld	r24, Z
     3a8:	91 81       	ldd	r25, Z+1	; 0x01
     3aa:	2a 81       	ldd	r18, Y+2	; 0x02
     3ac:	fc 01       	movw	r30, r24
     3ae:	21 83       	std	Z+1, r18	; 0x01
			break;
     3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <snake_change_direction+0x9c>
	{
		case D_DOWN:
		case D_UP:
			if((direction == D_LEFT) || (direction == D_RIGHT))
				snakes[player]->direction = direction;
			break;
     3b2:	00 00       	nop
     3b4:	01 c0       	rjmp	.+2      	; 0x3b8 <snake_change_direction+0x9e>
		case D_RIGHT:
		case D_LEFT:
			if((direction == D_UP) || (direction == D_DOWN))
				snakes[player]->direction = direction;
			break;
     3b6:	00 00       	nop
	}
}
     3b8:	00 00       	nop
     3ba:	0f 90       	pop	r0
     3bc:	0f 90       	pop	r0
     3be:	df 91       	pop	r29
     3c0:	cf 91       	pop	r28
     3c2:	08 95       	ret

000003c4 <restart_game>:

void restart_game()
{
     3c4:	cf 93       	push	r28
     3c6:	df 93       	push	r29
     3c8:	cd b7       	in	r28, 0x3d	; 61
     3ca:	de b7       	in	r29, 0x3e	; 62
	if(!run_game)
     3cc:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <run_game>
     3d0:	81 e0       	ldi	r24, 0x01	; 1
     3d2:	89 27       	eor	r24, r25
     3d4:	88 23       	and	r24, r24
     3d6:	79 f0       	breq	.+30     	; 0x3f6 <restart_game+0x32>
	{
		run_game = true;
     3d8:	81 e0       	ldi	r24, 0x01	; 1
     3da:	80 93 a2 01 	sts	0x01A2, r24	; 0x8001a2 <run_game>
		com_send_string("Game is (re)started!");
     3de:	84 e2       	ldi	r24, 0x24	; 36
     3e0:	91 e0       	ldi	r25, 0x01	; 1
     3e2:	0e 94 1e 02 	call	0x43c	; 0x43c <com_send_string>
		init_game(snakes);
     3e6:	8e e9       	ldi	r24, 0x9E	; 158
     3e8:	91 e0       	ldi	r25, 0x01	; 1
     3ea:	0e 94 ab 04 	call	0x956	; 0x956 <init_game>
		generate_new_food(&food_location);
     3ee:	80 e0       	ldi	r24, 0x00	; 0
     3f0:	91 e0       	ldi	r25, 0x01	; 1
     3f2:	0e 94 8e 03 	call	0x71c	; 0x71c <generate_new_food>
	}
}
     3f6:	00 00       	nop
     3f8:	df 91       	pop	r29
     3fa:	cf 91       	pop	r28
     3fc:	08 95       	ret

000003fe <end_game>:
void end_game()
{
     3fe:	cf 93       	push	r28
     400:	df 93       	push	r29
     402:	cd b7       	in	r28, 0x3d	; 61
     404:	de b7       	in	r29, 0x3e	; 62
	run_game = false;
     406:	10 92 a2 01 	sts	0x01A2, r1	; 0x8001a2 <run_game>
}
     40a:	00 00       	nop
     40c:	df 91       	pop	r29
     40e:	cf 91       	pop	r28
     410:	08 95       	ret

00000412 <xy_to_pixel_id>:

uint8_t xy_to_pixel_id(uint8_t x, uint8_t y)
{
     412:	cf 93       	push	r28
     414:	df 93       	push	r29
     416:	00 d0       	rcall	.+0      	; 0x418 <xy_to_pixel_id+0x6>
     418:	cd b7       	in	r28, 0x3d	; 61
     41a:	de b7       	in	r29, 0x3e	; 62
     41c:	89 83       	std	Y+1, r24	; 0x01
     41e:	6a 83       	std	Y+2, r22	; 0x02
	return x + y * SCREEN_DIMENSION_X;
     420:	8a 81       	ldd	r24, Y+2	; 0x02
     422:	88 0f       	add	r24, r24
     424:	98 2f       	mov	r25, r24
     426:	99 0f       	add	r25, r25
     428:	99 0f       	add	r25, r25
     42a:	99 0f       	add	r25, r25
     42c:	98 1b       	sub	r25, r24
     42e:	89 81       	ldd	r24, Y+1	; 0x01
     430:	89 0f       	add	r24, r25
}
     432:	0f 90       	pop	r0
     434:	0f 90       	pop	r0
     436:	df 91       	pop	r29
     438:	cf 91       	pop	r28
     43a:	08 95       	ret

0000043c <com_send_string>:

void com_send_string(char *str)
{
     43c:	cf 93       	push	r28
     43e:	df 93       	push	r29
     440:	00 d0       	rcall	.+0      	; 0x442 <com_send_string+0x6>
     442:	cd b7       	in	r28, 0x3d	; 61
     444:	de b7       	in	r29, 0x3e	; 62
     446:	9a 83       	std	Y+2, r25	; 0x02
     448:	89 83       	std	Y+1, r24	; 0x01
	send_bytes(str, strlen(str)+1);
     44a:	89 81       	ldd	r24, Y+1	; 0x01
     44c:	9a 81       	ldd	r25, Y+2	; 0x02
     44e:	0e 94 54 27 	call	0x4ea8	; 0x4ea8 <strlen>
     452:	21 e0       	ldi	r18, 0x01	; 1
     454:	28 0f       	add	r18, r24
     456:	89 81       	ldd	r24, Y+1	; 0x01
     458:	9a 81       	ldd	r25, Y+2	; 0x02
     45a:	62 2f       	mov	r22, r18
     45c:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <send_bytes>
}
     460:	00 00       	nop
     462:	0f 90       	pop	r0
     464:	0f 90       	pop	r0
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	08 95       	ret

0000046c <game_renderer_task>:

void game_renderer_task(void *pvParameters)
{
     46c:	0f 93       	push	r16
     46e:	1f 93       	push	r17
     470:	cf 93       	push	r28
     472:	df 93       	push	r29
     474:	cd b7       	in	r28, 0x3d	; 61
     476:	de b7       	in	r29, 0x3e	; 62
     478:	2a 97       	sbiw	r28, 0x0a	; 10
     47a:	0f b6       	in	r0, 0x3f	; 63
     47c:	f8 94       	cli
     47e:	de bf       	out	0x3e, r29	; 62
     480:	0f be       	out	0x3f, r0	; 63
     482:	cd bf       	out	0x3d, r28	; 61
     484:	9a 87       	std	Y+10, r25	; 0x0a
     486:	89 87       	std	Y+9, r24	; 0x09
	#if (configUSE_APPLICATION_TASK_TAG == 1)
	// Set task no to be used for tracing with R2R-Network
	vTaskSetApplicationTaskTag( NULL, ( void * ) 3 );
     488:	63 e0       	ldi	r22, 0x03	; 3
     48a:	70 e0       	ldi	r23, 0x00	; 0
     48c:	80 e0       	ldi	r24, 0x00	; 0
     48e:	90 e0       	ldi	r25, 0x00	; 0
     490:	0e 94 39 22 	call	0x4472	; 0x4472 <vTaskSetApplicationTaskTag>
	#endif

	uint16_t* frame_buf = pvParameters;
     494:	89 85       	ldd	r24, Y+9	; 0x09
     496:	9a 85       	ldd	r25, Y+10	; 0x0a
     498:	9c 83       	std	Y+4, r25	; 0x04
     49a:	8b 83       	std	Y+3, r24	; 0x03
	food_location = rng_seed;
     49c:	80 91 41 08 	lds	r24, 0x0841	; 0x800841 <rng_seed>
     4a0:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	for(uint8_t i = 0; i < 2; i++)
     4a4:	19 82       	std	Y+1, r1	; 0x01
     4a6:	27 c0       	rjmp	.+78     	; 0x4f6 <game_renderer_task+0x8a>
	{
		snakes[i] = snake_new_instance();
     4a8:	89 81       	ldd	r24, Y+1	; 0x01
     4aa:	08 2f       	mov	r16, r24
     4ac:	10 e0       	ldi	r17, 0x00	; 0
     4ae:	0e 94 65 04 	call	0x8ca	; 0x8ca <snake_new_instance>
     4b2:	9c 01       	movw	r18, r24
     4b4:	c8 01       	movw	r24, r16
     4b6:	88 0f       	add	r24, r24
     4b8:	99 1f       	adc	r25, r25
     4ba:	82 56       	subi	r24, 0x62	; 98
     4bc:	9e 4f       	sbci	r25, 0xFE	; 254
     4be:	fc 01       	movw	r30, r24
     4c0:	31 83       	std	Z+1, r19	; 0x01
     4c2:	20 83       	st	Z, r18
		if(snakes[i] == NULL)
     4c4:	89 81       	ldd	r24, Y+1	; 0x01
     4c6:	88 2f       	mov	r24, r24
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	88 0f       	add	r24, r24
     4cc:	99 1f       	adc	r25, r25
     4ce:	82 56       	subi	r24, 0x62	; 98
     4d0:	9e 4f       	sbci	r25, 0xFE	; 254
     4d2:	fc 01       	movw	r30, r24
     4d4:	80 81       	ld	r24, Z
     4d6:	91 81       	ldd	r25, Z+1	; 0x01
     4d8:	89 2b       	or	r24, r25
     4da:	51 f4       	brne	.+20     	; 0x4f0 <game_renderer_task+0x84>
		{
			snakes[i] = NULL;
     4dc:	89 81       	ldd	r24, Y+1	; 0x01
     4de:	88 2f       	mov	r24, r24
     4e0:	90 e0       	ldi	r25, 0x00	; 0
     4e2:	88 0f       	add	r24, r24
     4e4:	99 1f       	adc	r25, r25
     4e6:	82 56       	subi	r24, 0x62	; 98
     4e8:	9e 4f       	sbci	r25, 0xFE	; 254
     4ea:	fc 01       	movw	r30, r24
     4ec:	11 82       	std	Z+1, r1	; 0x01
     4ee:	10 82       	st	Z, r1
	vTaskSetApplicationTaskTag( NULL, ( void * ) 3 );
	#endif

	uint16_t* frame_buf = pvParameters;
	food_location = rng_seed;
	for(uint8_t i = 0; i < 2; i++)
     4f0:	89 81       	ldd	r24, Y+1	; 0x01
     4f2:	8f 5f       	subi	r24, 0xFF	; 255
     4f4:	89 83       	std	Y+1, r24	; 0x01
     4f6:	89 81       	ldd	r24, Y+1	; 0x01
     4f8:	82 30       	cpi	r24, 0x02	; 2
     4fa:	b0 f2       	brcs	.-84     	; 0x4a8 <game_renderer_task+0x3c>
			snakes[i] = NULL;
			//end game?
		}
	}

	TickType_t game_renderer_task_lastwake = xTaskGetTickCount();
     4fc:	0e 94 35 21 	call	0x426a	; 0x426a <xTaskGetTickCount>
     500:	98 87       	std	Y+8, r25	; 0x08
     502:	8f 83       	std	Y+7, r24	; 0x07
	

	clear_screen(frame_buf);
     504:	8b 81       	ldd	r24, Y+3	; 0x03
     506:	9c 81       	ldd	r25, Y+4	; 0x04
     508:	0e 94 1d 05 	call	0xa3a	; 0xa3a <clear_screen>
	init_game(snakes);
     50c:	8e e9       	ldi	r24, 0x9E	; 158
     50e:	91 e0       	ldi	r25, 0x01	; 1
     510:	0e 94 ab 04 	call	0x956	; 0x956 <init_game>
	generate_new_food(&food_location);
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	91 e0       	ldi	r25, 0x01	; 1
     518:	0e 94 8e 03 	call	0x71c	; 0x71c <generate_new_food>
	draw_game(frame_buf, snakes, food_location);
     51c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     520:	8b 81       	ldd	r24, Y+3	; 0x03
     522:	9c 81       	ldd	r25, Y+4	; 0x04
     524:	42 2f       	mov	r20, r18
     526:	6e e9       	ldi	r22, 0x9E	; 158
     528:	71 e0       	ldi	r23, 0x01	; 1
     52a:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <draw_game>
	while(1)
	{
		UBaseType_t stackUsage = uxTaskGetStackHighWaterMark(NULL);
     52e:	80 e0       	ldi	r24, 0x00	; 0
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	0e 94 ed 24 	call	0x49da	; 0x49da <uxTaskGetStackHighWaterMark>
     536:	8d 83       	std	Y+5, r24	; 0x05
		//Set task period
		vTaskDelayUntil(&game_renderer_task_lastwake, GAME_RENDERER_TASK_PERIOD);
     538:	ce 01       	movw	r24, r28
     53a:	07 96       	adiw	r24, 0x07	; 7
     53c:	62 e3       	ldi	r22, 0x32	; 50
     53e:	70 e0       	ldi	r23, 0x00	; 0
     540:	0e 94 bf 1f 	call	0x3f7e	; 0x3f7e <vTaskDelayUntil>
		//Action
		if(run_game)
     544:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <run_game>
     548:	88 23       	and	r24, r24
     54a:	89 f3       	breq	.-30     	; 0x52e <game_renderer_task+0xc2>
		{
			clear_screen(frame_buf);
     54c:	8b 81       	ldd	r24, Y+3	; 0x03
     54e:	9c 81       	ldd	r25, Y+4	; 0x04
     550:	0e 94 1d 05 	call	0xa3a	; 0xa3a <clear_screen>
			for(Player_t player = 0; player < 2; player++)
     554:	1a 82       	std	Y+2, r1	; 0x02
     556:	99 c0       	rjmp	.+306    	; 0x68a <game_renderer_task+0x21e>
			{
				uint8_t new_location;
				if((new_location = move_player_step(player, snakes, food_location)) != UINT8_MAX)
     558:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     55c:	48 2f       	mov	r20, r24
     55e:	6e e9       	ldi	r22, 0x9E	; 158
     560:	71 e0       	ldi	r23, 0x01	; 1
     562:	8a 81       	ldd	r24, Y+2	; 0x02
     564:	0e 94 40 05 	call	0xa80	; 0xa80 <move_player_step>
     568:	8e 83       	std	Y+6, r24	; 0x06
     56a:	8e 81       	ldd	r24, Y+6	; 0x06
     56c:	8f 3f       	cpi	r24, 0xFF	; 255
     56e:	09 f4       	brne	.+2      	; 0x572 <game_renderer_task+0x106>
     570:	89 c0       	rjmp	.+274    	; 0x684 <game_renderer_task+0x218>
				{
					if(new_location == food_location)
     572:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     576:	9e 81       	ldd	r25, Y+6	; 0x06
     578:	98 17       	cp	r25, r24
     57a:	09 f0       	breq	.+2      	; 0x57e <game_renderer_task+0x112>
     57c:	58 c0       	rjmp	.+176    	; 0x62e <game_renderer_task+0x1c2>
					{
						//caught food
						if(snakes[player]->length < snakes[player]->max_length)
     57e:	8a 81       	ldd	r24, Y+2	; 0x02
     580:	88 2f       	mov	r24, r24
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	88 0f       	add	r24, r24
     586:	99 1f       	adc	r25, r25
     588:	82 56       	subi	r24, 0x62	; 98
     58a:	9e 4f       	sbci	r25, 0xFE	; 254
     58c:	fc 01       	movw	r30, r24
     58e:	80 81       	ld	r24, Z
     590:	91 81       	ldd	r25, Z+1	; 0x01
     592:	fc 01       	movw	r30, r24
     594:	23 81       	ldd	r18, Z+3	; 0x03
     596:	8a 81       	ldd	r24, Y+2	; 0x02
     598:	88 2f       	mov	r24, r24
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	88 0f       	add	r24, r24
     59e:	99 1f       	adc	r25, r25
     5a0:	82 56       	subi	r24, 0x62	; 98
     5a2:	9e 4f       	sbci	r25, 0xFE	; 254
     5a4:	fc 01       	movw	r30, r24
     5a6:	80 81       	ld	r24, Z
     5a8:	91 81       	ldd	r25, Z+1	; 0x01
     5aa:	fc 01       	movw	r30, r24
     5ac:	80 8d       	ldd	r24, Z+24	; 0x18
     5ae:	28 17       	cp	r18, r24
     5b0:	78 f4       	brcc	.+30     	; 0x5d0 <game_renderer_task+0x164>
							snakes[player]->length++;
     5b2:	8a 81       	ldd	r24, Y+2	; 0x02
     5b4:	88 2f       	mov	r24, r24
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	88 0f       	add	r24, r24
     5ba:	99 1f       	adc	r25, r25
     5bc:	82 56       	subi	r24, 0x62	; 98
     5be:	9e 4f       	sbci	r25, 0xFE	; 254
     5c0:	fc 01       	movw	r30, r24
     5c2:	80 81       	ld	r24, Z
     5c4:	91 81       	ldd	r25, Z+1	; 0x01
     5c6:	fc 01       	movw	r30, r24
     5c8:	23 81       	ldd	r18, Z+3	; 0x03
     5ca:	2f 5f       	subi	r18, 0xFF	; 255
     5cc:	fc 01       	movw	r30, r24
     5ce:	23 83       	std	Z+3, r18	; 0x03

						snakes[player]->movespeed += MOVESPEED_PER_FOOD;
     5d0:	8a 81       	ldd	r24, Y+2	; 0x02
     5d2:	88 2f       	mov	r24, r24
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	88 0f       	add	r24, r24
     5d8:	99 1f       	adc	r25, r25
     5da:	82 56       	subi	r24, 0x62	; 98
     5dc:	9e 4f       	sbci	r25, 0xFE	; 254
     5de:	fc 01       	movw	r30, r24
     5e0:	80 81       	ld	r24, Z
     5e2:	91 81       	ldd	r25, Z+1	; 0x01
     5e4:	2a 81       	ldd	r18, Y+2	; 0x02
     5e6:	22 2f       	mov	r18, r18
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	22 0f       	add	r18, r18
     5ec:	33 1f       	adc	r19, r19
     5ee:	22 56       	subi	r18, 0x62	; 98
     5f0:	3e 4f       	sbci	r19, 0xFE	; 254
     5f2:	f9 01       	movw	r30, r18
     5f4:	20 81       	ld	r18, Z
     5f6:	31 81       	ldd	r19, Z+1	; 0x01
     5f8:	f9 01       	movw	r30, r18
     5fa:	22 81       	ldd	r18, Z+2	; 0x02
     5fc:	2f 5f       	subi	r18, 0xFF	; 255
     5fe:	fc 01       	movw	r30, r24
     600:	22 83       	std	Z+2, r18	; 0x02
						generate_new_food(&food_location);
     602:	80 e0       	ldi	r24, 0x00	; 0
     604:	91 e0       	ldi	r25, 0x01	; 1
     606:	0e 94 8e 03 	call	0x71c	; 0x71c <generate_new_food>
						switch(player)
     60a:	8a 81       	ldd	r24, Y+2	; 0x02
     60c:	88 2f       	mov	r24, r24
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	00 97       	sbiw	r24, 0x00	; 0
     612:	19 f0       	breq	.+6      	; 0x61a <game_renderer_task+0x1ae>
     614:	01 97       	sbiw	r24, 0x01	; 1
     616:	31 f0       	breq	.+12     	; 0x624 <game_renderer_task+0x1b8>
     618:	0a c0       	rjmp	.+20     	; 0x62e <game_renderer_task+0x1c2>
						{
							case PL_ONE:
							com_send_string("Player A ate food!");
     61a:	89 e3       	ldi	r24, 0x39	; 57
     61c:	91 e0       	ldi	r25, 0x01	; 1
     61e:	0e 94 1e 02 	call	0x43c	; 0x43c <com_send_string>
							break;
     622:	05 c0       	rjmp	.+10     	; 0x62e <game_renderer_task+0x1c2>
							case PL_TWO:
							com_send_string("Player B ate food!");
     624:	8c e4       	ldi	r24, 0x4C	; 76
     626:	91 e0       	ldi	r25, 0x01	; 1
     628:	0e 94 1e 02 	call	0x43c	; 0x43c <com_send_string>
							break;
     62c:	00 00       	nop
						}
					}
					move_to_location(snakes[player], new_location);
     62e:	8e 81       	ldd	r24, Y+6	; 0x06
     630:	28 2f       	mov	r18, r24
     632:	30 e0       	ldi	r19, 0x00	; 0
     634:	8a 81       	ldd	r24, Y+2	; 0x02
     636:	88 2f       	mov	r24, r24
     638:	90 e0       	ldi	r25, 0x00	; 0
     63a:	88 0f       	add	r24, r24
     63c:	99 1f       	adc	r25, r25
     63e:	82 56       	subi	r24, 0x62	; 98
     640:	9e 4f       	sbci	r25, 0xFE	; 254
     642:	fc 01       	movw	r30, r24
     644:	80 81       	ld	r24, Z
     646:	91 81       	ldd	r25, Z+1	; 0x01
     648:	b9 01       	movw	r22, r18
     64a:	0e 94 53 03 	call	0x6a6	; 0x6a6 <move_to_location>
				
					if(check_collisions_for_player(player, snakes))
     64e:	6e e9       	ldi	r22, 0x9E	; 158
     650:	71 e0       	ldi	r23, 0x01	; 1
     652:	8a 81       	ldd	r24, Y+2	; 0x02
     654:	0e 94 d7 03 	call	0x7ae	; 0x7ae <check_collisions_for_player>
     658:	88 23       	and	r24, r24
     65a:	a1 f0       	breq	.+40     	; 0x684 <game_renderer_task+0x218>
					{
						//player lost..
						switch(player)
     65c:	8a 81       	ldd	r24, Y+2	; 0x02
     65e:	88 2f       	mov	r24, r24
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	00 97       	sbiw	r24, 0x00	; 0
     664:	19 f0       	breq	.+6      	; 0x66c <game_renderer_task+0x200>
     666:	01 97       	sbiw	r24, 0x01	; 1
     668:	31 f0       	breq	.+12     	; 0x676 <game_renderer_task+0x20a>
     66a:	0a c0       	rjmp	.+20     	; 0x680 <game_renderer_task+0x214>
						{
							case PL_ONE:
							com_send_string("Player B won!");
     66c:	8f e5       	ldi	r24, 0x5F	; 95
     66e:	91 e0       	ldi	r25, 0x01	; 1
     670:	0e 94 1e 02 	call	0x43c	; 0x43c <com_send_string>
							break;
     674:	05 c0       	rjmp	.+10     	; 0x680 <game_renderer_task+0x214>
							case PL_TWO:
							com_send_string("Player A won!");
     676:	8d e6       	ldi	r24, 0x6D	; 109
     678:	91 e0       	ldi	r25, 0x01	; 1
     67a:	0e 94 1e 02 	call	0x43c	; 0x43c <com_send_string>
							break;
     67e:	00 00       	nop
						}
						end_game();
     680:	0e 94 ff 01 	call	0x3fe	; 0x3fe <end_game>
		vTaskDelayUntil(&game_renderer_task_lastwake, GAME_RENDERER_TASK_PERIOD);
		//Action
		if(run_game)
		{
			clear_screen(frame_buf);
			for(Player_t player = 0; player < 2; player++)
     684:	8a 81       	ldd	r24, Y+2	; 0x02
     686:	8f 5f       	subi	r24, 0xFF	; 255
     688:	8a 83       	std	Y+2, r24	; 0x02
     68a:	8a 81       	ldd	r24, Y+2	; 0x02
     68c:	82 30       	cpi	r24, 0x02	; 2
     68e:	08 f4       	brcc	.+2      	; 0x692 <game_renderer_task+0x226>
     690:	63 cf       	rjmp	.-314    	; 0x558 <game_renderer_task+0xec>
						}
						end_game();
					}
				}
			}
			draw_game(frame_buf, snakes, food_location);
     692:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     696:	8b 81       	ldd	r24, Y+3	; 0x03
     698:	9c 81       	ldd	r25, Y+4	; 0x04
     69a:	42 2f       	mov	r20, r18
     69c:	6e e9       	ldi	r22, 0x9E	; 158
     69e:	71 e0       	ldi	r23, 0x01	; 1
     6a0:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <draw_game>
		}
	}
     6a4:	44 cf       	rjmp	.-376    	; 0x52e <game_renderer_task+0xc2>

000006a6 <move_to_location>:
}
void move_to_location(snake_t *snake, uint8_t location)
{
     6a6:	cf 93       	push	r28
     6a8:	df 93       	push	r29
     6aa:	00 d0       	rcall	.+0      	; 0x6ac <move_to_location+0x6>
     6ac:	00 d0       	rcall	.+0      	; 0x6ae <move_to_location+0x8>
     6ae:	cd b7       	in	r28, 0x3d	; 61
     6b0:	de b7       	in	r29, 0x3e	; 62
     6b2:	9b 83       	std	Y+3, r25	; 0x03
     6b4:	8a 83       	std	Y+2, r24	; 0x02
     6b6:	6c 83       	std	Y+4, r22	; 0x04
	for(int8_t i = (snake->length - 2); i>= 0; i--)
     6b8:	8a 81       	ldd	r24, Y+2	; 0x02
     6ba:	9b 81       	ldd	r25, Y+3	; 0x03
     6bc:	fc 01       	movw	r30, r24
     6be:	83 81       	ldd	r24, Z+3	; 0x03
     6c0:	82 50       	subi	r24, 0x02	; 2
     6c2:	89 83       	std	Y+1, r24	; 0x01
     6c4:	1b c0       	rjmp	.+54     	; 0x6fc <move_to_location+0x56>
	snake->pixels[i+1] = snake->pixels[i];
     6c6:	89 81       	ldd	r24, Y+1	; 0x01
     6c8:	08 2e       	mov	r0, r24
     6ca:	00 0c       	add	r0, r0
     6cc:	99 0b       	sbc	r25, r25
     6ce:	01 96       	adiw	r24, 0x01	; 1
     6d0:	29 81       	ldd	r18, Y+1	; 0x01
     6d2:	02 2e       	mov	r0, r18
     6d4:	00 0c       	add	r0, r0
     6d6:	33 0b       	sbc	r19, r19
     6d8:	4a 81       	ldd	r20, Y+2	; 0x02
     6da:	5b 81       	ldd	r21, Y+3	; 0x03
     6dc:	24 0f       	add	r18, r20
     6de:	35 1f       	adc	r19, r21
     6e0:	2c 5f       	subi	r18, 0xFC	; 252
     6e2:	3f 4f       	sbci	r19, 0xFF	; 255
     6e4:	f9 01       	movw	r30, r18
     6e6:	40 81       	ld	r20, Z
     6e8:	2a 81       	ldd	r18, Y+2	; 0x02
     6ea:	3b 81       	ldd	r19, Y+3	; 0x03
     6ec:	82 0f       	add	r24, r18
     6ee:	93 1f       	adc	r25, r19
     6f0:	04 96       	adiw	r24, 0x04	; 4
     6f2:	fc 01       	movw	r30, r24
     6f4:	40 83       	st	Z, r20
		}
	}
}
void move_to_location(snake_t *snake, uint8_t location)
{
	for(int8_t i = (snake->length - 2); i>= 0; i--)
     6f6:	89 81       	ldd	r24, Y+1	; 0x01
     6f8:	81 50       	subi	r24, 0x01	; 1
     6fa:	89 83       	std	Y+1, r24	; 0x01
     6fc:	89 81       	ldd	r24, Y+1	; 0x01
     6fe:	88 23       	and	r24, r24
     700:	14 f7       	brge	.-60     	; 0x6c6 <move_to_location+0x20>
	snake->pixels[i+1] = snake->pixels[i];

	snake->pixels[0] = location;
     702:	8a 81       	ldd	r24, Y+2	; 0x02
     704:	9b 81       	ldd	r25, Y+3	; 0x03
     706:	2c 81       	ldd	r18, Y+4	; 0x04
     708:	fc 01       	movw	r30, r24
     70a:	24 83       	std	Z+4, r18	; 0x04
}
     70c:	00 00       	nop
     70e:	0f 90       	pop	r0
     710:	0f 90       	pop	r0
     712:	0f 90       	pop	r0
     714:	0f 90       	pop	r0
     716:	df 91       	pop	r29
     718:	cf 91       	pop	r28
     71a:	08 95       	ret

0000071c <generate_new_food>:
void generate_new_food(uint8_t *location)
{
     71c:	cf 93       	push	r28
     71e:	df 93       	push	r29
     720:	00 d0       	rcall	.+0      	; 0x722 <generate_new_food+0x6>
     722:	1f 92       	push	r1
     724:	cd b7       	in	r28, 0x3d	; 61
     726:	de b7       	in	r29, 0x3e	; 62
     728:	9b 83       	std	Y+3, r25	; 0x03
     72a:	8a 83       	std	Y+2, r24	; 0x02
	//xorshift should suffice as RNG
	uint8_t x = *location;
     72c:	8a 81       	ldd	r24, Y+2	; 0x02
     72e:	9b 81       	ldd	r25, Y+3	; 0x03
     730:	fc 01       	movw	r30, r24
     732:	80 81       	ld	r24, Z
     734:	89 83       	std	Y+1, r24	; 0x01
	if(x < 1)
     736:	89 81       	ldd	r24, Y+1	; 0x01
     738:	88 23       	and	r24, r24
     73a:	11 f4       	brne	.+4      	; 0x740 <generate_new_food+0x24>
		x = 255;
     73c:	8f ef       	ldi	r24, 0xFF	; 255
     73e:	89 83       	std	Y+1, r24	; 0x01
	x ^= (x << 7);
     740:	89 81       	ldd	r24, Y+1	; 0x01
     742:	88 2f       	mov	r24, r24
     744:	90 e0       	ldi	r25, 0x00	; 0
     746:	96 95       	lsr	r25
     748:	98 2f       	mov	r25, r24
     74a:	88 27       	eor	r24, r24
     74c:	97 95       	ror	r25
     74e:	87 95       	ror	r24
     750:	98 2f       	mov	r25, r24
     752:	89 81       	ldd	r24, Y+1	; 0x01
     754:	89 27       	eor	r24, r25
     756:	89 83       	std	Y+1, r24	; 0x01
	x ^= (x >> 5);
     758:	89 81       	ldd	r24, Y+1	; 0x01
     75a:	82 95       	swap	r24
     75c:	86 95       	lsr	r24
     75e:	87 70       	andi	r24, 0x07	; 7
     760:	99 81       	ldd	r25, Y+1	; 0x01
     762:	89 27       	eor	r24, r25
     764:	89 83       	std	Y+1, r24	; 0x01
	x ^= (x << 3);
     766:	89 81       	ldd	r24, Y+1	; 0x01
     768:	88 2f       	mov	r24, r24
     76a:	90 e0       	ldi	r25, 0x00	; 0
     76c:	88 0f       	add	r24, r24
     76e:	99 1f       	adc	r25, r25
     770:	88 0f       	add	r24, r24
     772:	99 1f       	adc	r25, r25
     774:	88 0f       	add	r24, r24
     776:	99 1f       	adc	r25, r25
     778:	98 2f       	mov	r25, r24
     77a:	89 81       	ldd	r24, Y+1	; 0x01
     77c:	89 27       	eor	r24, r25
     77e:	89 83       	std	Y+1, r24	; 0x01
	x %= SCREEN_DIMENSION_X * SCREEN_DIMENSION_Y;
     780:	89 81       	ldd	r24, Y+1	; 0x01
     782:	91 e0       	ldi	r25, 0x01	; 1
     784:	8c 38       	cpi	r24, 0x8C	; 140
     786:	08 f4       	brcc	.+2      	; 0x78a <generate_new_food+0x6e>
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	2c e8       	ldi	r18, 0x8C	; 140
     78c:	92 9f       	mul	r25, r18
     78e:	90 2d       	mov	r25, r0
     790:	11 24       	eor	r1, r1
     792:	89 1b       	sub	r24, r25
     794:	89 83       	std	Y+1, r24	; 0x01
	*location = x;
     796:	8a 81       	ldd	r24, Y+2	; 0x02
     798:	9b 81       	ldd	r25, Y+3	; 0x03
     79a:	29 81       	ldd	r18, Y+1	; 0x01
     79c:	fc 01       	movw	r30, r24
     79e:	20 83       	st	Z, r18
}
     7a0:	00 00       	nop
     7a2:	0f 90       	pop	r0
     7a4:	0f 90       	pop	r0
     7a6:	0f 90       	pop	r0
     7a8:	df 91       	pop	r29
     7aa:	cf 91       	pop	r28
     7ac:	08 95       	ret

000007ae <check_collisions_for_player>:
bool check_collisions_for_player(Player_t player, snake_t **snakes)
{
     7ae:	cf 93       	push	r28
     7b0:	df 93       	push	r29
     7b2:	00 d0       	rcall	.+0      	; 0x7b4 <check_collisions_for_player+0x6>
     7b4:	00 d0       	rcall	.+0      	; 0x7b6 <check_collisions_for_player+0x8>
     7b6:	00 d0       	rcall	.+0      	; 0x7b8 <check_collisions_for_player+0xa>
     7b8:	cd b7       	in	r28, 0x3d	; 61
     7ba:	de b7       	in	r29, 0x3e	; 62
     7bc:	8c 83       	std	Y+4, r24	; 0x04
     7be:	7e 83       	std	Y+6, r23	; 0x06
     7c0:	6d 83       	std	Y+5, r22	; 0x05
	uint8_t loc = snakes[player]->pixels[0];
     7c2:	8c 81       	ldd	r24, Y+4	; 0x04
     7c4:	88 2f       	mov	r24, r24
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	88 0f       	add	r24, r24
     7ca:	99 1f       	adc	r25, r25
     7cc:	2d 81       	ldd	r18, Y+5	; 0x05
     7ce:	3e 81       	ldd	r19, Y+6	; 0x06
     7d0:	82 0f       	add	r24, r18
     7d2:	93 1f       	adc	r25, r19
     7d4:	fc 01       	movw	r30, r24
     7d6:	80 81       	ld	r24, Z
     7d8:	91 81       	ldd	r25, Z+1	; 0x01
     7da:	fc 01       	movw	r30, r24
     7dc:	84 81       	ldd	r24, Z+4	; 0x04
     7de:	8b 83       	std	Y+3, r24	; 0x03
	for(uint8_t i = 1; i < snakes[player]->length; i++)
     7e0:	81 e0       	ldi	r24, 0x01	; 1
     7e2:	89 83       	std	Y+1, r24	; 0x01
     7e4:	1c c0       	rjmp	.+56     	; 0x81e <check_collisions_for_player+0x70>
		if(snakes[player]->pixels[i] == loc)
     7e6:	8c 81       	ldd	r24, Y+4	; 0x04
     7e8:	88 2f       	mov	r24, r24
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	88 0f       	add	r24, r24
     7ee:	99 1f       	adc	r25, r25
     7f0:	2d 81       	ldd	r18, Y+5	; 0x05
     7f2:	3e 81       	ldd	r19, Y+6	; 0x06
     7f4:	82 0f       	add	r24, r18
     7f6:	93 1f       	adc	r25, r19
     7f8:	fc 01       	movw	r30, r24
     7fa:	20 81       	ld	r18, Z
     7fc:	31 81       	ldd	r19, Z+1	; 0x01
     7fe:	89 81       	ldd	r24, Y+1	; 0x01
     800:	88 2f       	mov	r24, r24
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	82 0f       	add	r24, r18
     806:	93 1f       	adc	r25, r19
     808:	04 96       	adiw	r24, 0x04	; 4
     80a:	fc 01       	movw	r30, r24
     80c:	90 81       	ld	r25, Z
     80e:	8b 81       	ldd	r24, Y+3	; 0x03
     810:	98 17       	cp	r25, r24
     812:	11 f4       	brne	.+4      	; 0x818 <check_collisions_for_player+0x6a>
			return true;
     814:	81 e0       	ldi	r24, 0x01	; 1
     816:	50 c0       	rjmp	.+160    	; 0x8b8 <check_collisions_for_player+0x10a>
	*location = x;
}
bool check_collisions_for_player(Player_t player, snake_t **snakes)
{
	uint8_t loc = snakes[player]->pixels[0];
	for(uint8_t i = 1; i < snakes[player]->length; i++)
     818:	89 81       	ldd	r24, Y+1	; 0x01
     81a:	8f 5f       	subi	r24, 0xFF	; 255
     81c:	89 83       	std	Y+1, r24	; 0x01
     81e:	8c 81       	ldd	r24, Y+4	; 0x04
     820:	88 2f       	mov	r24, r24
     822:	90 e0       	ldi	r25, 0x00	; 0
     824:	88 0f       	add	r24, r24
     826:	99 1f       	adc	r25, r25
     828:	2d 81       	ldd	r18, Y+5	; 0x05
     82a:	3e 81       	ldd	r19, Y+6	; 0x06
     82c:	82 0f       	add	r24, r18
     82e:	93 1f       	adc	r25, r19
     830:	fc 01       	movw	r30, r24
     832:	80 81       	ld	r24, Z
     834:	91 81       	ldd	r25, Z+1	; 0x01
     836:	fc 01       	movw	r30, r24
     838:	93 81       	ldd	r25, Z+3	; 0x03
     83a:	89 81       	ldd	r24, Y+1	; 0x01
     83c:	89 17       	cp	r24, r25
     83e:	98 f2       	brcs	.-90     	; 0x7e6 <check_collisions_for_player+0x38>
		if(snakes[player]->pixels[i] == loc)
			return true;

	for(uint8_t i = 0; i < snakes[1 - player]->length; i++)
     840:	1a 82       	std	Y+2, r1	; 0x02
     842:	22 c0       	rjmp	.+68     	; 0x888 <check_collisions_for_player+0xda>
		if(snakes[1 - player]->pixels[i] == loc)
     844:	8c 81       	ldd	r24, Y+4	; 0x04
     846:	88 2f       	mov	r24, r24
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	21 e0       	ldi	r18, 0x01	; 1
     84c:	30 e0       	ldi	r19, 0x00	; 0
     84e:	a9 01       	movw	r20, r18
     850:	48 1b       	sub	r20, r24
     852:	59 0b       	sbc	r21, r25
     854:	ca 01       	movw	r24, r20
     856:	88 0f       	add	r24, r24
     858:	99 1f       	adc	r25, r25
     85a:	2d 81       	ldd	r18, Y+5	; 0x05
     85c:	3e 81       	ldd	r19, Y+6	; 0x06
     85e:	82 0f       	add	r24, r18
     860:	93 1f       	adc	r25, r19
     862:	fc 01       	movw	r30, r24
     864:	20 81       	ld	r18, Z
     866:	31 81       	ldd	r19, Z+1	; 0x01
     868:	8a 81       	ldd	r24, Y+2	; 0x02
     86a:	88 2f       	mov	r24, r24
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	82 0f       	add	r24, r18
     870:	93 1f       	adc	r25, r19
     872:	04 96       	adiw	r24, 0x04	; 4
     874:	fc 01       	movw	r30, r24
     876:	90 81       	ld	r25, Z
     878:	8b 81       	ldd	r24, Y+3	; 0x03
     87a:	98 17       	cp	r25, r24
     87c:	11 f4       	brne	.+4      	; 0x882 <check_collisions_for_player+0xd4>
			return true;
     87e:	81 e0       	ldi	r24, 0x01	; 1
     880:	1b c0       	rjmp	.+54     	; 0x8b8 <check_collisions_for_player+0x10a>
	uint8_t loc = snakes[player]->pixels[0];
	for(uint8_t i = 1; i < snakes[player]->length; i++)
		if(snakes[player]->pixels[i] == loc)
			return true;

	for(uint8_t i = 0; i < snakes[1 - player]->length; i++)
     882:	8a 81       	ldd	r24, Y+2	; 0x02
     884:	8f 5f       	subi	r24, 0xFF	; 255
     886:	8a 83       	std	Y+2, r24	; 0x02
     888:	8c 81       	ldd	r24, Y+4	; 0x04
     88a:	88 2f       	mov	r24, r24
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	21 e0       	ldi	r18, 0x01	; 1
     890:	30 e0       	ldi	r19, 0x00	; 0
     892:	a9 01       	movw	r20, r18
     894:	48 1b       	sub	r20, r24
     896:	59 0b       	sbc	r21, r25
     898:	ca 01       	movw	r24, r20
     89a:	88 0f       	add	r24, r24
     89c:	99 1f       	adc	r25, r25
     89e:	2d 81       	ldd	r18, Y+5	; 0x05
     8a0:	3e 81       	ldd	r19, Y+6	; 0x06
     8a2:	82 0f       	add	r24, r18
     8a4:	93 1f       	adc	r25, r19
     8a6:	fc 01       	movw	r30, r24
     8a8:	80 81       	ld	r24, Z
     8aa:	91 81       	ldd	r25, Z+1	; 0x01
     8ac:	fc 01       	movw	r30, r24
     8ae:	93 81       	ldd	r25, Z+3	; 0x03
     8b0:	8a 81       	ldd	r24, Y+2	; 0x02
     8b2:	89 17       	cp	r24, r25
     8b4:	38 f2       	brcs	.-114    	; 0x844 <check_collisions_for_player+0x96>
		if(snakes[1 - player]->pixels[i] == loc)
			return true;

	return false;
     8b6:	80 e0       	ldi	r24, 0x00	; 0
}
     8b8:	26 96       	adiw	r28, 0x06	; 6
     8ba:	0f b6       	in	r0, 0x3f	; 63
     8bc:	f8 94       	cli
     8be:	de bf       	out	0x3e, r29	; 62
     8c0:	0f be       	out	0x3f, r0	; 63
     8c2:	cd bf       	out	0x3d, r28	; 61
     8c4:	df 91       	pop	r29
     8c6:	cf 91       	pop	r28
     8c8:	08 95       	ret

000008ca <snake_new_instance>:
snake_t* snake_new_instance()
{
     8ca:	cf 93       	push	r28
     8cc:	df 93       	push	r29
     8ce:	00 d0       	rcall	.+0      	; 0x8d0 <snake_new_instance+0x6>
     8d0:	1f 92       	push	r1
     8d2:	cd b7       	in	r28, 0x3d	; 61
     8d4:	de b7       	in	r29, 0x3e	; 62
	snake_t *ret = pvPortMalloc(sizeof *ret);
     8d6:	89 e1       	ldi	r24, 0x19	; 25
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	0e 94 ea 16 	call	0x2dd4	; 0x2dd4 <pvPortMalloc>
     8de:	9b 83       	std	Y+3, r25	; 0x03
     8e0:	8a 83       	std	Y+2, r24	; 0x02
	if(ret == NULL)
     8e2:	8a 81       	ldd	r24, Y+2	; 0x02
     8e4:	9b 81       	ldd	r25, Y+3	; 0x03
     8e6:	89 2b       	or	r24, r25
     8e8:	19 f4       	brne	.+6      	; 0x8f0 <snake_new_instance+0x26>
		return ret;
     8ea:	8a 81       	ldd	r24, Y+2	; 0x02
     8ec:	9b 81       	ldd	r25, Y+3	; 0x03
     8ee:	2d c0       	rjmp	.+90     	; 0x94a <__stack+0x4b>
	ret->steps = 0;
     8f0:	8a 81       	ldd	r24, Y+2	; 0x02
     8f2:	9b 81       	ldd	r25, Y+3	; 0x03
     8f4:	fc 01       	movw	r30, r24
     8f6:	10 82       	st	Z, r1
	ret->direction = 0;
     8f8:	8a 81       	ldd	r24, Y+2	; 0x02
     8fa:	9b 81       	ldd	r25, Y+3	; 0x03
     8fc:	fc 01       	movw	r30, r24
     8fe:	11 82       	std	Z+1, r1	; 0x01
	ret->movespeed = 0;
     900:	8a 81       	ldd	r24, Y+2	; 0x02
     902:	9b 81       	ldd	r25, Y+3	; 0x03
     904:	fc 01       	movw	r30, r24
     906:	12 82       	std	Z+2, r1	; 0x02
	ret->length = 0;
     908:	8a 81       	ldd	r24, Y+2	; 0x02
     90a:	9b 81       	ldd	r25, Y+3	; 0x03
     90c:	fc 01       	movw	r30, r24
     90e:	13 82       	std	Z+3, r1	; 0x03
	ret->max_length = 20; 
     910:	8a 81       	ldd	r24, Y+2	; 0x02
     912:	9b 81       	ldd	r25, Y+3	; 0x03
     914:	24 e1       	ldi	r18, 0x14	; 20
     916:	fc 01       	movw	r30, r24
     918:	20 8f       	std	Z+24, r18	; 0x18
	for(uint8_t i = 0; i < ret->max_length; i++)
     91a:	19 82       	std	Y+1, r1	; 0x01
     91c:	0d c0       	rjmp	.+26     	; 0x938 <__stack+0x39>
		ret->pixels[i] = 0;
     91e:	89 81       	ldd	r24, Y+1	; 0x01
     920:	88 2f       	mov	r24, r24
     922:	90 e0       	ldi	r25, 0x00	; 0
     924:	2a 81       	ldd	r18, Y+2	; 0x02
     926:	3b 81       	ldd	r19, Y+3	; 0x03
     928:	82 0f       	add	r24, r18
     92a:	93 1f       	adc	r25, r19
     92c:	04 96       	adiw	r24, 0x04	; 4
     92e:	fc 01       	movw	r30, r24
     930:	10 82       	st	Z, r1
	ret->steps = 0;
	ret->direction = 0;
	ret->movespeed = 0;
	ret->length = 0;
	ret->max_length = 20; 
	for(uint8_t i = 0; i < ret->max_length; i++)
     932:	89 81       	ldd	r24, Y+1	; 0x01
     934:	8f 5f       	subi	r24, 0xFF	; 255
     936:	89 83       	std	Y+1, r24	; 0x01
     938:	8a 81       	ldd	r24, Y+2	; 0x02
     93a:	9b 81       	ldd	r25, Y+3	; 0x03
     93c:	fc 01       	movw	r30, r24
     93e:	90 8d       	ldd	r25, Z+24	; 0x18
     940:	89 81       	ldd	r24, Y+1	; 0x01
     942:	89 17       	cp	r24, r25
     944:	60 f3       	brcs	.-40     	; 0x91e <__stack+0x1f>
		ret->pixels[i] = 0;
	return ret;
     946:	8a 81       	ldd	r24, Y+2	; 0x02
     948:	9b 81       	ldd	r25, Y+3	; 0x03
}
     94a:	0f 90       	pop	r0
     94c:	0f 90       	pop	r0
     94e:	0f 90       	pop	r0
     950:	df 91       	pop	r29
     952:	cf 91       	pop	r28
     954:	08 95       	ret

00000956 <init_game>:
void init_game(snake_t **snakes)
{
     956:	0f 93       	push	r16
     958:	1f 93       	push	r17
     95a:	cf 93       	push	r28
     95c:	df 93       	push	r29
     95e:	00 d0       	rcall	.+0      	; 0x960 <init_game+0xa>
     960:	cd b7       	in	r28, 0x3d	; 61
     962:	de b7       	in	r29, 0x3e	; 62
     964:	9a 83       	std	Y+2, r25	; 0x02
     966:	89 83       	std	Y+1, r24	; 0x01
	snakes[PL_ONE]->direction = D_RIGHT;
     968:	89 81       	ldd	r24, Y+1	; 0x01
     96a:	9a 81       	ldd	r25, Y+2	; 0x02
     96c:	fc 01       	movw	r30, r24
     96e:	80 81       	ld	r24, Z
     970:	91 81       	ldd	r25, Z+1	; 0x01
     972:	26 e0       	ldi	r18, 0x06	; 6
     974:	fc 01       	movw	r30, r24
     976:	21 83       	std	Z+1, r18	; 0x01
	snakes[PL_ONE]->length = 20;
     978:	89 81       	ldd	r24, Y+1	; 0x01
     97a:	9a 81       	ldd	r25, Y+2	; 0x02
     97c:	fc 01       	movw	r30, r24
     97e:	80 81       	ld	r24, Z
     980:	91 81       	ldd	r25, Z+1	; 0x01
     982:	24 e1       	ldi	r18, 0x14	; 20
     984:	fc 01       	movw	r30, r24
     986:	23 83       	std	Z+3, r18	; 0x03
	snakes[PL_ONE]->movespeed = 1;
     988:	89 81       	ldd	r24, Y+1	; 0x01
     98a:	9a 81       	ldd	r25, Y+2	; 0x02
     98c:	fc 01       	movw	r30, r24
     98e:	80 81       	ld	r24, Z
     990:	91 81       	ldd	r25, Z+1	; 0x01
     992:	21 e0       	ldi	r18, 0x01	; 1
     994:	fc 01       	movw	r30, r24
     996:	22 83       	std	Z+2, r18	; 0x02
	snakes[PL_ONE]->pixels[0] = xy_to_pixel_id(1,1);
     998:	89 81       	ldd	r24, Y+1	; 0x01
     99a:	9a 81       	ldd	r25, Y+2	; 0x02
     99c:	fc 01       	movw	r30, r24
     99e:	00 81       	ld	r16, Z
     9a0:	11 81       	ldd	r17, Z+1	; 0x01
     9a2:	61 e0       	ldi	r22, 0x01	; 1
     9a4:	81 e0       	ldi	r24, 0x01	; 1
     9a6:	0e 94 09 02 	call	0x412	; 0x412 <xy_to_pixel_id>
     9aa:	f8 01       	movw	r30, r16
     9ac:	84 83       	std	Z+4, r24	; 0x04
	snakes[PL_ONE]->pixels[1] = xy_to_pixel_id(0, 1);
     9ae:	89 81       	ldd	r24, Y+1	; 0x01
     9b0:	9a 81       	ldd	r25, Y+2	; 0x02
     9b2:	fc 01       	movw	r30, r24
     9b4:	00 81       	ld	r16, Z
     9b6:	11 81       	ldd	r17, Z+1	; 0x01
     9b8:	61 e0       	ldi	r22, 0x01	; 1
     9ba:	80 e0       	ldi	r24, 0x00	; 0
     9bc:	0e 94 09 02 	call	0x412	; 0x412 <xy_to_pixel_id>
     9c0:	f8 01       	movw	r30, r16
     9c2:	85 83       	std	Z+5, r24	; 0x05

	snakes[PL_TWO]->direction = D_LEFT;
     9c4:	89 81       	ldd	r24, Y+1	; 0x01
     9c6:	9a 81       	ldd	r25, Y+2	; 0x02
     9c8:	02 96       	adiw	r24, 0x02	; 2
     9ca:	fc 01       	movw	r30, r24
     9cc:	80 81       	ld	r24, Z
     9ce:	91 81       	ldd	r25, Z+1	; 0x01
     9d0:	24 e0       	ldi	r18, 0x04	; 4
     9d2:	fc 01       	movw	r30, r24
     9d4:	21 83       	std	Z+1, r18	; 0x01
	snakes[PL_TWO]->length = 20;
     9d6:	89 81       	ldd	r24, Y+1	; 0x01
     9d8:	9a 81       	ldd	r25, Y+2	; 0x02
     9da:	02 96       	adiw	r24, 0x02	; 2
     9dc:	fc 01       	movw	r30, r24
     9de:	80 81       	ld	r24, Z
     9e0:	91 81       	ldd	r25, Z+1	; 0x01
     9e2:	24 e1       	ldi	r18, 0x14	; 20
     9e4:	fc 01       	movw	r30, r24
     9e6:	23 83       	std	Z+3, r18	; 0x03
	snakes[PL_TWO]->movespeed = 1;
     9e8:	89 81       	ldd	r24, Y+1	; 0x01
     9ea:	9a 81       	ldd	r25, Y+2	; 0x02
     9ec:	02 96       	adiw	r24, 0x02	; 2
     9ee:	fc 01       	movw	r30, r24
     9f0:	80 81       	ld	r24, Z
     9f2:	91 81       	ldd	r25, Z+1	; 0x01
     9f4:	21 e0       	ldi	r18, 0x01	; 1
     9f6:	fc 01       	movw	r30, r24
     9f8:	22 83       	std	Z+2, r18	; 0x02
	snakes[PL_TWO]->pixels[0] = xy_to_pixel_id(12, 8);
     9fa:	89 81       	ldd	r24, Y+1	; 0x01
     9fc:	9a 81       	ldd	r25, Y+2	; 0x02
     9fe:	02 96       	adiw	r24, 0x02	; 2
     a00:	fc 01       	movw	r30, r24
     a02:	00 81       	ld	r16, Z
     a04:	11 81       	ldd	r17, Z+1	; 0x01
     a06:	68 e0       	ldi	r22, 0x08	; 8
     a08:	8c e0       	ldi	r24, 0x0C	; 12
     a0a:	0e 94 09 02 	call	0x412	; 0x412 <xy_to_pixel_id>
     a0e:	f8 01       	movw	r30, r16
     a10:	84 83       	std	Z+4, r24	; 0x04
	snakes[PL_TWO]->pixels[1] = xy_to_pixel_id(13, 8);
     a12:	89 81       	ldd	r24, Y+1	; 0x01
     a14:	9a 81       	ldd	r25, Y+2	; 0x02
     a16:	02 96       	adiw	r24, 0x02	; 2
     a18:	fc 01       	movw	r30, r24
     a1a:	00 81       	ld	r16, Z
     a1c:	11 81       	ldd	r17, Z+1	; 0x01
     a1e:	68 e0       	ldi	r22, 0x08	; 8
     a20:	8d e0       	ldi	r24, 0x0D	; 13
     a22:	0e 94 09 02 	call	0x412	; 0x412 <xy_to_pixel_id>
     a26:	f8 01       	movw	r30, r16
     a28:	85 83       	std	Z+5, r24	; 0x05
}
     a2a:	00 00       	nop
     a2c:	0f 90       	pop	r0
     a2e:	0f 90       	pop	r0
     a30:	df 91       	pop	r29
     a32:	cf 91       	pop	r28
     a34:	1f 91       	pop	r17
     a36:	0f 91       	pop	r16
     a38:	08 95       	ret

00000a3a <clear_screen>:

void clear_screen(uint16_t* framebuffer)
{
     a3a:	cf 93       	push	r28
     a3c:	df 93       	push	r29
     a3e:	00 d0       	rcall	.+0      	; 0xa40 <clear_screen+0x6>
     a40:	1f 92       	push	r1
     a42:	cd b7       	in	r28, 0x3d	; 61
     a44:	de b7       	in	r29, 0x3e	; 62
     a46:	9b 83       	std	Y+3, r25	; 0x03
     a48:	8a 83       	std	Y+2, r24	; 0x02
	for(uint8_t x = 0; x < SCREEN_DIMENSION_X; x++)
     a4a:	19 82       	std	Y+1, r1	; 0x01
     a4c:	0f c0       	rjmp	.+30     	; 0xa6c <clear_screen+0x32>
		framebuffer[x] = 0;
     a4e:	89 81       	ldd	r24, Y+1	; 0x01
     a50:	88 2f       	mov	r24, r24
     a52:	90 e0       	ldi	r25, 0x00	; 0
     a54:	88 0f       	add	r24, r24
     a56:	99 1f       	adc	r25, r25
     a58:	2a 81       	ldd	r18, Y+2	; 0x02
     a5a:	3b 81       	ldd	r19, Y+3	; 0x03
     a5c:	82 0f       	add	r24, r18
     a5e:	93 1f       	adc	r25, r19
     a60:	fc 01       	movw	r30, r24
     a62:	11 82       	std	Z+1, r1	; 0x01
     a64:	10 82       	st	Z, r1
	snakes[PL_TWO]->pixels[1] = xy_to_pixel_id(13, 8);
}

void clear_screen(uint16_t* framebuffer)
{
	for(uint8_t x = 0; x < SCREEN_DIMENSION_X; x++)
     a66:	89 81       	ldd	r24, Y+1	; 0x01
     a68:	8f 5f       	subi	r24, 0xFF	; 255
     a6a:	89 83       	std	Y+1, r24	; 0x01
     a6c:	89 81       	ldd	r24, Y+1	; 0x01
     a6e:	8e 30       	cpi	r24, 0x0E	; 14
     a70:	70 f3       	brcs	.-36     	; 0xa4e <clear_screen+0x14>
		framebuffer[x] = 0;
}
     a72:	00 00       	nop
     a74:	0f 90       	pop	r0
     a76:	0f 90       	pop	r0
     a78:	0f 90       	pop	r0
     a7a:	df 91       	pop	r29
     a7c:	cf 91       	pop	r28
     a7e:	08 95       	ret

00000a80 <move_player_step>:
uint8_t move_player_step(Player_t player, snake_t **snakes, uint8_t food_location)
{
     a80:	cf 93       	push	r28
     a82:	df 93       	push	r29
     a84:	00 d0       	rcall	.+0      	; 0xa86 <move_player_step+0x6>
     a86:	00 d0       	rcall	.+0      	; 0xa88 <move_player_step+0x8>
     a88:	1f 92       	push	r1
     a8a:	cd b7       	in	r28, 0x3d	; 61
     a8c:	de b7       	in	r29, 0x3e	; 62
     a8e:	8a 83       	std	Y+2, r24	; 0x02
     a90:	7c 83       	std	Y+4, r23	; 0x04
     a92:	6b 83       	std	Y+3, r22	; 0x03
     a94:	4d 83       	std	Y+5, r20	; 0x05
	snakes[player]->steps += snakes[player]->movespeed;
     a96:	8a 81       	ldd	r24, Y+2	; 0x02
     a98:	88 2f       	mov	r24, r24
     a9a:	90 e0       	ldi	r25, 0x00	; 0
     a9c:	88 0f       	add	r24, r24
     a9e:	99 1f       	adc	r25, r25
     aa0:	2b 81       	ldd	r18, Y+3	; 0x03
     aa2:	3c 81       	ldd	r19, Y+4	; 0x04
     aa4:	82 0f       	add	r24, r18
     aa6:	93 1f       	adc	r25, r19
     aa8:	fc 01       	movw	r30, r24
     aaa:	80 81       	ld	r24, Z
     aac:	91 81       	ldd	r25, Z+1	; 0x01
     aae:	2a 81       	ldd	r18, Y+2	; 0x02
     ab0:	22 2f       	mov	r18, r18
     ab2:	30 e0       	ldi	r19, 0x00	; 0
     ab4:	22 0f       	add	r18, r18
     ab6:	33 1f       	adc	r19, r19
     ab8:	4b 81       	ldd	r20, Y+3	; 0x03
     aba:	5c 81       	ldd	r21, Y+4	; 0x04
     abc:	24 0f       	add	r18, r20
     abe:	35 1f       	adc	r19, r21
     ac0:	f9 01       	movw	r30, r18
     ac2:	20 81       	ld	r18, Z
     ac4:	31 81       	ldd	r19, Z+1	; 0x01
     ac6:	f9 01       	movw	r30, r18
     ac8:	60 81       	ld	r22, Z
     aca:	2a 81       	ldd	r18, Y+2	; 0x02
     acc:	22 2f       	mov	r18, r18
     ace:	30 e0       	ldi	r19, 0x00	; 0
     ad0:	22 0f       	add	r18, r18
     ad2:	33 1f       	adc	r19, r19
     ad4:	4b 81       	ldd	r20, Y+3	; 0x03
     ad6:	5c 81       	ldd	r21, Y+4	; 0x04
     ad8:	24 0f       	add	r18, r20
     ada:	35 1f       	adc	r19, r21
     adc:	f9 01       	movw	r30, r18
     ade:	20 81       	ld	r18, Z
     ae0:	31 81       	ldd	r19, Z+1	; 0x01
     ae2:	f9 01       	movw	r30, r18
     ae4:	22 81       	ldd	r18, Z+2	; 0x02
     ae6:	26 0f       	add	r18, r22
     ae8:	fc 01       	movw	r30, r24
     aea:	20 83       	st	Z, r18
	uint8_t steps;
	if((steps = snakes[player]->steps / STEPS_PER_PIXEL))
     aec:	8a 81       	ldd	r24, Y+2	; 0x02
     aee:	88 2f       	mov	r24, r24
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	88 0f       	add	r24, r24
     af4:	99 1f       	adc	r25, r25
     af6:	2b 81       	ldd	r18, Y+3	; 0x03
     af8:	3c 81       	ldd	r19, Y+4	; 0x04
     afa:	82 0f       	add	r24, r18
     afc:	93 1f       	adc	r25, r19
     afe:	fc 01       	movw	r30, r24
     b00:	80 81       	ld	r24, Z
     b02:	91 81       	ldd	r25, Z+1	; 0x01
     b04:	fc 01       	movw	r30, r24
     b06:	90 81       	ld	r25, Z
     b08:	8d ec       	ldi	r24, 0xCD	; 205
     b0a:	98 9f       	mul	r25, r24
     b0c:	81 2d       	mov	r24, r1
     b0e:	11 24       	eor	r1, r1
     b10:	82 95       	swap	r24
     b12:	8f 70       	andi	r24, 0x0F	; 15
     b14:	89 83       	std	Y+1, r24	; 0x01
     b16:	89 81       	ldd	r24, Y+1	; 0x01
     b18:	88 23       	and	r24, r24
     b1a:	09 f4       	brne	.+2      	; 0xb1e <move_player_step+0x9e>
     b1c:	43 c0       	rjmp	.+134    	; 0xba4 <move_player_step+0x124>
	{
		snakes[player]->steps -= steps * STEPS_PER_PIXEL;
     b1e:	8a 81       	ldd	r24, Y+2	; 0x02
     b20:	88 2f       	mov	r24, r24
     b22:	90 e0       	ldi	r25, 0x00	; 0
     b24:	88 0f       	add	r24, r24
     b26:	99 1f       	adc	r25, r25
     b28:	2b 81       	ldd	r18, Y+3	; 0x03
     b2a:	3c 81       	ldd	r19, Y+4	; 0x04
     b2c:	82 0f       	add	r24, r18
     b2e:	93 1f       	adc	r25, r19
     b30:	fc 01       	movw	r30, r24
     b32:	80 81       	ld	r24, Z
     b34:	91 81       	ldd	r25, Z+1	; 0x01
     b36:	2a 81       	ldd	r18, Y+2	; 0x02
     b38:	22 2f       	mov	r18, r18
     b3a:	30 e0       	ldi	r19, 0x00	; 0
     b3c:	22 0f       	add	r18, r18
     b3e:	33 1f       	adc	r19, r19
     b40:	4b 81       	ldd	r20, Y+3	; 0x03
     b42:	5c 81       	ldd	r21, Y+4	; 0x04
     b44:	24 0f       	add	r18, r20
     b46:	35 1f       	adc	r19, r21
     b48:	f9 01       	movw	r30, r18
     b4a:	20 81       	ld	r18, Z
     b4c:	31 81       	ldd	r19, Z+1	; 0x01
     b4e:	f9 01       	movw	r30, r18
     b50:	30 81       	ld	r19, Z
     b52:	49 81       	ldd	r20, Y+1	; 0x01
     b54:	2c ee       	ldi	r18, 0xEC	; 236
     b56:	42 9f       	mul	r20, r18
     b58:	20 2d       	mov	r18, r0
     b5a:	11 24       	eor	r1, r1
     b5c:	23 0f       	add	r18, r19
     b5e:	fc 01       	movw	r30, r24
     b60:	20 83       	st	Z, r18
		return get_new_position(snakes[player]->pixels[0], snakes[player]->direction, steps);
     b62:	8a 81       	ldd	r24, Y+2	; 0x02
     b64:	88 2f       	mov	r24, r24
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	88 0f       	add	r24, r24
     b6a:	99 1f       	adc	r25, r25
     b6c:	2b 81       	ldd	r18, Y+3	; 0x03
     b6e:	3c 81       	ldd	r19, Y+4	; 0x04
     b70:	82 0f       	add	r24, r18
     b72:	93 1f       	adc	r25, r19
     b74:	fc 01       	movw	r30, r24
     b76:	80 81       	ld	r24, Z
     b78:	91 81       	ldd	r25, Z+1	; 0x01
     b7a:	fc 01       	movw	r30, r24
     b7c:	51 81       	ldd	r21, Z+1	; 0x01
     b7e:	8a 81       	ldd	r24, Y+2	; 0x02
     b80:	88 2f       	mov	r24, r24
     b82:	90 e0       	ldi	r25, 0x00	; 0
     b84:	88 0f       	add	r24, r24
     b86:	99 1f       	adc	r25, r25
     b88:	2b 81       	ldd	r18, Y+3	; 0x03
     b8a:	3c 81       	ldd	r19, Y+4	; 0x04
     b8c:	82 0f       	add	r24, r18
     b8e:	93 1f       	adc	r25, r19
     b90:	fc 01       	movw	r30, r24
     b92:	80 81       	ld	r24, Z
     b94:	91 81       	ldd	r25, Z+1	; 0x01
     b96:	fc 01       	movw	r30, r24
     b98:	84 81       	ldd	r24, Z+4	; 0x04
     b9a:	49 81       	ldd	r20, Y+1	; 0x01
     b9c:	65 2f       	mov	r22, r21
     b9e:	0e 94 db 05 	call	0xbb6	; 0xbb6 <get_new_position>
     ba2:	01 c0       	rjmp	.+2      	; 0xba6 <move_player_step+0x126>
	}
	return UINT8_MAX;
     ba4:	8f ef       	ldi	r24, 0xFF	; 255
}
     ba6:	0f 90       	pop	r0
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	0f 90       	pop	r0
     bae:	0f 90       	pop	r0
     bb0:	df 91       	pop	r29
     bb2:	cf 91       	pop	r28
     bb4:	08 95       	ret

00000bb6 <get_new_position>:
uint8_t get_new_position(uint8_t origin_pixelid, Direction_t direction, uint8_t steps)
{
     bb6:	1f 93       	push	r17
     bb8:	cf 93       	push	r28
     bba:	df 93       	push	r29
     bbc:	00 d0       	rcall	.+0      	; 0xbbe <get_new_position+0x8>
     bbe:	00 d0       	rcall	.+0      	; 0xbc0 <get_new_position+0xa>
     bc0:	cd b7       	in	r28, 0x3d	; 61
     bc2:	de b7       	in	r29, 0x3e	; 62
     bc4:	8a 83       	std	Y+2, r24	; 0x02
     bc6:	6b 83       	std	Y+3, r22	; 0x03
     bc8:	4c 83       	std	Y+4, r20	; 0x04
	uint8_t x = x_offset(origin_pixelid);
     bca:	8a 81       	ldd	r24, Y+2	; 0x02
     bcc:	0e 94 5d 06 	call	0xcba	; 0xcba <x_offset>
     bd0:	89 83       	std	Y+1, r24	; 0x01
	switch(direction)
     bd2:	8b 81       	ldd	r24, Y+3	; 0x03
     bd4:	88 2f       	mov	r24, r24
     bd6:	90 e0       	ldi	r25, 0x00	; 0
     bd8:	83 30       	cpi	r24, 0x03	; 3
     bda:	91 05       	cpc	r25, r1
     bdc:	59 f1       	breq	.+86     	; 0xc34 <get_new_position+0x7e>
     bde:	84 30       	cpi	r24, 0x04	; 4
     be0:	91 05       	cpc	r25, r1
     be2:	1c f4       	brge	.+6      	; 0xbea <get_new_position+0x34>
     be4:	01 97       	sbiw	r24, 0x01	; 1
     be6:	31 f1       	breq	.+76     	; 0xc34 <get_new_position+0x7e>
     be8:	4d c0       	rjmp	.+154    	; 0xc84 <get_new_position+0xce>
     bea:	84 30       	cpi	r24, 0x04	; 4
     bec:	91 05       	cpc	r25, r1
     bee:	19 f0       	breq	.+6      	; 0xbf6 <get_new_position+0x40>
     bf0:	06 97       	sbiw	r24, 0x06	; 6
     bf2:	09 f0       	breq	.+2      	; 0xbf6 <get_new_position+0x40>
     bf4:	47 c0       	rjmp	.+142    	; 0xc84 <get_new_position+0xce>
	{
		case D_LEFT:
		case D_RIGHT:
			return origin_pixelid - x + mod(x + (direction - I_OFFSET) * steps, SCREEN_DIMENSION_X);
     bf6:	9a 81       	ldd	r25, Y+2	; 0x02
     bf8:	89 81       	ldd	r24, Y+1	; 0x01
     bfa:	19 2f       	mov	r17, r25
     bfc:	18 1b       	sub	r17, r24
     bfe:	89 81       	ldd	r24, Y+1	; 0x01
     c00:	28 2f       	mov	r18, r24
     c02:	30 e0       	ldi	r19, 0x00	; 0
     c04:	8b 81       	ldd	r24, Y+3	; 0x03
     c06:	88 2f       	mov	r24, r24
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	bc 01       	movw	r22, r24
     c0c:	65 50       	subi	r22, 0x05	; 5
     c0e:	71 09       	sbc	r23, r1
     c10:	8c 81       	ldd	r24, Y+4	; 0x04
     c12:	48 2f       	mov	r20, r24
     c14:	50 e0       	ldi	r21, 0x00	; 0
     c16:	64 9f       	mul	r22, r20
     c18:	c0 01       	movw	r24, r0
     c1a:	65 9f       	mul	r22, r21
     c1c:	90 0d       	add	r25, r0
     c1e:	74 9f       	mul	r23, r20
     c20:	90 0d       	add	r25, r0
     c22:	11 24       	eor	r1, r1
     c24:	82 0f       	add	r24, r18
     c26:	93 1f       	adc	r25, r19
     c28:	6e e0       	ldi	r22, 0x0E	; 14
     c2a:	70 e0       	ldi	r23, 0x00	; 0
     c2c:	0e 94 3b 07 	call	0xe76	; 0xe76 <mod>
     c30:	81 0f       	add	r24, r17
     c32:	28 c0       	rjmp	.+80     	; 0xc84 <get_new_position+0xce>
		break;
		case D_DOWN:
		case D_UP:
			return mod(origin_pixelid + (direction - J_OFFSET) * steps * SCREEN_DIMENSION_X, SCREEN_DIMENSION_X * SCREEN_DIMENSION_Y);
     c34:	8a 81       	ldd	r24, Y+2	; 0x02
     c36:	28 2f       	mov	r18, r24
     c38:	30 e0       	ldi	r19, 0x00	; 0
     c3a:	8b 81       	ldd	r24, Y+3	; 0x03
     c3c:	88 2f       	mov	r24, r24
     c3e:	90 e0       	ldi	r25, 0x00	; 0
     c40:	ac 01       	movw	r20, r24
     c42:	42 50       	subi	r20, 0x02	; 2
     c44:	51 09       	sbc	r21, r1
     c46:	8c 81       	ldd	r24, Y+4	; 0x04
     c48:	88 2f       	mov	r24, r24
     c4a:	90 e0       	ldi	r25, 0x00	; 0
     c4c:	48 9f       	mul	r20, r24
     c4e:	b0 01       	movw	r22, r0
     c50:	49 9f       	mul	r20, r25
     c52:	70 0d       	add	r23, r0
     c54:	58 9f       	mul	r21, r24
     c56:	70 0d       	add	r23, r0
     c58:	11 24       	eor	r1, r1
     c5a:	cb 01       	movw	r24, r22
     c5c:	88 0f       	add	r24, r24
     c5e:	99 1f       	adc	r25, r25
     c60:	ac 01       	movw	r20, r24
     c62:	44 0f       	add	r20, r20
     c64:	55 1f       	adc	r21, r21
     c66:	44 0f       	add	r20, r20
     c68:	55 1f       	adc	r21, r21
     c6a:	44 0f       	add	r20, r20
     c6c:	55 1f       	adc	r21, r21
     c6e:	ba 01       	movw	r22, r20
     c70:	68 1b       	sub	r22, r24
     c72:	79 0b       	sbc	r23, r25
     c74:	cb 01       	movw	r24, r22
     c76:	82 0f       	add	r24, r18
     c78:	93 1f       	adc	r25, r19
     c7a:	6c e8       	ldi	r22, 0x8C	; 140
     c7c:	70 e0       	ldi	r23, 0x00	; 0
     c7e:	0e 94 3b 07 	call	0xe76	; 0xe76 <mod>
     c82:	00 c0       	rjmp	.+0      	; 0xc84 <get_new_position+0xce>
		break;
	}
}
     c84:	0f 90       	pop	r0
     c86:	0f 90       	pop	r0
     c88:	0f 90       	pop	r0
     c8a:	0f 90       	pop	r0
     c8c:	df 91       	pop	r29
     c8e:	cf 91       	pop	r28
     c90:	1f 91       	pop	r17
     c92:	08 95       	ret

00000c94 <y_offset>:
uint8_t y_offset(uint8_t pixel_id)
{
     c94:	cf 93       	push	r28
     c96:	df 93       	push	r29
     c98:	1f 92       	push	r1
     c9a:	cd b7       	in	r28, 0x3d	; 61
     c9c:	de b7       	in	r29, 0x3e	; 62
     c9e:	89 83       	std	Y+1, r24	; 0x01
	return pixel_id / SCREEN_DIMENSION_X;
     ca0:	89 81       	ldd	r24, Y+1	; 0x01
     ca2:	98 2f       	mov	r25, r24
     ca4:	96 95       	lsr	r25
     ca6:	83 e9       	ldi	r24, 0x93	; 147
     ca8:	98 9f       	mul	r25, r24
     caa:	81 2d       	mov	r24, r1
     cac:	11 24       	eor	r1, r1
     cae:	86 95       	lsr	r24
     cb0:	86 95       	lsr	r24
}
     cb2:	0f 90       	pop	r0
     cb4:	df 91       	pop	r29
     cb6:	cf 91       	pop	r28
     cb8:	08 95       	ret

00000cba <x_offset>:
uint8_t x_offset(uint8_t pixel_id)
{
     cba:	cf 93       	push	r28
     cbc:	df 93       	push	r29
     cbe:	1f 92       	push	r1
     cc0:	cd b7       	in	r28, 0x3d	; 61
     cc2:	de b7       	in	r29, 0x3e	; 62
     cc4:	89 83       	std	Y+1, r24	; 0x01
	return pixel_id % SCREEN_DIMENSION_X;
     cc6:	29 81       	ldd	r18, Y+1	; 0x01
     cc8:	92 2f       	mov	r25, r18
     cca:	96 95       	lsr	r25
     ccc:	83 e9       	ldi	r24, 0x93	; 147
     cce:	98 9f       	mul	r25, r24
     cd0:	81 2d       	mov	r24, r1
     cd2:	11 24       	eor	r1, r1
     cd4:	86 95       	lsr	r24
     cd6:	86 95       	lsr	r24
     cd8:	98 2f       	mov	r25, r24
     cda:	89 2f       	mov	r24, r25
     cdc:	88 0f       	add	r24, r24
     cde:	98 2f       	mov	r25, r24
     ce0:	89 2f       	mov	r24, r25
     ce2:	88 0f       	add	r24, r24
     ce4:	88 0f       	add	r24, r24
     ce6:	88 0f       	add	r24, r24
     ce8:	89 1b       	sub	r24, r25
     cea:	92 2f       	mov	r25, r18
     cec:	98 1b       	sub	r25, r24
     cee:	89 2f       	mov	r24, r25
}
     cf0:	0f 90       	pop	r0
     cf2:	df 91       	pop	r29
     cf4:	cf 91       	pop	r28
     cf6:	08 95       	ret

00000cf8 <draw_game>:
void draw_game(uint16_t* framebuffer, snake_t **snakes, uint8_t food_location)
{
     cf8:	0f 93       	push	r16
     cfa:	1f 93       	push	r17
     cfc:	cf 93       	push	r28
     cfe:	df 93       	push	r29
     d00:	cd b7       	in	r28, 0x3d	; 61
     d02:	de b7       	in	r29, 0x3e	; 62
     d04:	27 97       	sbiw	r28, 0x07	; 7
     d06:	0f b6       	in	r0, 0x3f	; 63
     d08:	f8 94       	cli
     d0a:	de bf       	out	0x3e, r29	; 62
     d0c:	0f be       	out	0x3f, r0	; 63
     d0e:	cd bf       	out	0x3d, r28	; 61
     d10:	9c 83       	std	Y+4, r25	; 0x04
     d12:	8b 83       	std	Y+3, r24	; 0x03
     d14:	7e 83       	std	Y+6, r23	; 0x06
     d16:	6d 83       	std	Y+5, r22	; 0x05
     d18:	4f 83       	std	Y+7, r20	; 0x07
	framebuffer[x_offset(food_location)] |=  _BV((SCREEN_DIMENSION_Y - (y_offset(food_location)+1)));
     d1a:	8f 81       	ldd	r24, Y+7	; 0x07
     d1c:	0e 94 4a 06 	call	0xc94	; 0xc94 <y_offset>
     d20:	88 2f       	mov	r24, r24
     d22:	90 e0       	ldi	r25, 0x00	; 0
     d24:	29 e0       	ldi	r18, 0x09	; 9
     d26:	30 e0       	ldi	r19, 0x00	; 0
     d28:	28 1b       	sub	r18, r24
     d2a:	39 0b       	sbc	r19, r25
     d2c:	81 e0       	ldi	r24, 0x01	; 1
     d2e:	90 e0       	ldi	r25, 0x00	; 0
     d30:	8c 01       	movw	r16, r24
     d32:	02 c0       	rjmp	.+4      	; 0xd38 <draw_game+0x40>
     d34:	00 0f       	add	r16, r16
     d36:	11 1f       	adc	r17, r17
     d38:	2a 95       	dec	r18
     d3a:	e2 f7       	brpl	.-8      	; 0xd34 <draw_game+0x3c>
     d3c:	8f 81       	ldd	r24, Y+7	; 0x07
     d3e:	0e 94 5d 06 	call	0xcba	; 0xcba <x_offset>
     d42:	48 2f       	mov	r20, r24
     d44:	84 2f       	mov	r24, r20
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	88 0f       	add	r24, r24
     d4a:	99 1f       	adc	r25, r25
     d4c:	2b 81       	ldd	r18, Y+3	; 0x03
     d4e:	3c 81       	ldd	r19, Y+4	; 0x04
     d50:	82 0f       	add	r24, r18
     d52:	93 1f       	adc	r25, r19
     d54:	24 2f       	mov	r18, r20
     d56:	30 e0       	ldi	r19, 0x00	; 0
     d58:	22 0f       	add	r18, r18
     d5a:	33 1f       	adc	r19, r19
     d5c:	4b 81       	ldd	r20, Y+3	; 0x03
     d5e:	5c 81       	ldd	r21, Y+4	; 0x04
     d60:	24 0f       	add	r18, r20
     d62:	35 1f       	adc	r19, r21
     d64:	f9 01       	movw	r30, r18
     d66:	20 81       	ld	r18, Z
     d68:	31 81       	ldd	r19, Z+1	; 0x01
     d6a:	a8 01       	movw	r20, r16
     d6c:	24 2b       	or	r18, r20
     d6e:	35 2b       	or	r19, r21
     d70:	fc 01       	movw	r30, r24
     d72:	31 83       	std	Z+1, r19	; 0x01
     d74:	20 83       	st	Z, r18
	for(Player_t player = 0; player < 2; player++)
     d76:	19 82       	std	Y+1, r1	; 0x01
     d78:	6e c0       	rjmp	.+220    	; 0xe56 <draw_game+0x15e>
	{
		for(uint8_t i = 0; i < snakes[player]->length; i++)
     d7a:	1a 82       	std	Y+2, r1	; 0x02
     d7c:	57 c0       	rjmp	.+174    	; 0xe2c <draw_game+0x134>
		{
			framebuffer[x_offset(snakes[player]->pixels[i])] |= _BV((SCREEN_DIMENSION_Y - (y_offset(snakes[player]->pixels[i])+1)));
     d7e:	89 81       	ldd	r24, Y+1	; 0x01
     d80:	88 2f       	mov	r24, r24
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	88 0f       	add	r24, r24
     d86:	99 1f       	adc	r25, r25
     d88:	2d 81       	ldd	r18, Y+5	; 0x05
     d8a:	3e 81       	ldd	r19, Y+6	; 0x06
     d8c:	82 0f       	add	r24, r18
     d8e:	93 1f       	adc	r25, r19
     d90:	fc 01       	movw	r30, r24
     d92:	20 81       	ld	r18, Z
     d94:	31 81       	ldd	r19, Z+1	; 0x01
     d96:	8a 81       	ldd	r24, Y+2	; 0x02
     d98:	88 2f       	mov	r24, r24
     d9a:	90 e0       	ldi	r25, 0x00	; 0
     d9c:	82 0f       	add	r24, r18
     d9e:	93 1f       	adc	r25, r19
     da0:	04 96       	adiw	r24, 0x04	; 4
     da2:	fc 01       	movw	r30, r24
     da4:	80 81       	ld	r24, Z
     da6:	0e 94 4a 06 	call	0xc94	; 0xc94 <y_offset>
     daa:	88 2f       	mov	r24, r24
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	29 e0       	ldi	r18, 0x09	; 9
     db0:	30 e0       	ldi	r19, 0x00	; 0
     db2:	28 1b       	sub	r18, r24
     db4:	39 0b       	sbc	r19, r25
     db6:	81 e0       	ldi	r24, 0x01	; 1
     db8:	90 e0       	ldi	r25, 0x00	; 0
     dba:	8c 01       	movw	r16, r24
     dbc:	02 c0       	rjmp	.+4      	; 0xdc2 <draw_game+0xca>
     dbe:	00 0f       	add	r16, r16
     dc0:	11 1f       	adc	r17, r17
     dc2:	2a 95       	dec	r18
     dc4:	e2 f7       	brpl	.-8      	; 0xdbe <draw_game+0xc6>
     dc6:	89 81       	ldd	r24, Y+1	; 0x01
     dc8:	88 2f       	mov	r24, r24
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	88 0f       	add	r24, r24
     dce:	99 1f       	adc	r25, r25
     dd0:	2d 81       	ldd	r18, Y+5	; 0x05
     dd2:	3e 81       	ldd	r19, Y+6	; 0x06
     dd4:	82 0f       	add	r24, r18
     dd6:	93 1f       	adc	r25, r19
     dd8:	fc 01       	movw	r30, r24
     dda:	20 81       	ld	r18, Z
     ddc:	31 81       	ldd	r19, Z+1	; 0x01
     dde:	8a 81       	ldd	r24, Y+2	; 0x02
     de0:	88 2f       	mov	r24, r24
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	82 0f       	add	r24, r18
     de6:	93 1f       	adc	r25, r19
     de8:	04 96       	adiw	r24, 0x04	; 4
     dea:	fc 01       	movw	r30, r24
     dec:	80 81       	ld	r24, Z
     dee:	0e 94 5d 06 	call	0xcba	; 0xcba <x_offset>
     df2:	48 2f       	mov	r20, r24
     df4:	84 2f       	mov	r24, r20
     df6:	90 e0       	ldi	r25, 0x00	; 0
     df8:	88 0f       	add	r24, r24
     dfa:	99 1f       	adc	r25, r25
     dfc:	2b 81       	ldd	r18, Y+3	; 0x03
     dfe:	3c 81       	ldd	r19, Y+4	; 0x04
     e00:	82 0f       	add	r24, r18
     e02:	93 1f       	adc	r25, r19
     e04:	24 2f       	mov	r18, r20
     e06:	30 e0       	ldi	r19, 0x00	; 0
     e08:	22 0f       	add	r18, r18
     e0a:	33 1f       	adc	r19, r19
     e0c:	4b 81       	ldd	r20, Y+3	; 0x03
     e0e:	5c 81       	ldd	r21, Y+4	; 0x04
     e10:	24 0f       	add	r18, r20
     e12:	35 1f       	adc	r19, r21
     e14:	f9 01       	movw	r30, r18
     e16:	20 81       	ld	r18, Z
     e18:	31 81       	ldd	r19, Z+1	; 0x01
     e1a:	a8 01       	movw	r20, r16
     e1c:	24 2b       	or	r18, r20
     e1e:	35 2b       	or	r19, r21
     e20:	fc 01       	movw	r30, r24
     e22:	31 83       	std	Z+1, r19	; 0x01
     e24:	20 83       	st	Z, r18
void draw_game(uint16_t* framebuffer, snake_t **snakes, uint8_t food_location)
{
	framebuffer[x_offset(food_location)] |=  _BV((SCREEN_DIMENSION_Y - (y_offset(food_location)+1)));
	for(Player_t player = 0; player < 2; player++)
	{
		for(uint8_t i = 0; i < snakes[player]->length; i++)
     e26:	8a 81       	ldd	r24, Y+2	; 0x02
     e28:	8f 5f       	subi	r24, 0xFF	; 255
     e2a:	8a 83       	std	Y+2, r24	; 0x02
     e2c:	89 81       	ldd	r24, Y+1	; 0x01
     e2e:	88 2f       	mov	r24, r24
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	2d 81       	ldd	r18, Y+5	; 0x05
     e38:	3e 81       	ldd	r19, Y+6	; 0x06
     e3a:	82 0f       	add	r24, r18
     e3c:	93 1f       	adc	r25, r19
     e3e:	fc 01       	movw	r30, r24
     e40:	80 81       	ld	r24, Z
     e42:	91 81       	ldd	r25, Z+1	; 0x01
     e44:	fc 01       	movw	r30, r24
     e46:	93 81       	ldd	r25, Z+3	; 0x03
     e48:	8a 81       	ldd	r24, Y+2	; 0x02
     e4a:	89 17       	cp	r24, r25
     e4c:	08 f4       	brcc	.+2      	; 0xe50 <draw_game+0x158>
     e4e:	97 cf       	rjmp	.-210    	; 0xd7e <draw_game+0x86>
	return pixel_id % SCREEN_DIMENSION_X;
}
void draw_game(uint16_t* framebuffer, snake_t **snakes, uint8_t food_location)
{
	framebuffer[x_offset(food_location)] |=  _BV((SCREEN_DIMENSION_Y - (y_offset(food_location)+1)));
	for(Player_t player = 0; player < 2; player++)
     e50:	89 81       	ldd	r24, Y+1	; 0x01
     e52:	8f 5f       	subi	r24, 0xFF	; 255
     e54:	89 83       	std	Y+1, r24	; 0x01
     e56:	89 81       	ldd	r24, Y+1	; 0x01
     e58:	82 30       	cpi	r24, 0x02	; 2
     e5a:	08 f4       	brcc	.+2      	; 0xe5e <draw_game+0x166>
     e5c:	8e cf       	rjmp	.-228    	; 0xd7a <draw_game+0x82>
		for(uint8_t i = 0; i < snakes[player]->length; i++)
		{
			framebuffer[x_offset(snakes[player]->pixels[i])] |= _BV((SCREEN_DIMENSION_Y - (y_offset(snakes[player]->pixels[i])+1)));
		}
	}
}
     e5e:	00 00       	nop
     e60:	27 96       	adiw	r28, 0x07	; 7
     e62:	0f b6       	in	r0, 0x3f	; 63
     e64:	f8 94       	cli
     e66:	de bf       	out	0x3e, r29	; 62
     e68:	0f be       	out	0x3f, r0	; 63
     e6a:	cd bf       	out	0x3d, r28	; 61
     e6c:	df 91       	pop	r29
     e6e:	cf 91       	pop	r28
     e70:	1f 91       	pop	r17
     e72:	0f 91       	pop	r16
     e74:	08 95       	ret

00000e76 <mod>:

int16_t mod(int16_t a, int16_t b)
{
     e76:	cf 93       	push	r28
     e78:	df 93       	push	r29
     e7a:	00 d0       	rcall	.+0      	; 0xe7c <mod+0x6>
     e7c:	00 d0       	rcall	.+0      	; 0xe7e <mod+0x8>
     e7e:	00 d0       	rcall	.+0      	; 0xe80 <mod+0xa>
     e80:	cd b7       	in	r28, 0x3d	; 61
     e82:	de b7       	in	r29, 0x3e	; 62
     e84:	9c 83       	std	Y+4, r25	; 0x04
     e86:	8b 83       	std	Y+3, r24	; 0x03
     e88:	7e 83       	std	Y+6, r23	; 0x06
     e8a:	6d 83       	std	Y+5, r22	; 0x05
	int16_t r = a % b;
     e8c:	8b 81       	ldd	r24, Y+3	; 0x03
     e8e:	9c 81       	ldd	r25, Y+4	; 0x04
     e90:	2d 81       	ldd	r18, Y+5	; 0x05
     e92:	3e 81       	ldd	r19, Y+6	; 0x06
     e94:	b9 01       	movw	r22, r18
     e96:	0e 94 fa 26 	call	0x4df4	; 0x4df4 <__divmodhi4>
     e9a:	9a 83       	std	Y+2, r25	; 0x02
     e9c:	89 83       	std	Y+1, r24	; 0x01
	return r < 0 ? r + b : r;
     e9e:	89 81       	ldd	r24, Y+1	; 0x01
     ea0:	9a 81       	ldd	r25, Y+2	; 0x02
     ea2:	99 23       	and	r25, r25
     ea4:	3c f4       	brge	.+14     	; 0xeb4 <mod+0x3e>
     ea6:	29 81       	ldd	r18, Y+1	; 0x01
     ea8:	3a 81       	ldd	r19, Y+2	; 0x02
     eaa:	8d 81       	ldd	r24, Y+5	; 0x05
     eac:	9e 81       	ldd	r25, Y+6	; 0x06
     eae:	82 0f       	add	r24, r18
     eb0:	93 1f       	adc	r25, r19
     eb2:	02 c0       	rjmp	.+4      	; 0xeb8 <mod+0x42>
     eb4:	89 81       	ldd	r24, Y+1	; 0x01
     eb6:	9a 81       	ldd	r25, Y+2	; 0x02
     eb8:	26 96       	adiw	r28, 0x06	; 6
     eba:	0f b6       	in	r0, 0x3f	; 63
     ebc:	f8 94       	cli
     ebe:	de bf       	out	0x3e, r29	; 62
     ec0:	0f be       	out	0x3f, r0	; 63
     ec2:	cd bf       	out	0x3d, r28	; 61
     ec4:	df 91       	pop	r29
     ec6:	cf 91       	pop	r28
     ec8:	08 95       	ret

00000eca <read_joystick>:
     eca:	cf 93       	push	r28
     ecc:	df 93       	push	r29
     ece:	cd b7       	in	r28, 0x3d	; 61
     ed0:	de b7       	in	r29, 0x3e	; 62
     ed2:	86 e2       	ldi	r24, 0x26	; 38
     ed4:	90 e0       	ldi	r25, 0x00	; 0
     ed6:	fc 01       	movw	r30, r24
     ed8:	80 81       	ld	r24, Z
     eda:	28 2f       	mov	r18, r24
     edc:	20 78       	andi	r18, 0x80	; 128
     ede:	86 e2       	ldi	r24, 0x26	; 38
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	fc 01       	movw	r30, r24
     ee4:	80 81       	ld	r24, Z
     ee6:	82 70       	andi	r24, 0x02	; 2
     ee8:	28 2b       	or	r18, r24
     eea:	86 e2       	ldi	r24, 0x26	; 38
     eec:	90 e0       	ldi	r25, 0x00	; 0
     eee:	fc 01       	movw	r30, r24
     ef0:	80 81       	ld	r24, Z
     ef2:	80 74       	andi	r24, 0x40	; 64
     ef4:	28 2b       	or	r18, r24
     ef6:	86 e2       	ldi	r24, 0x26	; 38
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	fc 01       	movw	r30, r24
     efc:	80 81       	ld	r24, Z
     efe:	81 70       	andi	r24, 0x01	; 1
     f00:	28 2b       	or	r18, r24
     f02:	89 e2       	ldi	r24, 0x29	; 41
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	fc 01       	movw	r30, r24
     f08:	80 81       	ld	r24, Z
     f0a:	88 70       	andi	r24, 0x08	; 8
     f0c:	82 2b       	or	r24, r18
     f0e:	df 91       	pop	r29
     f10:	cf 91       	pop	r28
     f12:	08 95       	ret

00000f14 <joystick_task>:
     f14:	cf 93       	push	r28
     f16:	df 93       	push	r29
     f18:	00 d0       	rcall	.+0      	; 0xf1a <joystick_task+0x6>
     f1a:	00 d0       	rcall	.+0      	; 0xf1c <joystick_task+0x8>
     f1c:	cd b7       	in	r28, 0x3d	; 61
     f1e:	de b7       	in	r29, 0x3e	; 62
     f20:	9c 83       	std	Y+4, r25	; 0x04
     f22:	8b 83       	std	Y+3, r24	; 0x03
     f24:	0e 94 35 21 	call	0x426a	; 0x426a <xTaskGetTickCount>
     f28:	9a 83       	std	Y+2, r25	; 0x02
     f2a:	89 83       	std	Y+1, r24	; 0x01
     f2c:	62 e3       	ldi	r22, 0x32	; 50
     f2e:	70 e0       	ldi	r23, 0x00	; 0
     f30:	ce 01       	movw	r24, r28
     f32:	01 96       	adiw	r24, 0x01	; 1
     f34:	0e 94 bf 1f 	call	0x3f7e	; 0x3f7e <vTaskDelayUntil>
     f38:	0e 94 65 07 	call	0xeca	; 0xeca <read_joystick>
     f3c:	88 23       	and	r24, r24
     f3e:	24 f0       	brlt	.+8      	; 0xf48 <joystick_task+0x34>
     f40:	64 e0       	ldi	r22, 0x04	; 4
     f42:	80 e0       	ldi	r24, 0x00	; 0
     f44:	0e 94 8d 01 	call	0x31a	; 0x31a <snake_change_direction>
     f48:	0e 94 65 07 	call	0xeca	; 0xeca <read_joystick>
     f4c:	88 2f       	mov	r24, r24
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	82 70       	andi	r24, 0x02	; 2
     f52:	99 27       	eor	r25, r25
     f54:	89 2b       	or	r24, r25
     f56:	21 f4       	brne	.+8      	; 0xf60 <joystick_task+0x4c>
     f58:	66 e0       	ldi	r22, 0x06	; 6
     f5a:	80 e0       	ldi	r24, 0x00	; 0
     f5c:	0e 94 8d 01 	call	0x31a	; 0x31a <snake_change_direction>
     f60:	0e 94 65 07 	call	0xeca	; 0xeca <read_joystick>
     f64:	88 2f       	mov	r24, r24
     f66:	90 e0       	ldi	r25, 0x00	; 0
     f68:	80 74       	andi	r24, 0x40	; 64
     f6a:	99 27       	eor	r25, r25
     f6c:	89 2b       	or	r24, r25
     f6e:	21 f4       	brne	.+8      	; 0xf78 <joystick_task+0x64>
     f70:	63 e0       	ldi	r22, 0x03	; 3
     f72:	80 e0       	ldi	r24, 0x00	; 0
     f74:	0e 94 8d 01 	call	0x31a	; 0x31a <snake_change_direction>
     f78:	0e 94 65 07 	call	0xeca	; 0xeca <read_joystick>
     f7c:	88 2f       	mov	r24, r24
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	81 70       	andi	r24, 0x01	; 1
     f82:	99 27       	eor	r25, r25
     f84:	89 2b       	or	r24, r25
     f86:	21 f4       	brne	.+8      	; 0xf90 <joystick_task+0x7c>
     f88:	61 e0       	ldi	r22, 0x01	; 1
     f8a:	80 e0       	ldi	r24, 0x00	; 0
     f8c:	0e 94 8d 01 	call	0x31a	; 0x31a <snake_change_direction>
     f90:	0e 94 65 07 	call	0xeca	; 0xeca <read_joystick>
     f94:	88 2f       	mov	r24, r24
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	88 70       	andi	r24, 0x08	; 8
     f9a:	99 27       	eor	r25, r25
     f9c:	89 2b       	or	r24, r25
     f9e:	31 f6       	brne	.-116    	; 0xf2c <joystick_task+0x18>
     fa0:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <restart_game>
     fa4:	c3 cf       	rjmp	.-122    	; 0xf2c <joystick_task+0x18>

00000fa6 <vApplicationIdleHook>:
     fa6:	cf 93       	push	r28
     fa8:	df 93       	push	r29
     faa:	cd b7       	in	r28, 0x3d	; 61
     fac:	de b7       	in	r29, 0x3e	; 62
     fae:	00 00       	nop
     fb0:	df 91       	pop	r29
     fb2:	cf 91       	pop	r28
     fb4:	08 95       	ret

00000fb6 <prepare_shiftregister>:
     fb6:	cf 93       	push	r28
     fb8:	df 93       	push	r29
     fba:	cd b7       	in	r28, 0x3d	; 61
     fbc:	de b7       	in	r29, 0x3e	; 62
     fbe:	8b e2       	ldi	r24, 0x2B	; 43
     fc0:	90 e0       	ldi	r25, 0x00	; 0
     fc2:	2b e2       	ldi	r18, 0x2B	; 43
     fc4:	30 e0       	ldi	r19, 0x00	; 0
     fc6:	f9 01       	movw	r30, r18
     fc8:	20 81       	ld	r18, Z
     fca:	24 60       	ori	r18, 0x04	; 4
     fcc:	fc 01       	movw	r30, r24
     fce:	20 83       	st	Z, r18
     fd0:	00 00       	nop
     fd2:	df 91       	pop	r29
     fd4:	cf 91       	pop	r28
     fd6:	08 95       	ret

00000fd8 <clock_shift_register_and_prepare_for_next_col>:
     fd8:	cf 93       	push	r28
     fda:	df 93       	push	r29
     fdc:	cd b7       	in	r28, 0x3d	; 61
     fde:	de b7       	in	r29, 0x3e	; 62
     fe0:	8b e2       	ldi	r24, 0x2B	; 43
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	2b e2       	ldi	r18, 0x2B	; 43
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	f9 01       	movw	r30, r18
     fea:	20 81       	ld	r18, Z
     fec:	20 62       	ori	r18, 0x20	; 32
     fee:	fc 01       	movw	r30, r24
     ff0:	20 83       	st	Z, r18
     ff2:	8b e2       	ldi	r24, 0x2B	; 43
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	2b e2       	ldi	r18, 0x2B	; 43
     ff8:	30 e0       	ldi	r19, 0x00	; 0
     ffa:	f9 01       	movw	r30, r18
     ffc:	20 81       	ld	r18, Z
     ffe:	2f 7d       	andi	r18, 0xDF	; 223
    1000:	fc 01       	movw	r30, r24
    1002:	20 83       	st	Z, r18
    1004:	8b e2       	ldi	r24, 0x2B	; 43
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	2b e2       	ldi	r18, 0x2B	; 43
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	f9 01       	movw	r30, r18
    100e:	20 81       	ld	r18, Z
    1010:	20 61       	ori	r18, 0x10	; 16
    1012:	fc 01       	movw	r30, r24
    1014:	20 83       	st	Z, r18
    1016:	8b e2       	ldi	r24, 0x2B	; 43
    1018:	90 e0       	ldi	r25, 0x00	; 0
    101a:	2b e2       	ldi	r18, 0x2B	; 43
    101c:	30 e0       	ldi	r19, 0x00	; 0
    101e:	f9 01       	movw	r30, r18
    1020:	20 81       	ld	r18, Z
    1022:	2f 7e       	andi	r18, 0xEF	; 239
    1024:	fc 01       	movw	r30, r24
    1026:	20 83       	st	Z, r18
    1028:	8b e2       	ldi	r24, 0x2B	; 43
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	2b e2       	ldi	r18, 0x2B	; 43
    102e:	30 e0       	ldi	r19, 0x00	; 0
    1030:	f9 01       	movw	r30, r18
    1032:	20 81       	ld	r18, Z
    1034:	2b 7f       	andi	r18, 0xFB	; 251
    1036:	fc 01       	movw	r30, r24
    1038:	20 83       	st	Z, r18
    103a:	00 00       	nop
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	08 95       	ret

00001042 <load_col_value>:
    1042:	cf 93       	push	r28
    1044:	df 93       	push	r29
    1046:	00 d0       	rcall	.+0      	; 0x1048 <load_col_value+0x6>
    1048:	cd b7       	in	r28, 0x3d	; 61
    104a:	de b7       	in	r29, 0x3e	; 62
    104c:	9a 83       	std	Y+2, r25	; 0x02
    104e:	89 83       	std	Y+1, r24	; 0x01
    1050:	82 e2       	ldi	r24, 0x22	; 34
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	29 81       	ldd	r18, Y+1	; 0x01
    1056:	20 95       	com	r18
    1058:	fc 01       	movw	r30, r24
    105a:	20 83       	st	Z, r18
    105c:	85 e2       	ldi	r24, 0x25	; 37
    105e:	90 e0       	ldi	r25, 0x00	; 0
    1060:	25 e2       	ldi	r18, 0x25	; 37
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	f9 01       	movw	r30, r18
    1066:	20 81       	ld	r18, Z
    1068:	23 60       	ori	r18, 0x03	; 3
    106a:	fc 01       	movw	r30, r24
    106c:	20 83       	st	Z, r18
    106e:	85 e2       	ldi	r24, 0x25	; 37
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	25 e2       	ldi	r18, 0x25	; 37
    1074:	30 e0       	ldi	r19, 0x00	; 0
    1076:	f9 01       	movw	r30, r18
    1078:	40 81       	ld	r20, Z
    107a:	29 81       	ldd	r18, Y+1	; 0x01
    107c:	3a 81       	ldd	r19, Y+2	; 0x02
    107e:	23 2f       	mov	r18, r19
    1080:	33 27       	eor	r19, r19
    1082:	23 70       	andi	r18, 0x03	; 3
    1084:	20 95       	com	r18
    1086:	24 23       	and	r18, r20
    1088:	fc 01       	movw	r30, r24
    108a:	20 83       	st	Z, r18
    108c:	00 00       	nop
    108e:	0f 90       	pop	r0
    1090:	0f 90       	pop	r0
    1092:	df 91       	pop	r29
    1094:	cf 91       	pop	r28
    1096:	08 95       	ret

00001098 <handle_display>:
    1098:	cf 93       	push	r28
    109a:	df 93       	push	r29
    109c:	cd b7       	in	r28, 0x3d	; 61
    109e:	de b7       	in	r29, 0x3e	; 62
    10a0:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <col.2169>
    10a4:	88 23       	and	r24, r24
    10a6:	11 f4       	brne	.+4      	; 0x10ac <handle_display+0x14>
    10a8:	0e 94 db 07 	call	0xfb6	; 0xfb6 <prepare_shiftregister>
    10ac:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <col.2169>
    10b0:	88 2f       	mov	r24, r24
    10b2:	90 e0       	ldi	r25, 0x00	; 0
    10b4:	88 0f       	add	r24, r24
    10b6:	99 1f       	adc	r25, r25
    10b8:	8f 5f       	subi	r24, 0xFF	; 255
    10ba:	9e 4f       	sbci	r25, 0xFE	; 254
    10bc:	fc 01       	movw	r30, r24
    10be:	80 81       	ld	r24, Z
    10c0:	91 81       	ldd	r25, Z+1	; 0x01
    10c2:	0e 94 21 08 	call	0x1042	; 0x1042 <load_col_value>
    10c6:	0e 94 ec 07 	call	0xfd8	; 0xfd8 <clock_shift_register_and_prepare_for_next_col>
    10ca:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <col.2169>
    10ce:	8f 5f       	subi	r24, 0xFF	; 255
    10d0:	80 93 a4 01 	sts	0x01A4, r24	; 0x8001a4 <col.2169>
    10d4:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <col.2169>
    10d8:	8e 30       	cpi	r24, 0x0E	; 14
    10da:	10 f0       	brcs	.+4      	; 0x10e0 <handle_display+0x48>
    10dc:	10 92 a4 01 	sts	0x01A4, r1	; 0x8001a4 <col.2169>
    10e0:	00 00       	nop
    10e2:	df 91       	pop	r29
    10e4:	cf 91       	pop	r28
    10e6:	08 95       	ret

000010e8 <vApplicationStackOverflowHook>:
    10e8:	cf 93       	push	r28
    10ea:	df 93       	push	r29
    10ec:	00 d0       	rcall	.+0      	; 0x10ee <vApplicationStackOverflowHook+0x6>
    10ee:	00 d0       	rcall	.+0      	; 0x10f0 <vApplicationStackOverflowHook+0x8>
    10f0:	cd b7       	in	r28, 0x3d	; 61
    10f2:	de b7       	in	r29, 0x3e	; 62
    10f4:	9a 83       	std	Y+2, r25	; 0x02
    10f6:	89 83       	std	Y+1, r24	; 0x01
    10f8:	7c 83       	std	Y+4, r23	; 0x04
    10fa:	6b 83       	std	Y+3, r22	; 0x03
    10fc:	00 00       	nop
    10fe:	0f 90       	pop	r0
    1100:	0f 90       	pop	r0
    1102:	0f 90       	pop	r0
    1104:	0f 90       	pop	r0
    1106:	df 91       	pop	r29
    1108:	cf 91       	pop	r28
    110a:	08 95       	ret

0000110c <vApplicationMallocFailedHook>:
    110c:	cf 93       	push	r28
    110e:	df 93       	push	r29
    1110:	cd b7       	in	r28, 0x3d	; 61
    1112:	de b7       	in	r29, 0x3e	; 62
    1114:	00 00       	nop
    1116:	df 91       	pop	r29
    1118:	cf 91       	pop	r28
    111a:	08 95       	ret

0000111c <__vector_8>:
    111c:	1f 92       	push	r1
    111e:	0f 92       	push	r0
    1120:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1124:	0f 92       	push	r0
    1126:	11 24       	eor	r1, r1
    1128:	8f 93       	push	r24
    112a:	cf 93       	push	r28
    112c:	df 93       	push	r29
    112e:	cd b7       	in	r28, 0x3d	; 61
    1130:	de b7       	in	r29, 0x3e	; 62
    1132:	81 e0       	ldi	r24, 0x01	; 1
    1134:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <wdt_ran>
    1138:	00 00       	nop
    113a:	df 91       	pop	r29
    113c:	cf 91       	pop	r28
    113e:	8f 91       	pop	r24
    1140:	0f 90       	pop	r0
    1142:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1146:	0f 90       	pop	r0
    1148:	1f 90       	pop	r1
    114a:	18 95       	reti

0000114c <main>:
    114c:	ef 92       	push	r14
    114e:	ff 92       	push	r15
    1150:	0f 93       	push	r16
    1152:	cf 93       	push	r28
    1154:	df 93       	push	r29
    1156:	00 d0       	rcall	.+0      	; 0x1158 <main+0xc>
    1158:	1f 92       	push	r1
    115a:	cd b7       	in	r28, 0x3d	; 61
    115c:	de b7       	in	r29, 0x3e	; 62
    115e:	f8 94       	cli
    1160:	84 e5       	ldi	r24, 0x54	; 84
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	24 e5       	ldi	r18, 0x54	; 84
    1166:	30 e0       	ldi	r19, 0x00	; 0
    1168:	f9 01       	movw	r30, r18
    116a:	20 81       	ld	r18, Z
    116c:	27 7f       	andi	r18, 0xF7	; 247
    116e:	fc 01       	movw	r30, r24
    1170:	20 83       	st	Z, r18
    1172:	80 e6       	ldi	r24, 0x60	; 96
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	20 e6       	ldi	r18, 0x60	; 96
    1178:	30 e0       	ldi	r19, 0x00	; 0
    117a:	f9 01       	movw	r30, r18
    117c:	20 81       	ld	r18, Z
    117e:	20 61       	ori	r18, 0x10	; 16
    1180:	fc 01       	movw	r30, r24
    1182:	20 83       	st	Z, r18
    1184:	80 e6       	ldi	r24, 0x60	; 96
    1186:	90 e0       	ldi	r25, 0x00	; 0
    1188:	20 e4       	ldi	r18, 0x40	; 64
    118a:	fc 01       	movw	r30, r24
    118c:	20 83       	st	Z, r18
    118e:	78 94       	sei
    1190:	05 c0       	rjmp	.+10     	; 0x119c <main+0x50>
    1192:	80 91 41 08 	lds	r24, 0x0841	; 0x800841 <rng_seed>
    1196:	8f 5f       	subi	r24, 0xFF	; 255
    1198:	80 93 41 08 	sts	0x0841, r24	; 0x800841 <rng_seed>
    119c:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <wdt_ran>
    11a0:	81 e0       	ldi	r24, 0x01	; 1
    11a2:	89 27       	eor	r24, r25
    11a4:	88 23       	and	r24, r24
    11a6:	a9 f7       	brne	.-22     	; 0x1192 <main+0x46>
    11a8:	f8 94       	cli
    11aa:	0e 94 ae 0e 	call	0x1d5c	; 0x1d5c <init_board>
    11ae:	8b e2       	ldi	r24, 0x2B	; 43
    11b0:	90 e0       	ldi	r25, 0x00	; 0
    11b2:	2b e2       	ldi	r18, 0x2B	; 43
    11b4:	30 e0       	ldi	r19, 0x00	; 0
    11b6:	f9 01       	movw	r30, r18
    11b8:	20 81       	ld	r18, Z
    11ba:	2f 7b       	andi	r18, 0xBF	; 191
    11bc:	fc 01       	movw	r30, r24
    11be:	20 83       	st	Z, r18
    11c0:	e1 2c       	mov	r14, r1
    11c2:	f1 2c       	mov	r15, r1
    11c4:	02 e0       	ldi	r16, 0x02	; 2
    11c6:	20 e0       	ldi	r18, 0x00	; 0
    11c8:	30 e0       	ldi	r19, 0x00	; 0
    11ca:	4a ef       	ldi	r20, 0xFA	; 250
    11cc:	50 e0       	ldi	r21, 0x00	; 0
    11ce:	6b e7       	ldi	r22, 0x7B	; 123
    11d0:	71 e0       	ldi	r23, 0x01	; 1
    11d2:	84 ec       	ldi	r24, 0xC4	; 196
    11d4:	9b e0       	ldi	r25, 0x0B	; 11
    11d6:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <xTaskCreate>
    11da:	89 83       	std	Y+1, r24	; 0x01
    11dc:	e1 2c       	mov	r14, r1
    11de:	f1 2c       	mov	r15, r1
    11e0:	04 e0       	ldi	r16, 0x04	; 4
    11e2:	20 e0       	ldi	r18, 0x00	; 0
    11e4:	30 e0       	ldi	r19, 0x00	; 0
    11e6:	47 e8       	ldi	r20, 0x87	; 135
    11e8:	50 e0       	ldi	r21, 0x00	; 0
    11ea:	66 e8       	ldi	r22, 0x86	; 134
    11ec:	71 e0       	ldi	r23, 0x01	; 1
    11ee:	8a e8       	ldi	r24, 0x8A	; 138
    11f0:	97 e0       	ldi	r25, 0x07	; 7
    11f2:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <xTaskCreate>
    11f6:	8a 83       	std	Y+2, r24	; 0x02
    11f8:	e1 2c       	mov	r14, r1
    11fa:	f1 2c       	mov	r15, r1
    11fc:	03 e0       	ldi	r16, 0x03	; 3
    11fe:	21 e0       	ldi	r18, 0x01	; 1
    1200:	31 e0       	ldi	r19, 0x01	; 1
    1202:	47 e8       	ldi	r20, 0x87	; 135
    1204:	50 e0       	ldi	r21, 0x00	; 0
    1206:	6f e8       	ldi	r22, 0x8F	; 143
    1208:	71 e0       	ldi	r23, 0x01	; 1
    120a:	86 e3       	ldi	r24, 0x36	; 54
    120c:	92 e0       	ldi	r25, 0x02	; 2
    120e:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <xTaskCreate>
    1212:	8b 83       	std	Y+3, r24	; 0x03
    1214:	8c e4       	ldi	r24, 0x4C	; 76
    1216:	98 e0       	ldi	r25, 0x08	; 8
    1218:	0e 94 33 0e 	call	0x1c66	; 0x1c66 <init_display_timer>
    121c:	78 94       	sei
    121e:	0e 94 5c 20 	call	0x40b8	; 0x40b8 <vTaskStartScheduler>
    1222:	ff cf       	rjmp	.-2      	; 0x1222 <main+0xd6>

00001224 <compute_crc8>:
    1224:	cf 93       	push	r28
    1226:	df 93       	push	r29
    1228:	cd b7       	in	r28, 0x3d	; 61
    122a:	de b7       	in	r29, 0x3e	; 62
    122c:	27 97       	sbiw	r28, 0x07	; 7
    122e:	0f b6       	in	r0, 0x3f	; 63
    1230:	f8 94       	cli
    1232:	de bf       	out	0x3e, r29	; 62
    1234:	0f be       	out	0x3f, r0	; 63
    1236:	cd bf       	out	0x3d, r28	; 61
    1238:	9e 83       	std	Y+6, r25	; 0x06
    123a:	8d 83       	std	Y+5, r24	; 0x05
    123c:	6f 83       	std	Y+7, r22	; 0x07
    123e:	19 82       	std	Y+1, r1	; 0x01
    1240:	1a 82       	std	Y+2, r1	; 0x02
    1242:	26 c0       	rjmp	.+76     	; 0x1290 <compute_crc8+0x6c>
    1244:	8a 81       	ldd	r24, Y+2	; 0x02
    1246:	88 2f       	mov	r24, r24
    1248:	90 e0       	ldi	r25, 0x00	; 0
    124a:	2d 81       	ldd	r18, Y+5	; 0x05
    124c:	3e 81       	ldd	r19, Y+6	; 0x06
    124e:	82 0f       	add	r24, r18
    1250:	93 1f       	adc	r25, r19
    1252:	fc 01       	movw	r30, r24
    1254:	80 81       	ld	r24, Z
    1256:	99 81       	ldd	r25, Y+1	; 0x01
    1258:	89 27       	eor	r24, r25
    125a:	89 83       	std	Y+1, r24	; 0x01
    125c:	1b 82       	std	Y+3, r1	; 0x03
    125e:	12 c0       	rjmp	.+36     	; 0x1284 <compute_crc8+0x60>
    1260:	89 81       	ldd	r24, Y+1	; 0x01
    1262:	88 1f       	adc	r24, r24
    1264:	88 27       	eor	r24, r24
    1266:	88 1f       	adc	r24, r24
    1268:	8c 83       	std	Y+4, r24	; 0x04
    126a:	89 81       	ldd	r24, Y+1	; 0x01
    126c:	88 0f       	add	r24, r24
    126e:	89 83       	std	Y+1, r24	; 0x01
    1270:	8c 81       	ldd	r24, Y+4	; 0x04
    1272:	88 23       	and	r24, r24
    1274:	21 f0       	breq	.+8      	; 0x127e <compute_crc8+0x5a>
    1276:	99 81       	ldd	r25, Y+1	; 0x01
    1278:	87 e0       	ldi	r24, 0x07	; 7
    127a:	89 27       	eor	r24, r25
    127c:	89 83       	std	Y+1, r24	; 0x01
    127e:	8b 81       	ldd	r24, Y+3	; 0x03
    1280:	8f 5f       	subi	r24, 0xFF	; 255
    1282:	8b 83       	std	Y+3, r24	; 0x03
    1284:	8b 81       	ldd	r24, Y+3	; 0x03
    1286:	88 30       	cpi	r24, 0x08	; 8
    1288:	58 f3       	brcs	.-42     	; 0x1260 <compute_crc8+0x3c>
    128a:	8a 81       	ldd	r24, Y+2	; 0x02
    128c:	8f 5f       	subi	r24, 0xFF	; 255
    128e:	8a 83       	std	Y+2, r24	; 0x02
    1290:	9a 81       	ldd	r25, Y+2	; 0x02
    1292:	8f 81       	ldd	r24, Y+7	; 0x07
    1294:	98 17       	cp	r25, r24
    1296:	b0 f2       	brcs	.-84     	; 0x1244 <compute_crc8+0x20>
    1298:	89 81       	ldd	r24, Y+1	; 0x01
    129a:	27 96       	adiw	r28, 0x07	; 7
    129c:	0f b6       	in	r0, 0x3f	; 63
    129e:	f8 94       	cli
    12a0:	de bf       	out	0x3e, r29	; 62
    12a2:	0f be       	out	0x3f, r0	; 63
    12a4:	cd bf       	out	0x3d, r28	; 61
    12a6:	df 91       	pop	r29
    12a8:	cf 91       	pop	r28
    12aa:	08 95       	ret

000012ac <unpack_data_frame>:
    12ac:	cf 93       	push	r28
    12ae:	df 93       	push	r29
    12b0:	cd b7       	in	r28, 0x3d	; 61
    12b2:	de b7       	in	r29, 0x3e	; 62
    12b4:	28 97       	sbiw	r28, 0x08	; 8
    12b6:	0f b6       	in	r0, 0x3f	; 63
    12b8:	f8 94       	cli
    12ba:	de bf       	out	0x3e, r29	; 62
    12bc:	0f be       	out	0x3f, r0	; 63
    12be:	cd bf       	out	0x3d, r28	; 61
    12c0:	9d 83       	std	Y+5, r25	; 0x05
    12c2:	8c 83       	std	Y+4, r24	; 0x04
    12c4:	6e 83       	std	Y+6, r22	; 0x06
    12c6:	58 87       	std	Y+8, r21	; 0x08
    12c8:	4f 83       	std	Y+7, r20	; 0x07
    12ca:	8e 81       	ldd	r24, Y+6	; 0x06
    12cc:	84 30       	cpi	r24, 0x04	; 4
    12ce:	10 f4       	brcc	.+4      	; 0x12d4 <unpack_data_frame+0x28>
    12d0:	80 e0       	ldi	r24, 0x00	; 0
    12d2:	41 c0       	rjmp	.+130    	; 0x1356 <unpack_data_frame+0xaa>
    12d4:	8c 81       	ldd	r24, Y+4	; 0x04
    12d6:	9d 81       	ldd	r25, Y+5	; 0x05
    12d8:	fc 01       	movw	r30, r24
    12da:	80 81       	ld	r24, Z
    12dc:	0e 94 b7 0a 	call	0x156e	; 0x156e <is_start_of_frame>
    12e0:	98 2f       	mov	r25, r24
    12e2:	81 e0       	ldi	r24, 0x01	; 1
    12e4:	89 27       	eor	r24, r25
    12e6:	88 23       	and	r24, r24
    12e8:	11 f0       	breq	.+4      	; 0x12ee <unpack_data_frame+0x42>
    12ea:	80 e0       	ldi	r24, 0x00	; 0
    12ec:	34 c0       	rjmp	.+104    	; 0x1356 <unpack_data_frame+0xaa>
    12ee:	8c 81       	ldd	r24, Y+4	; 0x04
    12f0:	9d 81       	ldd	r25, Y+5	; 0x05
    12f2:	6e 81       	ldd	r22, Y+6	; 0x06
    12f4:	0e 94 df 0a 	call	0x15be	; 0x15be <get_frame_size>
    12f8:	89 83       	std	Y+1, r24	; 0x01
    12fa:	8c 81       	ldd	r24, Y+4	; 0x04
    12fc:	9d 81       	ldd	r25, Y+5	; 0x05
    12fe:	69 81       	ldd	r22, Y+1	; 0x01
    1300:	0e 94 c6 0a 	call	0x158c	; 0x158c <is_CRC_valid>
    1304:	98 2f       	mov	r25, r24
    1306:	81 e0       	ldi	r24, 0x01	; 1
    1308:	89 27       	eor	r24, r25
    130a:	88 23       	and	r24, r24
    130c:	11 f0       	breq	.+4      	; 0x1312 <unpack_data_frame+0x66>
    130e:	80 e0       	ldi	r24, 0x00	; 0
    1310:	22 c0       	rjmp	.+68     	; 0x1356 <unpack_data_frame+0xaa>
    1312:	8c 81       	ldd	r24, Y+4	; 0x04
    1314:	9d 81       	ldd	r25, Y+5	; 0x05
    1316:	fc 01       	movw	r30, r24
    1318:	81 81       	ldd	r24, Z+1	; 0x01
    131a:	8a 83       	std	Y+2, r24	; 0x02
    131c:	83 e0       	ldi	r24, 0x03	; 3
    131e:	8b 83       	std	Y+3, r24	; 0x03
    1320:	99 81       	ldd	r25, Y+1	; 0x01
    1322:	8b 81       	ldd	r24, Y+3	; 0x03
    1324:	f9 2f       	mov	r31, r25
    1326:	f8 1b       	sub	r31, r24
    1328:	8f 2f       	mov	r24, r31
    132a:	6f ef       	ldi	r22, 0xFF	; 255
    132c:	68 0f       	add	r22, r24
    132e:	8b 81       	ldd	r24, Y+3	; 0x03
    1330:	88 2f       	mov	r24, r24
    1332:	90 e0       	ldi	r25, 0x00	; 0
    1334:	2c 81       	ldd	r18, Y+4	; 0x04
    1336:	3d 81       	ldd	r19, Y+5	; 0x05
    1338:	a9 01       	movw	r20, r18
    133a:	48 0f       	add	r20, r24
    133c:	59 1f       	adc	r21, r25
    133e:	8c 81       	ldd	r24, Y+4	; 0x04
    1340:	9d 81       	ldd	r25, Y+5	; 0x05
    1342:	26 2f       	mov	r18, r22
    1344:	6e 81       	ldd	r22, Y+6	; 0x06
    1346:	0e 94 0d 01 	call	0x21a	; 0x21a <byte_unstuff>
    134a:	28 2f       	mov	r18, r24
    134c:	8f 81       	ldd	r24, Y+7	; 0x07
    134e:	98 85       	ldd	r25, Y+8	; 0x08
    1350:	fc 01       	movw	r30, r24
    1352:	20 83       	st	Z, r18
    1354:	8a 81       	ldd	r24, Y+2	; 0x02
    1356:	28 96       	adiw	r28, 0x08	; 8
    1358:	0f b6       	in	r0, 0x3f	; 63
    135a:	f8 94       	cli
    135c:	de bf       	out	0x3e, r29	; 62
    135e:	0f be       	out	0x3f, r0	; 63
    1360:	cd bf       	out	0x3d, r28	; 61
    1362:	df 91       	pop	r29
    1364:	cf 91       	pop	r28
    1366:	08 95       	ret

00001368 <get_data_frame>:
    1368:	cf 93       	push	r28
    136a:	df 93       	push	r29
    136c:	cd b7       	in	r28, 0x3d	; 61
    136e:	de b7       	in	r29, 0x3e	; 62
    1370:	2c 97       	sbiw	r28, 0x0c	; 12
    1372:	0f b6       	in	r0, 0x3f	; 63
    1374:	f8 94       	cli
    1376:	de bf       	out	0x3e, r29	; 62
    1378:	0f be       	out	0x3f, r0	; 63
    137a:	cd bf       	out	0x3d, r28	; 61
    137c:	98 87       	std	Y+8, r25	; 0x08
    137e:	8f 83       	std	Y+7, r24	; 0x07
    1380:	69 87       	std	Y+9, r22	; 0x09
    1382:	5b 87       	std	Y+11, r21	; 0x0b
    1384:	4a 87       	std	Y+10, r20	; 0x0a
    1386:	2c 87       	std	Y+12, r18	; 0x0c
    1388:	8f 81       	ldd	r24, Y+7	; 0x07
    138a:	98 85       	ldd	r25, Y+8	; 0x08
    138c:	9b 83       	std	Y+3, r25	; 0x03
    138e:	8a 83       	std	Y+2, r24	; 0x02
    1390:	89 85       	ldd	r24, Y+9	; 0x09
    1392:	88 2f       	mov	r24, r24
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	0e 94 ea 16 	call	0x2dd4	; 0x2dd4 <pvPortMalloc>
    139a:	9d 83       	std	Y+5, r25	; 0x05
    139c:	8c 83       	std	Y+4, r24	; 0x04
    139e:	8c 81       	ldd	r24, Y+4	; 0x04
    13a0:	9d 81       	ldd	r25, Y+5	; 0x05
    13a2:	89 2b       	or	r24, r25
    13a4:	11 f4       	brne	.+4      	; 0x13aa <get_data_frame+0x42>
    13a6:	80 e0       	ldi	r24, 0x00	; 0
    13a8:	7f c0       	rjmp	.+254    	; 0x14a8 <get_data_frame+0x140>
    13aa:	1e 82       	std	Y+6, r1	; 0x06
    13ac:	8c 85       	ldd	r24, Y+12	; 0x0c
    13ae:	28 2f       	mov	r18, r24
    13b0:	22 0f       	add	r18, r18
    13b2:	4c 81       	ldd	r20, Y+4	; 0x04
    13b4:	5d 81       	ldd	r21, Y+5	; 0x05
    13b6:	8a 85       	ldd	r24, Y+10	; 0x0a
    13b8:	9b 85       	ldd	r25, Y+11	; 0x0b
    13ba:	6c 85       	ldd	r22, Y+12	; 0x0c
    13bc:	0e 94 5d 00 	call	0xba	; 0xba <byte_stuff>
    13c0:	8e 83       	std	Y+6, r24	; 0x06
    13c2:	8e 81       	ldd	r24, Y+6	; 0x06
    13c4:	88 23       	and	r24, r24
    13c6:	09 f4       	brne	.+2      	; 0x13ca <get_data_frame+0x62>
    13c8:	6a c0       	rjmp	.+212    	; 0x149e <get_data_frame+0x136>
    13ca:	89 85       	ldd	r24, Y+9	; 0x09
    13cc:	28 2f       	mov	r18, r24
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	8e 81       	ldd	r24, Y+6	; 0x06
    13d2:	88 2f       	mov	r24, r24
    13d4:	90 e0       	ldi	r25, 0x00	; 0
    13d6:	04 96       	adiw	r24, 0x04	; 4
    13d8:	28 17       	cp	r18, r24
    13da:	39 07       	cpc	r19, r25
    13dc:	08 f4       	brcc	.+2      	; 0x13e0 <get_data_frame+0x78>
    13de:	5f c0       	rjmp	.+190    	; 0x149e <get_data_frame+0x136>
    13e0:	8f 81       	ldd	r24, Y+7	; 0x07
    13e2:	98 85       	ldd	r25, Y+8	; 0x08
    13e4:	9c 01       	movw	r18, r24
    13e6:	2f 5f       	subi	r18, 0xFF	; 255
    13e8:	3f 4f       	sbci	r19, 0xFF	; 255
    13ea:	38 87       	std	Y+8, r19	; 0x08
    13ec:	2f 83       	std	Y+7, r18	; 0x07
    13ee:	2f ef       	ldi	r18, 0xFF	; 255
    13f0:	fc 01       	movw	r30, r24
    13f2:	20 83       	st	Z, r18
    13f4:	8f 81       	ldd	r24, Y+7	; 0x07
    13f6:	98 85       	ldd	r25, Y+8	; 0x08
    13f8:	9c 01       	movw	r18, r24
    13fa:	2f 5f       	subi	r18, 0xFF	; 255
    13fc:	3f 4f       	sbci	r19, 0xFF	; 255
    13fe:	38 87       	std	Y+8, r19	; 0x08
    1400:	2f 83       	std	Y+7, r18	; 0x07
    1402:	21 e0       	ldi	r18, 0x01	; 1
    1404:	fc 01       	movw	r30, r24
    1406:	20 83       	st	Z, r18
    1408:	8f 81       	ldd	r24, Y+7	; 0x07
    140a:	98 85       	ldd	r25, Y+8	; 0x08
    140c:	9c 01       	movw	r18, r24
    140e:	2f 5f       	subi	r18, 0xFF	; 255
    1410:	3f 4f       	sbci	r19, 0xFF	; 255
    1412:	38 87       	std	Y+8, r19	; 0x08
    1414:	2f 83       	std	Y+7, r18	; 0x07
    1416:	2e 81       	ldd	r18, Y+6	; 0x06
    1418:	2c 5f       	subi	r18, 0xFC	; 252
    141a:	fc 01       	movw	r30, r24
    141c:	20 83       	st	Z, r18
    141e:	19 82       	std	Y+1, r1	; 0x01
    1420:	15 c0       	rjmp	.+42     	; 0x144c <get_data_frame+0xe4>
    1422:	8f 81       	ldd	r24, Y+7	; 0x07
    1424:	98 85       	ldd	r25, Y+8	; 0x08
    1426:	9c 01       	movw	r18, r24
    1428:	2f 5f       	subi	r18, 0xFF	; 255
    142a:	3f 4f       	sbci	r19, 0xFF	; 255
    142c:	38 87       	std	Y+8, r19	; 0x08
    142e:	2f 83       	std	Y+7, r18	; 0x07
    1430:	29 81       	ldd	r18, Y+1	; 0x01
    1432:	22 2f       	mov	r18, r18
    1434:	30 e0       	ldi	r19, 0x00	; 0
    1436:	4c 81       	ldd	r20, Y+4	; 0x04
    1438:	5d 81       	ldd	r21, Y+5	; 0x05
    143a:	24 0f       	add	r18, r20
    143c:	35 1f       	adc	r19, r21
    143e:	f9 01       	movw	r30, r18
    1440:	20 81       	ld	r18, Z
    1442:	fc 01       	movw	r30, r24
    1444:	20 83       	st	Z, r18
    1446:	89 81       	ldd	r24, Y+1	; 0x01
    1448:	8f 5f       	subi	r24, 0xFF	; 255
    144a:	89 83       	std	Y+1, r24	; 0x01
    144c:	99 81       	ldd	r25, Y+1	; 0x01
    144e:	8e 81       	ldd	r24, Y+6	; 0x06
    1450:	98 17       	cp	r25, r24
    1452:	38 f3       	brcs	.-50     	; 0x1422 <get_data_frame+0xba>
    1454:	8c 81       	ldd	r24, Y+4	; 0x04
    1456:	9d 81       	ldd	r25, Y+5	; 0x05
    1458:	0e 94 df 17 	call	0x2fbe	; 0x2fbe <vPortFree>
    145c:	2f 81       	ldd	r18, Y+7	; 0x07
    145e:	38 85       	ldd	r19, Y+8	; 0x08
    1460:	8a 81       	ldd	r24, Y+2	; 0x02
    1462:	9b 81       	ldd	r25, Y+3	; 0x03
    1464:	a9 01       	movw	r20, r18
    1466:	48 1b       	sub	r20, r24
    1468:	59 0b       	sbc	r21, r25
    146a:	ca 01       	movw	r24, r20
    146c:	28 2f       	mov	r18, r24
    146e:	8a 81       	ldd	r24, Y+2	; 0x02
    1470:	9b 81       	ldd	r25, Y+3	; 0x03
    1472:	62 2f       	mov	r22, r18
    1474:	0e 94 12 09 	call	0x1224	; 0x1224 <compute_crc8>
    1478:	28 2f       	mov	r18, r24
    147a:	8f 81       	ldd	r24, Y+7	; 0x07
    147c:	98 85       	ldd	r25, Y+8	; 0x08
    147e:	fc 01       	movw	r30, r24
    1480:	20 83       	st	Z, r18
    1482:	8f 81       	ldd	r24, Y+7	; 0x07
    1484:	98 85       	ldd	r25, Y+8	; 0x08
    1486:	01 96       	adiw	r24, 0x01	; 1
    1488:	98 87       	std	Y+8, r25	; 0x08
    148a:	8f 83       	std	Y+7, r24	; 0x07
    148c:	2f 81       	ldd	r18, Y+7	; 0x07
    148e:	38 85       	ldd	r19, Y+8	; 0x08
    1490:	8a 81       	ldd	r24, Y+2	; 0x02
    1492:	9b 81       	ldd	r25, Y+3	; 0x03
    1494:	a9 01       	movw	r20, r18
    1496:	48 1b       	sub	r20, r24
    1498:	59 0b       	sbc	r21, r25
    149a:	ca 01       	movw	r24, r20
    149c:	05 c0       	rjmp	.+10     	; 0x14a8 <get_data_frame+0x140>
    149e:	8c 81       	ldd	r24, Y+4	; 0x04
    14a0:	9d 81       	ldd	r25, Y+5	; 0x05
    14a2:	0e 94 df 17 	call	0x2fbe	; 0x2fbe <vPortFree>
    14a6:	80 e0       	ldi	r24, 0x00	; 0
    14a8:	2c 96       	adiw	r28, 0x0c	; 12
    14aa:	0f b6       	in	r0, 0x3f	; 63
    14ac:	f8 94       	cli
    14ae:	de bf       	out	0x3e, r29	; 62
    14b0:	0f be       	out	0x3f, r0	; 63
    14b2:	cd bf       	out	0x3d, r28	; 61
    14b4:	df 91       	pop	r29
    14b6:	cf 91       	pop	r28
    14b8:	08 95       	ret

000014ba <get_acknowledge_frame>:
    14ba:	cf 93       	push	r28
    14bc:	df 93       	push	r29
    14be:	00 d0       	rcall	.+0      	; 0x14c0 <get_acknowledge_frame+0x6>
    14c0:	00 d0       	rcall	.+0      	; 0x14c2 <get_acknowledge_frame+0x8>
    14c2:	1f 92       	push	r1
    14c4:	cd b7       	in	r28, 0x3d	; 61
    14c6:	de b7       	in	r29, 0x3e	; 62
    14c8:	9c 83       	std	Y+4, r25	; 0x04
    14ca:	8b 83       	std	Y+3, r24	; 0x03
    14cc:	6d 83       	std	Y+5, r22	; 0x05
    14ce:	8b 81       	ldd	r24, Y+3	; 0x03
    14d0:	9c 81       	ldd	r25, Y+4	; 0x04
    14d2:	9a 83       	std	Y+2, r25	; 0x02
    14d4:	89 83       	std	Y+1, r24	; 0x01
    14d6:	8d 81       	ldd	r24, Y+5	; 0x05
    14d8:	84 30       	cpi	r24, 0x04	; 4
    14da:	08 f4       	brcc	.+2      	; 0x14de <get_acknowledge_frame+0x24>
    14dc:	3f c0       	rjmp	.+126    	; 0x155c <get_acknowledge_frame+0xa2>
    14de:	8b 81       	ldd	r24, Y+3	; 0x03
    14e0:	9c 81       	ldd	r25, Y+4	; 0x04
    14e2:	9c 01       	movw	r18, r24
    14e4:	2f 5f       	subi	r18, 0xFF	; 255
    14e6:	3f 4f       	sbci	r19, 0xFF	; 255
    14e8:	3c 83       	std	Y+4, r19	; 0x04
    14ea:	2b 83       	std	Y+3, r18	; 0x03
    14ec:	2f ef       	ldi	r18, 0xFF	; 255
    14ee:	fc 01       	movw	r30, r24
    14f0:	20 83       	st	Z, r18
    14f2:	8b 81       	ldd	r24, Y+3	; 0x03
    14f4:	9c 81       	ldd	r25, Y+4	; 0x04
    14f6:	9c 01       	movw	r18, r24
    14f8:	2f 5f       	subi	r18, 0xFF	; 255
    14fa:	3f 4f       	sbci	r19, 0xFF	; 255
    14fc:	3c 83       	std	Y+4, r19	; 0x04
    14fe:	2b 83       	std	Y+3, r18	; 0x03
    1500:	22 e0       	ldi	r18, 0x02	; 2
    1502:	fc 01       	movw	r30, r24
    1504:	20 83       	st	Z, r18
    1506:	8b 81       	ldd	r24, Y+3	; 0x03
    1508:	9c 81       	ldd	r25, Y+4	; 0x04
    150a:	9c 01       	movw	r18, r24
    150c:	2f 5f       	subi	r18, 0xFF	; 255
    150e:	3f 4f       	sbci	r19, 0xFF	; 255
    1510:	3c 83       	std	Y+4, r19	; 0x04
    1512:	2b 83       	std	Y+3, r18	; 0x03
    1514:	24 e0       	ldi	r18, 0x04	; 4
    1516:	fc 01       	movw	r30, r24
    1518:	20 83       	st	Z, r18
    151a:	2b 81       	ldd	r18, Y+3	; 0x03
    151c:	3c 81       	ldd	r19, Y+4	; 0x04
    151e:	89 81       	ldd	r24, Y+1	; 0x01
    1520:	9a 81       	ldd	r25, Y+2	; 0x02
    1522:	a9 01       	movw	r20, r18
    1524:	48 1b       	sub	r20, r24
    1526:	59 0b       	sbc	r21, r25
    1528:	ca 01       	movw	r24, r20
    152a:	28 2f       	mov	r18, r24
    152c:	89 81       	ldd	r24, Y+1	; 0x01
    152e:	9a 81       	ldd	r25, Y+2	; 0x02
    1530:	62 2f       	mov	r22, r18
    1532:	0e 94 12 09 	call	0x1224	; 0x1224 <compute_crc8>
    1536:	28 2f       	mov	r18, r24
    1538:	8b 81       	ldd	r24, Y+3	; 0x03
    153a:	9c 81       	ldd	r25, Y+4	; 0x04
    153c:	fc 01       	movw	r30, r24
    153e:	20 83       	st	Z, r18
    1540:	8b 81       	ldd	r24, Y+3	; 0x03
    1542:	9c 81       	ldd	r25, Y+4	; 0x04
    1544:	01 96       	adiw	r24, 0x01	; 1
    1546:	9c 83       	std	Y+4, r25	; 0x04
    1548:	8b 83       	std	Y+3, r24	; 0x03
    154a:	2b 81       	ldd	r18, Y+3	; 0x03
    154c:	3c 81       	ldd	r19, Y+4	; 0x04
    154e:	89 81       	ldd	r24, Y+1	; 0x01
    1550:	9a 81       	ldd	r25, Y+2	; 0x02
    1552:	a9 01       	movw	r20, r18
    1554:	48 1b       	sub	r20, r24
    1556:	59 0b       	sbc	r21, r25
    1558:	ca 01       	movw	r24, r20
    155a:	01 c0       	rjmp	.+2      	; 0x155e <get_acknowledge_frame+0xa4>
    155c:	80 e0       	ldi	r24, 0x00	; 0
    155e:	0f 90       	pop	r0
    1560:	0f 90       	pop	r0
    1562:	0f 90       	pop	r0
    1564:	0f 90       	pop	r0
    1566:	0f 90       	pop	r0
    1568:	df 91       	pop	r29
    156a:	cf 91       	pop	r28
    156c:	08 95       	ret

0000156e <is_start_of_frame>:
    156e:	cf 93       	push	r28
    1570:	df 93       	push	r29
    1572:	1f 92       	push	r1
    1574:	cd b7       	in	r28, 0x3d	; 61
    1576:	de b7       	in	r29, 0x3e	; 62
    1578:	89 83       	std	Y+1, r24	; 0x01
    157a:	81 e0       	ldi	r24, 0x01	; 1
    157c:	99 81       	ldd	r25, Y+1	; 0x01
    157e:	9f 3f       	cpi	r25, 0xFF	; 255
    1580:	09 f0       	breq	.+2      	; 0x1584 <is_start_of_frame+0x16>
    1582:	80 e0       	ldi	r24, 0x00	; 0
    1584:	0f 90       	pop	r0
    1586:	df 91       	pop	r29
    1588:	cf 91       	pop	r28
    158a:	08 95       	ret

0000158c <is_CRC_valid>:
    158c:	cf 93       	push	r28
    158e:	df 93       	push	r29
    1590:	00 d0       	rcall	.+0      	; 0x1592 <is_CRC_valid+0x6>
    1592:	1f 92       	push	r1
    1594:	cd b7       	in	r28, 0x3d	; 61
    1596:	de b7       	in	r29, 0x3e	; 62
    1598:	9a 83       	std	Y+2, r25	; 0x02
    159a:	89 83       	std	Y+1, r24	; 0x01
    159c:	6b 83       	std	Y+3, r22	; 0x03
    159e:	89 81       	ldd	r24, Y+1	; 0x01
    15a0:	9a 81       	ldd	r25, Y+2	; 0x02
    15a2:	6b 81       	ldd	r22, Y+3	; 0x03
    15a4:	0e 94 12 09 	call	0x1224	; 0x1224 <compute_crc8>
    15a8:	98 2f       	mov	r25, r24
    15aa:	81 e0       	ldi	r24, 0x01	; 1
    15ac:	99 23       	and	r25, r25
    15ae:	09 f0       	breq	.+2      	; 0x15b2 <is_CRC_valid+0x26>
    15b0:	80 e0       	ldi	r24, 0x00	; 0
    15b2:	0f 90       	pop	r0
    15b4:	0f 90       	pop	r0
    15b6:	0f 90       	pop	r0
    15b8:	df 91       	pop	r29
    15ba:	cf 91       	pop	r28
    15bc:	08 95       	ret

000015be <get_frame_size>:
    15be:	cf 93       	push	r28
    15c0:	df 93       	push	r29
    15c2:	00 d0       	rcall	.+0      	; 0x15c4 <get_frame_size+0x6>
    15c4:	1f 92       	push	r1
    15c6:	cd b7       	in	r28, 0x3d	; 61
    15c8:	de b7       	in	r29, 0x3e	; 62
    15ca:	9a 83       	std	Y+2, r25	; 0x02
    15cc:	89 83       	std	Y+1, r24	; 0x01
    15ce:	6b 83       	std	Y+3, r22	; 0x03
    15d0:	8b 81       	ldd	r24, Y+3	; 0x03
    15d2:	83 30       	cpi	r24, 0x03	; 3
    15d4:	10 f4       	brcc	.+4      	; 0x15da <get_frame_size+0x1c>
    15d6:	80 e0       	ldi	r24, 0x00	; 0
    15d8:	16 c0       	rjmp	.+44     	; 0x1606 <get_frame_size+0x48>
    15da:	89 81       	ldd	r24, Y+1	; 0x01
    15dc:	9a 81       	ldd	r25, Y+2	; 0x02
    15de:	fc 01       	movw	r30, r24
    15e0:	80 81       	ld	r24, Z
    15e2:	8f 3f       	cpi	r24, 0xFF	; 255
    15e4:	11 f0       	breq	.+4      	; 0x15ea <get_frame_size+0x2c>
    15e6:	80 e0       	ldi	r24, 0x00	; 0
    15e8:	0e c0       	rjmp	.+28     	; 0x1606 <get_frame_size+0x48>
    15ea:	89 81       	ldd	r24, Y+1	; 0x01
    15ec:	9a 81       	ldd	r25, Y+2	; 0x02
    15ee:	01 96       	adiw	r24, 0x01	; 1
    15f0:	9a 83       	std	Y+2, r25	; 0x02
    15f2:	89 83       	std	Y+1, r24	; 0x01
    15f4:	89 81       	ldd	r24, Y+1	; 0x01
    15f6:	9a 81       	ldd	r25, Y+2	; 0x02
    15f8:	01 96       	adiw	r24, 0x01	; 1
    15fa:	9a 83       	std	Y+2, r25	; 0x02
    15fc:	89 83       	std	Y+1, r24	; 0x01
    15fe:	89 81       	ldd	r24, Y+1	; 0x01
    1600:	9a 81       	ldd	r25, Y+2	; 0x02
    1602:	fc 01       	movw	r30, r24
    1604:	80 81       	ld	r24, Z
    1606:	0f 90       	pop	r0
    1608:	0f 90       	pop	r0
    160a:	0f 90       	pop	r0
    160c:	df 91       	pop	r29
    160e:	cf 91       	pop	r28
    1610:	08 95       	ret

00001612 <is_ack_frame>:
    1612:	cf 93       	push	r28
    1614:	df 93       	push	r29
    1616:	00 d0       	rcall	.+0      	; 0x1618 <is_ack_frame+0x6>
    1618:	1f 92       	push	r1
    161a:	cd b7       	in	r28, 0x3d	; 61
    161c:	de b7       	in	r29, 0x3e	; 62
    161e:	9a 83       	std	Y+2, r25	; 0x02
    1620:	89 83       	std	Y+1, r24	; 0x01
    1622:	6b 83       	std	Y+3, r22	; 0x03
    1624:	8b 81       	ldd	r24, Y+3	; 0x03
    1626:	83 30       	cpi	r24, 0x03	; 3
    1628:	10 f4       	brcc	.+4      	; 0x162e <is_ack_frame+0x1c>
    162a:	20 e0       	ldi	r18, 0x00	; 0
    162c:	11 c0       	rjmp	.+34     	; 0x1650 <is_ack_frame+0x3e>
    162e:	89 81       	ldd	r24, Y+1	; 0x01
    1630:	9a 81       	ldd	r25, Y+2	; 0x02
    1632:	01 96       	adiw	r24, 0x01	; 1
    1634:	9a 83       	std	Y+2, r25	; 0x02
    1636:	89 83       	std	Y+1, r24	; 0x01
    1638:	89 81       	ldd	r24, Y+1	; 0x01
    163a:	9a 81       	ldd	r25, Y+2	; 0x02
    163c:	fc 01       	movw	r30, r24
    163e:	80 81       	ld	r24, Z
    1640:	88 2f       	mov	r24, r24
    1642:	90 e0       	ldi	r25, 0x00	; 0
    1644:	82 70       	andi	r24, 0x02	; 2
    1646:	99 27       	eor	r25, r25
    1648:	21 e0       	ldi	r18, 0x01	; 1
    164a:	89 2b       	or	r24, r25
    164c:	09 f4       	brne	.+2      	; 0x1650 <is_ack_frame+0x3e>
    164e:	20 e0       	ldi	r18, 0x00	; 0
    1650:	82 2f       	mov	r24, r18
    1652:	0f 90       	pop	r0
    1654:	0f 90       	pop	r0
    1656:	0f 90       	pop	r0
    1658:	df 91       	pop	r29
    165a:	cf 91       	pop	r28
    165c:	08 95       	ret

0000165e <get_frame_from_queue>:
    165e:	cf 93       	push	r28
    1660:	df 93       	push	r29
    1662:	cd b7       	in	r28, 0x3d	; 61
    1664:	de b7       	in	r29, 0x3e	; 62
    1666:	28 97       	sbiw	r28, 0x08	; 8
    1668:	0f b6       	in	r0, 0x3f	; 63
    166a:	f8 94       	cli
    166c:	de bf       	out	0x3e, r29	; 62
    166e:	0f be       	out	0x3f, r0	; 63
    1670:	cd bf       	out	0x3d, r28	; 61
    1672:	9b 83       	std	Y+3, r25	; 0x03
    1674:	8a 83       	std	Y+2, r24	; 0x02
    1676:	7d 83       	std	Y+5, r23	; 0x05
    1678:	6c 83       	std	Y+4, r22	; 0x04
    167a:	4e 83       	std	Y+6, r20	; 0x06
    167c:	38 87       	std	Y+8, r19	; 0x08
    167e:	2f 83       	std	Y+7, r18	; 0x07
    1680:	8e 81       	ldd	r24, Y+6	; 0x06
    1682:	84 30       	cpi	r24, 0x04	; 4
    1684:	08 f0       	brcs	.+2      	; 0x1688 <get_frame_from_queue+0x2a>
    1686:	6f c0       	rjmp	.+222    	; 0x1766 <get_frame_from_queue+0x108>
    1688:	80 e0       	ldi	r24, 0x00	; 0
    168a:	75 c0       	rjmp	.+234    	; 0x1776 <get_frame_from_queue+0x118>
    168c:	8f 81       	ldd	r24, Y+7	; 0x07
    168e:	98 85       	ldd	r25, Y+8	; 0x08
    1690:	fc 01       	movw	r30, r24
    1692:	80 81       	ld	r24, Z
    1694:	88 2f       	mov	r24, r24
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	2c 81       	ldd	r18, Y+4	; 0x04
    169a:	3d 81       	ldd	r19, Y+5	; 0x05
    169c:	b9 01       	movw	r22, r18
    169e:	68 0f       	add	r22, r24
    16a0:	79 1f       	adc	r23, r25
    16a2:	8a 81       	ldd	r24, Y+2	; 0x02
    16a4:	9b 81       	ldd	r25, Y+3	; 0x03
    16a6:	20 e0       	ldi	r18, 0x00	; 0
    16a8:	40 e0       	ldi	r20, 0x00	; 0
    16aa:	50 e0       	ldi	r21, 0x00	; 0
    16ac:	0e 94 06 1b 	call	0x360c	; 0x360c <xQueueGenericReceive>
    16b0:	88 23       	and	r24, r24
    16b2:	11 f4       	brne	.+4      	; 0x16b8 <get_frame_from_queue+0x5a>
    16b4:	80 e0       	ldi	r24, 0x00	; 0
    16b6:	5f c0       	rjmp	.+190    	; 0x1776 <get_frame_from_queue+0x118>
    16b8:	8f 81       	ldd	r24, Y+7	; 0x07
    16ba:	98 85       	ldd	r25, Y+8	; 0x08
    16bc:	fc 01       	movw	r30, r24
    16be:	80 81       	ld	r24, Z
    16c0:	88 23       	and	r24, r24
    16c2:	61 f4       	brne	.+24     	; 0x16dc <get_frame_from_queue+0x7e>
    16c4:	8c 81       	ldd	r24, Y+4	; 0x04
    16c6:	9d 81       	ldd	r25, Y+5	; 0x05
    16c8:	fc 01       	movw	r30, r24
    16ca:	80 81       	ld	r24, Z
    16cc:	0e 94 b7 0a 	call	0x156e	; 0x156e <is_start_of_frame>
    16d0:	98 2f       	mov	r25, r24
    16d2:	81 e0       	ldi	r24, 0x01	; 1
    16d4:	89 27       	eor	r24, r25
    16d6:	88 23       	and	r24, r24
    16d8:	09 f0       	breq	.+2      	; 0x16dc <get_frame_from_queue+0x7e>
    16da:	45 c0       	rjmp	.+138    	; 0x1766 <get_frame_from_queue+0x108>
    16dc:	8f 81       	ldd	r24, Y+7	; 0x07
    16de:	98 85       	ldd	r25, Y+8	; 0x08
    16e0:	fc 01       	movw	r30, r24
    16e2:	80 81       	ld	r24, Z
    16e4:	21 e0       	ldi	r18, 0x01	; 1
    16e6:	28 0f       	add	r18, r24
    16e8:	8f 81       	ldd	r24, Y+7	; 0x07
    16ea:	98 85       	ldd	r25, Y+8	; 0x08
    16ec:	fc 01       	movw	r30, r24
    16ee:	20 83       	st	Z, r18
    16f0:	8f 81       	ldd	r24, Y+7	; 0x07
    16f2:	98 85       	ldd	r25, Y+8	; 0x08
    16f4:	fc 01       	movw	r30, r24
    16f6:	80 81       	ld	r24, Z
    16f8:	83 30       	cpi	r24, 0x03	; 3
    16fa:	a8 f1       	brcs	.+106    	; 0x1766 <get_frame_from_queue+0x108>
    16fc:	8c 81       	ldd	r24, Y+4	; 0x04
    16fe:	9d 81       	ldd	r25, Y+5	; 0x05
    1700:	63 e0       	ldi	r22, 0x03	; 3
    1702:	0e 94 df 0a 	call	0x15be	; 0x15be <get_frame_size>
    1706:	89 83       	std	Y+1, r24	; 0x01
    1708:	9e 81       	ldd	r25, Y+6	; 0x06
    170a:	89 81       	ldd	r24, Y+1	; 0x01
    170c:	98 17       	cp	r25, r24
    170e:	10 f5       	brcc	.+68     	; 0x1754 <get_frame_from_queue+0xf6>
    1710:	80 e0       	ldi	r24, 0x00	; 0
    1712:	31 c0       	rjmp	.+98     	; 0x1776 <get_frame_from_queue+0x118>
    1714:	8f 81       	ldd	r24, Y+7	; 0x07
    1716:	98 85       	ldd	r25, Y+8	; 0x08
    1718:	fc 01       	movw	r30, r24
    171a:	80 81       	ld	r24, Z
    171c:	88 2f       	mov	r24, r24
    171e:	90 e0       	ldi	r25, 0x00	; 0
    1720:	2c 81       	ldd	r18, Y+4	; 0x04
    1722:	3d 81       	ldd	r19, Y+5	; 0x05
    1724:	b9 01       	movw	r22, r18
    1726:	68 0f       	add	r22, r24
    1728:	79 1f       	adc	r23, r25
    172a:	8a 81       	ldd	r24, Y+2	; 0x02
    172c:	9b 81       	ldd	r25, Y+3	; 0x03
    172e:	20 e0       	ldi	r18, 0x00	; 0
    1730:	40 e0       	ldi	r20, 0x00	; 0
    1732:	50 e0       	ldi	r21, 0x00	; 0
    1734:	0e 94 06 1b 	call	0x360c	; 0x360c <xQueueGenericReceive>
    1738:	88 23       	and	r24, r24
    173a:	11 f4       	brne	.+4      	; 0x1740 <get_frame_from_queue+0xe2>
    173c:	80 e0       	ldi	r24, 0x00	; 0
    173e:	1b c0       	rjmp	.+54     	; 0x1776 <get_frame_from_queue+0x118>
    1740:	8f 81       	ldd	r24, Y+7	; 0x07
    1742:	98 85       	ldd	r25, Y+8	; 0x08
    1744:	fc 01       	movw	r30, r24
    1746:	80 81       	ld	r24, Z
    1748:	21 e0       	ldi	r18, 0x01	; 1
    174a:	28 0f       	add	r18, r24
    174c:	8f 81       	ldd	r24, Y+7	; 0x07
    174e:	98 85       	ldd	r25, Y+8	; 0x08
    1750:	fc 01       	movw	r30, r24
    1752:	20 83       	st	Z, r18
    1754:	8f 81       	ldd	r24, Y+7	; 0x07
    1756:	98 85       	ldd	r25, Y+8	; 0x08
    1758:	fc 01       	movw	r30, r24
    175a:	90 81       	ld	r25, Z
    175c:	89 81       	ldd	r24, Y+1	; 0x01
    175e:	98 17       	cp	r25, r24
    1760:	c8 f2       	brcs	.-78     	; 0x1714 <get_frame_from_queue+0xb6>
    1762:	81 e0       	ldi	r24, 0x01	; 1
    1764:	08 c0       	rjmp	.+16     	; 0x1776 <get_frame_from_queue+0x118>
    1766:	8f 81       	ldd	r24, Y+7	; 0x07
    1768:	98 85       	ldd	r25, Y+8	; 0x08
    176a:	fc 01       	movw	r30, r24
    176c:	90 81       	ld	r25, Z
    176e:	8e 81       	ldd	r24, Y+6	; 0x06
    1770:	89 17       	cp	r24, r25
    1772:	08 f0       	brcs	.+2      	; 0x1776 <get_frame_from_queue+0x118>
    1774:	8b cf       	rjmp	.-234    	; 0x168c <get_frame_from_queue+0x2e>
    1776:	28 96       	adiw	r28, 0x08	; 8
    1778:	0f b6       	in	r0, 0x3f	; 63
    177a:	f8 94       	cli
    177c:	de bf       	out	0x3e, r29	; 62
    177e:	0f be       	out	0x3f, r0	; 63
    1780:	cd bf       	out	0x3d, r28	; 61
    1782:	df 91       	pop	r29
    1784:	cf 91       	pop	r28
    1786:	08 95       	ret

00001788 <serial_com_task>:
    1788:	cf 93       	push	r28
    178a:	df 93       	push	r29
    178c:	cd b7       	in	r28, 0x3d	; 61
    178e:	de b7       	in	r29, 0x3e	; 62
    1790:	c1 57       	subi	r28, 0x71	; 113
    1792:	d1 09       	sbc	r29, r1
    1794:	0f b6       	in	r0, 0x3f	; 63
    1796:	f8 94       	cli
    1798:	de bf       	out	0x3e, r29	; 62
    179a:	0f be       	out	0x3f, r0	; 63
    179c:	cd bf       	out	0x3d, r28	; 61
    179e:	9e 01       	movw	r18, r28
    17a0:	20 59       	subi	r18, 0x90	; 144
    17a2:	3f 4f       	sbci	r19, 0xFF	; 255
    17a4:	f9 01       	movw	r30, r18
    17a6:	91 83       	std	Z+1, r25	; 0x01
    17a8:	80 83       	st	Z, r24
    17aa:	40 e0       	ldi	r20, 0x00	; 0
    17ac:	61 e0       	ldi	r22, 0x01	; 1
    17ae:	84 e6       	ldi	r24, 0x64	; 100
    17b0:	0e 94 1d 19 	call	0x323a	; 0x323a <xQueueGenericCreate>
    17b4:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <com_send_frame_buffer+0x1>
    17b8:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <com_send_frame_buffer>
    17bc:	81 e0       	ldi	r24, 0x01	; 1
    17be:	0e 94 d6 19 	call	0x33ac	; 0x33ac <xQueueCreateMutex>
    17c2:	90 93 aa 01 	sts	0x01AA, r25	; 0x8001aa <com_send_queue_add_mutex+0x1>
    17c6:	80 93 a9 01 	sts	0x01A9, r24	; 0x8001a9 <com_send_queue_add_mutex>
    17ca:	8e e1       	ldi	r24, 0x1E	; 30
    17cc:	40 e0       	ldi	r20, 0x00	; 0
    17ce:	61 e0       	ldi	r22, 0x01	; 1
    17d0:	0e 94 1d 19 	call	0x323a	; 0x323a <xQueueGenericCreate>
    17d4:	90 93 a6 01 	sts	0x01A6, r25	; 0x8001a6 <_x_com_received_chars_queue+0x1>
    17d8:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <_x_com_received_chars_queue>
    17dc:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <_x_com_received_chars_queue>
    17e0:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <_x_com_received_chars_queue+0x1>
    17e4:	0e 94 20 0e 	call	0x1c40	; 0x1c40 <init_com>
    17e8:	ce 01       	movw	r24, r28
    17ea:	88 59       	subi	r24, 0x98	; 152
    17ec:	9f 4f       	sbci	r25, 0xFF	; 255
    17ee:	fc 01       	movw	r30, r24
    17f0:	10 82       	st	Z, r1
    17f2:	0e 94 35 21 	call	0x426a	; 0x426a <xTaskGetTickCount>
    17f6:	9c 01       	movw	r18, r24
    17f8:	ce 01       	movw	r24, r28
    17fa:	87 59       	subi	r24, 0x97	; 151
    17fc:	9f 4f       	sbci	r25, 0xFF	; 255
    17fe:	fc 01       	movw	r30, r24
    1800:	31 83       	std	Z+1, r19	; 0x01
    1802:	20 83       	st	Z, r18
    1804:	ce 01       	movw	r24, r28
    1806:	87 59       	subi	r24, 0x97	; 151
    1808:	9f 4f       	sbci	r25, 0xFF	; 255
    180a:	62 e3       	ldi	r22, 0x32	; 50
    180c:	70 e0       	ldi	r23, 0x00	; 0
    180e:	0e 94 bf 1f 	call	0x3f7e	; 0x3f7e <vTaskDelayUntil>
    1812:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <_x_com_received_chars_queue>
    1816:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <_x_com_received_chars_queue+0x1>
    181a:	9e 01       	movw	r18, r28
    181c:	28 59       	subi	r18, 0x98	; 152
    181e:	3f 4f       	sbci	r19, 0xFF	; 255
    1820:	be 01       	movw	r22, r28
    1822:	6c 5f       	subi	r22, 0xFC	; 252
    1824:	7f 4f       	sbci	r23, 0xFF	; 255
    1826:	44 e6       	ldi	r20, 0x64	; 100
    1828:	0e 94 2f 0b 	call	0x165e	; 0x165e <get_frame_from_queue>
    182c:	88 23       	and	r24, r24
    182e:	09 f4       	brne	.+2      	; 0x1832 <serial_com_task+0xaa>
    1830:	78 c0       	rjmp	.+240    	; 0x1922 <serial_com_task+0x19a>
    1832:	ce 01       	movw	r24, r28
    1834:	85 59       	subi	r24, 0x95	; 149
    1836:	9f 4f       	sbci	r25, 0xFF	; 255
    1838:	fc 01       	movw	r30, r24
    183a:	10 82       	st	Z, r1
    183c:	9e 01       	movw	r18, r28
    183e:	25 59       	subi	r18, 0x95	; 149
    1840:	3f 4f       	sbci	r19, 0xFF	; 255
    1842:	ce 01       	movw	r24, r28
    1844:	04 96       	adiw	r24, 0x04	; 4
    1846:	a9 01       	movw	r20, r18
    1848:	64 e6       	ldi	r22, 0x64	; 100
    184a:	0e 94 56 09 	call	0x12ac	; 0x12ac <unpack_data_frame>
    184e:	8a 83       	std	Y+2, r24	; 0x02
    1850:	8a 81       	ldd	r24, Y+2	; 0x02
    1852:	82 30       	cpi	r24, 0x02	; 2
    1854:	51 f4       	brne	.+20     	; 0x186a <serial_com_task+0xe2>
    1856:	81 e0       	ldi	r24, 0x01	; 1
    1858:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <RTS>
    185c:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <last_sent_frame>
    1860:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <last_sent_frame_size>
    1864:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <ack_timeouts>
    1868:	56 c0       	rjmp	.+172    	; 0x1916 <serial_com_task+0x18e>
    186a:	8a 81       	ldd	r24, Y+2	; 0x02
    186c:	81 30       	cpi	r24, 0x01	; 1
    186e:	09 f0       	breq	.+2      	; 0x1872 <serial_com_task+0xea>
    1870:	4f c0       	rjmp	.+158    	; 0x1910 <serial_com_task+0x188>
    1872:	1b 82       	std	Y+3, r1	; 0x03
    1874:	ce 01       	movw	r24, r28
    1876:	84 59       	subi	r24, 0x94	; 148
    1878:	9f 4f       	sbci	r25, 0xFF	; 255
    187a:	64 e0       	ldi	r22, 0x04	; 4
    187c:	0e 94 5d 0a 	call	0x14ba	; 0x14ba <get_acknowledge_frame>
    1880:	8b 83       	std	Y+3, r24	; 0x03
    1882:	8b 81       	ldd	r24, Y+3	; 0x03
    1884:	88 23       	and	r24, r24
    1886:	b9 f1       	breq	.+110    	; 0x18f6 <serial_com_task+0x16e>
    1888:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <com_send_queue_add_mutex>
    188c:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <com_send_queue_add_mutex+0x1>
    1890:	20 e0       	ldi	r18, 0x00	; 0
    1892:	42 e3       	ldi	r20, 0x32	; 50
    1894:	50 e0       	ldi	r21, 0x00	; 0
    1896:	60 e0       	ldi	r22, 0x00	; 0
    1898:	70 e0       	ldi	r23, 0x00	; 0
    189a:	0e 94 06 1b 	call	0x360c	; 0x360c <xQueueGenericReceive>
    189e:	88 23       	and	r24, r24
    18a0:	f9 f0       	breq	.+62     	; 0x18e0 <serial_com_task+0x158>
    18a2:	19 82       	std	Y+1, r1	; 0x01
    18a4:	17 c0       	rjmp	.+46     	; 0x18d4 <serial_com_task+0x14c>
    18a6:	89 81       	ldd	r24, Y+1	; 0x01
    18a8:	88 2f       	mov	r24, r24
    18aa:	90 e0       	ldi	r25, 0x00	; 0
    18ac:	9e 01       	movw	r18, r28
    18ae:	24 59       	subi	r18, 0x94	; 148
    18b0:	3f 4f       	sbci	r19, 0xFF	; 255
    18b2:	b9 01       	movw	r22, r18
    18b4:	68 0f       	add	r22, r24
    18b6:	79 1f       	adc	r23, r25
    18b8:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <com_send_frame_buffer>
    18bc:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <com_send_frame_buffer+0x1>
    18c0:	20 e0       	ldi	r18, 0x00	; 0
    18c2:	40 e0       	ldi	r20, 0x00	; 0
    18c4:	50 e0       	ldi	r21, 0x00	; 0
    18c6:	0e 94 f6 19 	call	0x33ec	; 0x33ec <xQueueGenericSend>
    18ca:	88 23       	and	r24, r24
    18cc:	41 f0       	breq	.+16     	; 0x18de <serial_com_task+0x156>
    18ce:	89 81       	ldd	r24, Y+1	; 0x01
    18d0:	8f 5f       	subi	r24, 0xFF	; 255
    18d2:	89 83       	std	Y+1, r24	; 0x01
    18d4:	99 81       	ldd	r25, Y+1	; 0x01
    18d6:	8b 81       	ldd	r24, Y+3	; 0x03
    18d8:	98 17       	cp	r25, r24
    18da:	28 f3       	brcs	.-54     	; 0x18a6 <serial_com_task+0x11e>
    18dc:	01 c0       	rjmp	.+2      	; 0x18e0 <serial_com_task+0x158>
    18de:	00 00       	nop
    18e0:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <com_send_queue_add_mutex>
    18e4:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <com_send_queue_add_mutex+0x1>
    18e8:	20 e0       	ldi	r18, 0x00	; 0
    18ea:	40 e0       	ldi	r20, 0x00	; 0
    18ec:	50 e0       	ldi	r21, 0x00	; 0
    18ee:	60 e0       	ldi	r22, 0x00	; 0
    18f0:	70 e0       	ldi	r23, 0x00	; 0
    18f2:	0e 94 f6 19 	call	0x33ec	; 0x33ec <xQueueGenericSend>
    18f6:	ce 01       	movw	r24, r28
    18f8:	85 59       	subi	r24, 0x95	; 149
    18fa:	9f 4f       	sbci	r25, 0xFF	; 255
    18fc:	fc 01       	movw	r30, r24
    18fe:	80 81       	ld	r24, Z
    1900:	28 2f       	mov	r18, r24
    1902:	30 e0       	ldi	r19, 0x00	; 0
    1904:	ce 01       	movw	r24, r28
    1906:	04 96       	adiw	r24, 0x04	; 4
    1908:	b9 01       	movw	r22, r18
    190a:	0e 94 b8 0d 	call	0x1b70	; 0x1b70 <handle_serial_input>
    190e:	03 c0       	rjmp	.+6      	; 0x1916 <serial_com_task+0x18e>
    1910:	81 e0       	ldi	r24, 0x01	; 1
    1912:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <RTS>
    1916:	1c 82       	std	Y+4, r1	; 0x04
    1918:	ce 01       	movw	r24, r28
    191a:	88 59       	subi	r24, 0x98	; 152
    191c:	9f 4f       	sbci	r25, 0xFF	; 255
    191e:	fc 01       	movw	r30, r24
    1920:	10 82       	st	Z, r1
    1922:	80 91 1d 01 	lds	r24, 0x011D	; 0x80011d <RTS>
    1926:	88 23       	and	r24, r24
    1928:	89 f0       	breq	.+34     	; 0x194c <serial_com_task+0x1c4>
    192a:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <com_send_frame_buffer>
    192e:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <com_send_frame_buffer+0x1>
    1932:	2f e0       	ldi	r18, 0x0F	; 15
    1934:	32 e0       	ldi	r19, 0x02	; 2
    1936:	44 e6       	ldi	r20, 0x64	; 100
    1938:	6b ea       	ldi	r22, 0xAB	; 171
    193a:	71 e0       	ldi	r23, 0x01	; 1
    193c:	0e 94 2f 0b 	call	0x165e	; 0x165e <get_frame_from_queue>
    1940:	88 23       	and	r24, r24
    1942:	09 f4       	brne	.+2      	; 0x1946 <serial_com_task+0x1be>
    1944:	5f cf       	rjmp	.-322    	; 0x1804 <serial_com_task+0x7c>
    1946:	0e 94 cb 0c 	call	0x1996	; 0x1996 <send_current_frame>
    194a:	5c cf       	rjmp	.-328    	; 0x1804 <serial_com_task+0x7c>
    194c:	0e 94 35 21 	call	0x426a	; 0x426a <xTaskGetTickCount>
    1950:	9c 01       	movw	r18, r24
    1952:	80 91 10 02 	lds	r24, 0x0210	; 0x800210 <last_frame_time>
    1956:	90 91 11 02 	lds	r25, 0x0211	; 0x800211 <last_frame_time+0x1>
    195a:	a9 01       	movw	r20, r18
    195c:	48 1b       	sub	r20, r24
    195e:	59 0b       	sbc	r21, r25
    1960:	ca 01       	movw	r24, r20
    1962:	84 36       	cpi	r24, 0x64	; 100
    1964:	91 05       	cpc	r25, r1
    1966:	08 f4       	brcc	.+2      	; 0x196a <serial_com_task+0x1e2>
    1968:	4d cf       	rjmp	.-358    	; 0x1804 <serial_com_task+0x7c>
    196a:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <ack_timeouts>
    196e:	8f 5f       	subi	r24, 0xFF	; 255
    1970:	80 93 12 02 	sts	0x0212, r24	; 0x800212 <ack_timeouts>
    1974:	80 91 12 02 	lds	r24, 0x0212	; 0x800212 <ack_timeouts>
    1978:	86 30       	cpi	r24, 0x06	; 6
    197a:	18 f4       	brcc	.+6      	; 0x1982 <serial_com_task+0x1fa>
    197c:	0e 94 cb 0c 	call	0x1996	; 0x1996 <send_current_frame>
    1980:	41 cf       	rjmp	.-382    	; 0x1804 <serial_com_task+0x7c>
    1982:	81 e0       	ldi	r24, 0x01	; 1
    1984:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <RTS>
    1988:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <last_sent_frame>
    198c:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <last_sent_frame_size>
    1990:	10 92 12 02 	sts	0x0212, r1	; 0x800212 <ack_timeouts>
    1994:	37 cf       	rjmp	.-402    	; 0x1804 <serial_com_task+0x7c>

00001996 <send_current_frame>:
    1996:	cf 93       	push	r28
    1998:	df 93       	push	r29
    199a:	1f 92       	push	r1
    199c:	cd b7       	in	r28, 0x3d	; 61
    199e:	de b7       	in	r29, 0x3e	; 62
    19a0:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <last_sent_frame_size>
    19a4:	88 23       	and	r24, r24
    19a6:	39 f1       	breq	.+78     	; 0x19f6 <send_current_frame+0x60>
    19a8:	19 82       	std	Y+1, r1	; 0x01
    19aa:	13 c0       	rjmp	.+38     	; 0x19d2 <send_current_frame+0x3c>
    19ac:	89 81       	ldd	r24, Y+1	; 0x01
    19ae:	88 2f       	mov	r24, r24
    19b0:	90 e0       	ldi	r25, 0x00	; 0
    19b2:	85 55       	subi	r24, 0x55	; 85
    19b4:	9e 4f       	sbci	r25, 0xFE	; 254
    19b6:	fc 01       	movw	r30, r24
    19b8:	80 81       	ld	r24, Z
    19ba:	0e 94 9d 0e 	call	0x1d3a	; 0x1d3a <com_send_byte>
    19be:	88 23       	and	r24, r24
    19c0:	21 f4       	brne	.+8      	; 0x19ca <send_current_frame+0x34>
    19c2:	89 81       	ldd	r24, Y+1	; 0x01
    19c4:	8f 5f       	subi	r24, 0xFF	; 255
    19c6:	89 83       	std	Y+1, r24	; 0x01
    19c8:	04 c0       	rjmp	.+8      	; 0x19d2 <send_current_frame+0x3c>
    19ca:	81 e0       	ldi	r24, 0x01	; 1
    19cc:	90 e0       	ldi	r25, 0x00	; 0
    19ce:	0e 94 39 20 	call	0x4072	; 0x4072 <vTaskDelay>
    19d2:	80 91 0f 02 	lds	r24, 0x020F	; 0x80020f <last_sent_frame_size>
    19d6:	99 81       	ldd	r25, Y+1	; 0x01
    19d8:	98 17       	cp	r25, r24
    19da:	40 f3       	brcs	.-48     	; 0x19ac <send_current_frame+0x16>
    19dc:	0e 94 35 21 	call	0x426a	; 0x426a <xTaskGetTickCount>
    19e0:	90 93 11 02 	sts	0x0211, r25	; 0x800211 <last_frame_time+0x1>
    19e4:	80 93 10 02 	sts	0x0210, r24	; 0x800210 <last_frame_time>
    19e8:	64 e0       	ldi	r22, 0x04	; 4
    19ea:	8b ea       	ldi	r24, 0xAB	; 171
    19ec:	91 e0       	ldi	r25, 0x01	; 1
    19ee:	0e 94 09 0b 	call	0x1612	; 0x1612 <is_ack_frame>
    19f2:	80 93 1d 01 	sts	0x011D, r24	; 0x80011d <RTS>
    19f6:	00 00       	nop
    19f8:	0f 90       	pop	r0
    19fa:	df 91       	pop	r29
    19fc:	cf 91       	pop	r28
    19fe:	08 95       	ret

00001a00 <count_illegal_chars>:
    1a00:	cf 93       	push	r28
    1a02:	df 93       	push	r29
    1a04:	00 d0       	rcall	.+0      	; 0x1a06 <count_illegal_chars+0x6>
    1a06:	00 d0       	rcall	.+0      	; 0x1a08 <count_illegal_chars+0x8>
    1a08:	1f 92       	push	r1
    1a0a:	cd b7       	in	r28, 0x3d	; 61
    1a0c:	de b7       	in	r29, 0x3e	; 62
    1a0e:	9c 83       	std	Y+4, r25	; 0x04
    1a10:	8b 83       	std	Y+3, r24	; 0x03
    1a12:	6d 83       	std	Y+5, r22	; 0x05
    1a14:	19 82       	std	Y+1, r1	; 0x01
    1a16:	1a 82       	std	Y+2, r1	; 0x02
    1a18:	17 c0       	rjmp	.+46     	; 0x1a48 <count_illegal_chars+0x48>
    1a1a:	8b 81       	ldd	r24, Y+3	; 0x03
    1a1c:	9c 81       	ldd	r25, Y+4	; 0x04
    1a1e:	fc 01       	movw	r30, r24
    1a20:	80 81       	ld	r24, Z
    1a22:	8f 3f       	cpi	r24, 0xFF	; 255
    1a24:	31 f0       	breq	.+12     	; 0x1a32 <count_illegal_chars+0x32>
    1a26:	8b 81       	ldd	r24, Y+3	; 0x03
    1a28:	9c 81       	ldd	r25, Y+4	; 0x04
    1a2a:	fc 01       	movw	r30, r24
    1a2c:	80 81       	ld	r24, Z
    1a2e:	88 23       	and	r24, r24
    1a30:	19 f4       	brne	.+6      	; 0x1a38 <count_illegal_chars+0x38>
    1a32:	89 81       	ldd	r24, Y+1	; 0x01
    1a34:	8f 5f       	subi	r24, 0xFF	; 255
    1a36:	89 83       	std	Y+1, r24	; 0x01
    1a38:	8b 81       	ldd	r24, Y+3	; 0x03
    1a3a:	9c 81       	ldd	r25, Y+4	; 0x04
    1a3c:	01 96       	adiw	r24, 0x01	; 1
    1a3e:	9c 83       	std	Y+4, r25	; 0x04
    1a40:	8b 83       	std	Y+3, r24	; 0x03
    1a42:	8a 81       	ldd	r24, Y+2	; 0x02
    1a44:	8f 5f       	subi	r24, 0xFF	; 255
    1a46:	8a 83       	std	Y+2, r24	; 0x02
    1a48:	9a 81       	ldd	r25, Y+2	; 0x02
    1a4a:	8d 81       	ldd	r24, Y+5	; 0x05
    1a4c:	98 17       	cp	r25, r24
    1a4e:	28 f3       	brcs	.-54     	; 0x1a1a <count_illegal_chars+0x1a>
    1a50:	89 81       	ldd	r24, Y+1	; 0x01
    1a52:	0f 90       	pop	r0
    1a54:	0f 90       	pop	r0
    1a56:	0f 90       	pop	r0
    1a58:	0f 90       	pop	r0
    1a5a:	0f 90       	pop	r0
    1a5c:	df 91       	pop	r29
    1a5e:	cf 91       	pop	r28
    1a60:	08 95       	ret

00001a62 <send_bytes>:
    1a62:	cf 93       	push	r28
    1a64:	df 93       	push	r29
    1a66:	cd b7       	in	r28, 0x3d	; 61
    1a68:	de b7       	in	r29, 0x3e	; 62
    1a6a:	27 97       	sbiw	r28, 0x07	; 7
    1a6c:	0f b6       	in	r0, 0x3f	; 63
    1a6e:	f8 94       	cli
    1a70:	de bf       	out	0x3e, r29	; 62
    1a72:	0f be       	out	0x3f, r0	; 63
    1a74:	cd bf       	out	0x3d, r28	; 61
    1a76:	9e 83       	std	Y+6, r25	; 0x06
    1a78:	8d 83       	std	Y+5, r24	; 0x05
    1a7a:	6f 83       	std	Y+7, r22	; 0x07
    1a7c:	8d 81       	ldd	r24, Y+5	; 0x05
    1a7e:	9e 81       	ldd	r25, Y+6	; 0x06
    1a80:	6f 81       	ldd	r22, Y+7	; 0x07
    1a82:	0e 94 00 0d 	call	0x1a00	; 0x1a00 <count_illegal_chars>
    1a86:	98 2f       	mov	r25, r24
    1a88:	99 0f       	add	r25, r25
    1a8a:	8f 81       	ldd	r24, Y+7	; 0x07
    1a8c:	89 0f       	add	r24, r25
    1a8e:	8c 5f       	subi	r24, 0xFC	; 252
    1a90:	89 83       	std	Y+1, r24	; 0x01
    1a92:	89 81       	ldd	r24, Y+1	; 0x01
    1a94:	85 36       	cpi	r24, 0x65	; 101
    1a96:	10 f0       	brcs	.+4      	; 0x1a9c <send_bytes+0x3a>
    1a98:	84 e6       	ldi	r24, 0x64	; 100
    1a9a:	89 83       	std	Y+1, r24	; 0x01
    1a9c:	89 81       	ldd	r24, Y+1	; 0x01
    1a9e:	88 2f       	mov	r24, r24
    1aa0:	90 e0       	ldi	r25, 0x00	; 0
    1aa2:	0e 94 ea 16 	call	0x2dd4	; 0x2dd4 <pvPortMalloc>
    1aa6:	9c 83       	std	Y+4, r25	; 0x04
    1aa8:	8b 83       	std	Y+3, r24	; 0x03
    1aaa:	8b 81       	ldd	r24, Y+3	; 0x03
    1aac:	9c 81       	ldd	r25, Y+4	; 0x04
    1aae:	89 2b       	or	r24, r25
    1ab0:	11 f4       	brne	.+4      	; 0x1ab6 <send_bytes+0x54>
    1ab2:	80 e0       	ldi	r24, 0x00	; 0
    1ab4:	54 c0       	rjmp	.+168    	; 0x1b5e <send_bytes+0xfc>
    1ab6:	4d 81       	ldd	r20, Y+5	; 0x05
    1ab8:	5e 81       	ldd	r21, Y+6	; 0x06
    1aba:	8b 81       	ldd	r24, Y+3	; 0x03
    1abc:	9c 81       	ldd	r25, Y+4	; 0x04
    1abe:	2f 81       	ldd	r18, Y+7	; 0x07
    1ac0:	69 81       	ldd	r22, Y+1	; 0x01
    1ac2:	0e 94 b4 09 	call	0x1368	; 0x1368 <get_data_frame>
    1ac6:	89 83       	std	Y+1, r24	; 0x01
    1ac8:	89 81       	ldd	r24, Y+1	; 0x01
    1aca:	88 23       	and	r24, r24
    1acc:	09 f4       	brne	.+2      	; 0x1ad0 <send_bytes+0x6e>
    1ace:	42 c0       	rjmp	.+132    	; 0x1b54 <send_bytes+0xf2>
    1ad0:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <com_send_frame_buffer>
    1ad4:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <com_send_frame_buffer+0x1>
    1ad8:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <uxQueueSpacesAvailable>
    1adc:	98 2f       	mov	r25, r24
    1ade:	89 81       	ldd	r24, Y+1	; 0x01
    1ae0:	98 17       	cp	r25, r24
    1ae2:	c0 f1       	brcs	.+112    	; 0x1b54 <send_bytes+0xf2>
    1ae4:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <com_send_queue_add_mutex>
    1ae8:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <com_send_queue_add_mutex+0x1>
    1aec:	20 e0       	ldi	r18, 0x00	; 0
    1aee:	42 e3       	ldi	r20, 0x32	; 50
    1af0:	50 e0       	ldi	r21, 0x00	; 0
    1af2:	60 e0       	ldi	r22, 0x00	; 0
    1af4:	70 e0       	ldi	r23, 0x00	; 0
    1af6:	0e 94 06 1b 	call	0x360c	; 0x360c <xQueueGenericReceive>
    1afa:	88 23       	and	r24, r24
    1afc:	d1 f0       	breq	.+52     	; 0x1b32 <send_bytes+0xd0>
    1afe:	1a 82       	std	Y+2, r1	; 0x02
    1b00:	14 c0       	rjmp	.+40     	; 0x1b2a <send_bytes+0xc8>
    1b02:	8a 81       	ldd	r24, Y+2	; 0x02
    1b04:	88 2f       	mov	r24, r24
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	2b 81       	ldd	r18, Y+3	; 0x03
    1b0a:	3c 81       	ldd	r19, Y+4	; 0x04
    1b0c:	b9 01       	movw	r22, r18
    1b0e:	68 0f       	add	r22, r24
    1b10:	79 1f       	adc	r23, r25
    1b12:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <com_send_frame_buffer>
    1b16:	90 91 a8 01 	lds	r25, 0x01A8	; 0x8001a8 <com_send_frame_buffer+0x1>
    1b1a:	20 e0       	ldi	r18, 0x00	; 0
    1b1c:	40 e0       	ldi	r20, 0x00	; 0
    1b1e:	50 e0       	ldi	r21, 0x00	; 0
    1b20:	0e 94 f6 19 	call	0x33ec	; 0x33ec <xQueueGenericSend>
    1b24:	8a 81       	ldd	r24, Y+2	; 0x02
    1b26:	8f 5f       	subi	r24, 0xFF	; 255
    1b28:	8a 83       	std	Y+2, r24	; 0x02
    1b2a:	9a 81       	ldd	r25, Y+2	; 0x02
    1b2c:	89 81       	ldd	r24, Y+1	; 0x01
    1b2e:	98 17       	cp	r25, r24
    1b30:	40 f3       	brcs	.-48     	; 0x1b02 <send_bytes+0xa0>
    1b32:	80 91 a9 01 	lds	r24, 0x01A9	; 0x8001a9 <com_send_queue_add_mutex>
    1b36:	90 91 aa 01 	lds	r25, 0x01AA	; 0x8001aa <com_send_queue_add_mutex+0x1>
    1b3a:	20 e0       	ldi	r18, 0x00	; 0
    1b3c:	40 e0       	ldi	r20, 0x00	; 0
    1b3e:	50 e0       	ldi	r21, 0x00	; 0
    1b40:	60 e0       	ldi	r22, 0x00	; 0
    1b42:	70 e0       	ldi	r23, 0x00	; 0
    1b44:	0e 94 f6 19 	call	0x33ec	; 0x33ec <xQueueGenericSend>
    1b48:	8b 81       	ldd	r24, Y+3	; 0x03
    1b4a:	9c 81       	ldd	r25, Y+4	; 0x04
    1b4c:	0e 94 df 17 	call	0x2fbe	; 0x2fbe <vPortFree>
    1b50:	81 e0       	ldi	r24, 0x01	; 1
    1b52:	05 c0       	rjmp	.+10     	; 0x1b5e <send_bytes+0xfc>
    1b54:	8b 81       	ldd	r24, Y+3	; 0x03
    1b56:	9c 81       	ldd	r25, Y+4	; 0x04
    1b58:	0e 94 df 17 	call	0x2fbe	; 0x2fbe <vPortFree>
    1b5c:	80 e0       	ldi	r24, 0x00	; 0
    1b5e:	27 96       	adiw	r28, 0x07	; 7
    1b60:	0f b6       	in	r0, 0x3f	; 63
    1b62:	f8 94       	cli
    1b64:	de bf       	out	0x3e, r29	; 62
    1b66:	0f be       	out	0x3f, r0	; 63
    1b68:	cd bf       	out	0x3d, r28	; 61
    1b6a:	df 91       	pop	r29
    1b6c:	cf 91       	pop	r28
    1b6e:	08 95       	ret

00001b70 <handle_serial_input>:
    1b70:	cf 93       	push	r28
    1b72:	df 93       	push	r29
    1b74:	00 d0       	rcall	.+0      	; 0x1b76 <handle_serial_input+0x6>
    1b76:	1f 92       	push	r1
    1b78:	cd b7       	in	r28, 0x3d	; 61
    1b7a:	de b7       	in	r29, 0x3e	; 62
    1b7c:	9a 83       	std	Y+2, r25	; 0x02
    1b7e:	89 83       	std	Y+1, r24	; 0x01
    1b80:	6b 83       	std	Y+3, r22	; 0x03
    1b82:	8b 81       	ldd	r24, Y+3	; 0x03
    1b84:	81 30       	cpi	r24, 0x01	; 1
    1b86:	59 f5       	brne	.+86     	; 0x1bde <handle_serial_input+0x6e>
    1b88:	89 81       	ldd	r24, Y+1	; 0x01
    1b8a:	9a 81       	ldd	r25, Y+2	; 0x02
    1b8c:	fc 01       	movw	r30, r24
    1b8e:	80 81       	ld	r24, Z
    1b90:	85 32       	cpi	r24, 0x25	; 37
    1b92:	29 f4       	brne	.+10     	; 0x1b9e <handle_serial_input+0x2e>
    1b94:	64 e0       	ldi	r22, 0x04	; 4
    1b96:	81 e0       	ldi	r24, 0x01	; 1
    1b98:	0e 94 8d 01 	call	0x31a	; 0x31a <snake_change_direction>
    1b9c:	20 c0       	rjmp	.+64     	; 0x1bde <handle_serial_input+0x6e>
    1b9e:	89 81       	ldd	r24, Y+1	; 0x01
    1ba0:	9a 81       	ldd	r25, Y+2	; 0x02
    1ba2:	fc 01       	movw	r30, r24
    1ba4:	80 81       	ld	r24, Z
    1ba6:	86 32       	cpi	r24, 0x26	; 38
    1ba8:	29 f4       	brne	.+10     	; 0x1bb4 <handle_serial_input+0x44>
    1baa:	63 e0       	ldi	r22, 0x03	; 3
    1bac:	81 e0       	ldi	r24, 0x01	; 1
    1bae:	0e 94 8d 01 	call	0x31a	; 0x31a <snake_change_direction>
    1bb2:	15 c0       	rjmp	.+42     	; 0x1bde <handle_serial_input+0x6e>
    1bb4:	89 81       	ldd	r24, Y+1	; 0x01
    1bb6:	9a 81       	ldd	r25, Y+2	; 0x02
    1bb8:	fc 01       	movw	r30, r24
    1bba:	80 81       	ld	r24, Z
    1bbc:	87 32       	cpi	r24, 0x27	; 39
    1bbe:	29 f4       	brne	.+10     	; 0x1bca <handle_serial_input+0x5a>
    1bc0:	66 e0       	ldi	r22, 0x06	; 6
    1bc2:	81 e0       	ldi	r24, 0x01	; 1
    1bc4:	0e 94 8d 01 	call	0x31a	; 0x31a <snake_change_direction>
    1bc8:	0a c0       	rjmp	.+20     	; 0x1bde <handle_serial_input+0x6e>
    1bca:	89 81       	ldd	r24, Y+1	; 0x01
    1bcc:	9a 81       	ldd	r25, Y+2	; 0x02
    1bce:	fc 01       	movw	r30, r24
    1bd0:	80 81       	ld	r24, Z
    1bd2:	88 32       	cpi	r24, 0x28	; 40
    1bd4:	21 f4       	brne	.+8      	; 0x1bde <handle_serial_input+0x6e>
    1bd6:	61 e0       	ldi	r22, 0x01	; 1
    1bd8:	81 e0       	ldi	r24, 0x01	; 1
    1bda:	0e 94 8d 01 	call	0x31a	; 0x31a <snake_change_direction>
    1bde:	00 00       	nop
    1be0:	0f 90       	pop	r0
    1be2:	0f 90       	pop	r0
    1be4:	0f 90       	pop	r0
    1be6:	df 91       	pop	r29
    1be8:	cf 91       	pop	r28
    1bea:	08 95       	ret

00001bec <_com_call_back>:
    1bec:	cf 93       	push	r28
    1bee:	df 93       	push	r29
    1bf0:	00 d0       	rcall	.+0      	; 0x1bf2 <_com_call_back+0x6>
    1bf2:	00 d0       	rcall	.+0      	; 0x1bf4 <_com_call_back+0x8>
    1bf4:	cd b7       	in	r28, 0x3d	; 61
    1bf6:	de b7       	in	r29, 0x3e	; 62
    1bf8:	9b 83       	std	Y+3, r25	; 0x03
    1bfa:	8a 83       	std	Y+2, r24	; 0x02
    1bfc:	6c 83       	std	Y+4, r22	; 0x04
    1bfe:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <_x_rx_com_queue>
    1c02:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <_x_rx_com_queue+0x1>
    1c06:	89 2b       	or	r24, r25
    1c08:	99 f0       	breq	.+38     	; 0x1c30 <_com_call_back+0x44>
    1c0a:	19 82       	std	Y+1, r1	; 0x01
    1c0c:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <_x_rx_com_queue>
    1c10:	90 91 16 02 	lds	r25, 0x0216	; 0x800216 <_x_rx_com_queue+0x1>
    1c14:	be 01       	movw	r22, r28
    1c16:	6c 5f       	subi	r22, 0xFC	; 252
    1c18:	7f 4f       	sbci	r23, 0xFF	; 255
    1c1a:	20 e0       	ldi	r18, 0x00	; 0
    1c1c:	ae 01       	movw	r20, r28
    1c1e:	4f 5f       	subi	r20, 0xFF	; 255
    1c20:	5f 4f       	sbci	r21, 0xFF	; 255
    1c22:	0e 94 a7 1a 	call	0x354e	; 0x354e <xQueueGenericSendFromISR>
    1c26:	89 81       	ldd	r24, Y+1	; 0x01
    1c28:	88 23       	and	r24, r24
    1c2a:	11 f0       	breq	.+4      	; 0x1c30 <_com_call_back+0x44>
    1c2c:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    1c30:	00 00       	nop
    1c32:	0f 90       	pop	r0
    1c34:	0f 90       	pop	r0
    1c36:	0f 90       	pop	r0
    1c38:	0f 90       	pop	r0
    1c3a:	df 91       	pop	r29
    1c3c:	cf 91       	pop	r28
    1c3e:	08 95       	ret

00001c40 <init_com>:
    1c40:	cf 93       	push	r28
    1c42:	df 93       	push	r29
    1c44:	00 d0       	rcall	.+0      	; 0x1c46 <init_com+0x6>
    1c46:	cd b7       	in	r28, 0x3d	; 61
    1c48:	de b7       	in	r29, 0x3e	; 62
    1c4a:	9a 83       	std	Y+2, r25	; 0x02
    1c4c:	89 83       	std	Y+1, r24	; 0x01
    1c4e:	89 81       	ldd	r24, Y+1	; 0x01
    1c50:	9a 81       	ldd	r25, Y+2	; 0x02
    1c52:	90 93 16 02 	sts	0x0216, r25	; 0x800216 <_x_rx_com_queue+0x1>
    1c56:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <_x_rx_com_queue>
    1c5a:	00 00       	nop
    1c5c:	0f 90       	pop	r0
    1c5e:	0f 90       	pop	r0
    1c60:	df 91       	pop	r29
    1c62:	cf 91       	pop	r28
    1c64:	08 95       	ret

00001c66 <init_display_timer>:
    1c66:	cf 93       	push	r28
    1c68:	df 93       	push	r29
    1c6a:	00 d0       	rcall	.+0      	; 0x1c6c <init_display_timer+0x6>
    1c6c:	cd b7       	in	r28, 0x3d	; 61
    1c6e:	de b7       	in	r29, 0x3e	; 62
    1c70:	9a 83       	std	Y+2, r25	; 0x02
    1c72:	89 83       	std	Y+1, r24	; 0x01
    1c74:	89 81       	ldd	r24, Y+1	; 0x01
    1c76:	9a 81       	ldd	r25, Y+2	; 0x02
    1c78:	90 93 18 02 	sts	0x0218, r25	; 0x800218 <cb_ptr+0x1>
    1c7c:	80 93 17 02 	sts	0x0217, r24	; 0x800217 <cb_ptr>
    1c80:	87 e4       	ldi	r24, 0x47	; 71
    1c82:	90 e0       	ldi	r25, 0x00	; 0
    1c84:	2a e0       	ldi	r18, 0x0A	; 10
    1c86:	fc 01       	movw	r30, r24
    1c88:	20 83       	st	Z, r18
    1c8a:	84 e4       	ldi	r24, 0x44	; 68
    1c8c:	90 e0       	ldi	r25, 0x00	; 0
    1c8e:	24 e4       	ldi	r18, 0x44	; 68
    1c90:	30 e0       	ldi	r19, 0x00	; 0
    1c92:	f9 01       	movw	r30, r18
    1c94:	20 81       	ld	r18, Z
    1c96:	22 60       	ori	r18, 0x02	; 2
    1c98:	fc 01       	movw	r30, r24
    1c9a:	20 83       	st	Z, r18
    1c9c:	8e e6       	ldi	r24, 0x6E	; 110
    1c9e:	90 e0       	ldi	r25, 0x00	; 0
    1ca0:	2e e6       	ldi	r18, 0x6E	; 110
    1ca2:	30 e0       	ldi	r19, 0x00	; 0
    1ca4:	f9 01       	movw	r30, r18
    1ca6:	20 81       	ld	r18, Z
    1ca8:	22 60       	ori	r18, 0x02	; 2
    1caa:	fc 01       	movw	r30, r24
    1cac:	20 83       	st	Z, r18
    1cae:	85 e4       	ldi	r24, 0x45	; 69
    1cb0:	90 e0       	ldi	r25, 0x00	; 0
    1cb2:	25 e4       	ldi	r18, 0x45	; 69
    1cb4:	30 e0       	ldi	r19, 0x00	; 0
    1cb6:	f9 01       	movw	r30, r18
    1cb8:	20 81       	ld	r18, Z
    1cba:	25 60       	ori	r18, 0x05	; 5
    1cbc:	fc 01       	movw	r30, r24
    1cbe:	20 83       	st	Z, r18
    1cc0:	00 00       	nop
    1cc2:	0f 90       	pop	r0
    1cc4:	0f 90       	pop	r0
    1cc6:	df 91       	pop	r29
    1cc8:	cf 91       	pop	r28
    1cca:	08 95       	ret

00001ccc <__vector_16>:
    1ccc:	1f 92       	push	r1
    1cce:	0f 92       	push	r0
    1cd0:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1cd4:	0f 92       	push	r0
    1cd6:	11 24       	eor	r1, r1
    1cd8:	2f 93       	push	r18
    1cda:	3f 93       	push	r19
    1cdc:	4f 93       	push	r20
    1cde:	5f 93       	push	r21
    1ce0:	6f 93       	push	r22
    1ce2:	7f 93       	push	r23
    1ce4:	8f 93       	push	r24
    1ce6:	9f 93       	push	r25
    1ce8:	af 93       	push	r26
    1cea:	bf 93       	push	r27
    1cec:	ef 93       	push	r30
    1cee:	ff 93       	push	r31
    1cf0:	cf 93       	push	r28
    1cf2:	df 93       	push	r29
    1cf4:	cd b7       	in	r28, 0x3d	; 61
    1cf6:	de b7       	in	r29, 0x3e	; 62
    1cf8:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <cb_ptr>
    1cfc:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <cb_ptr+0x1>
    1d00:	89 2b       	or	r24, r25
    1d02:	31 f0       	breq	.+12     	; 0x1d10 <__vector_16+0x44>
    1d04:	80 91 17 02 	lds	r24, 0x0217	; 0x800217 <cb_ptr>
    1d08:	90 91 18 02 	lds	r25, 0x0218	; 0x800218 <cb_ptr+0x1>
    1d0c:	fc 01       	movw	r30, r24
    1d0e:	09 95       	icall
    1d10:	00 00       	nop
    1d12:	df 91       	pop	r29
    1d14:	cf 91       	pop	r28
    1d16:	ff 91       	pop	r31
    1d18:	ef 91       	pop	r30
    1d1a:	bf 91       	pop	r27
    1d1c:	af 91       	pop	r26
    1d1e:	9f 91       	pop	r25
    1d20:	8f 91       	pop	r24
    1d22:	7f 91       	pop	r23
    1d24:	6f 91       	pop	r22
    1d26:	5f 91       	pop	r21
    1d28:	4f 91       	pop	r20
    1d2a:	3f 91       	pop	r19
    1d2c:	2f 91       	pop	r18
    1d2e:	0f 90       	pop	r0
    1d30:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    1d34:	0f 90       	pop	r0
    1d36:	1f 90       	pop	r1
    1d38:	18 95       	reti

00001d3a <com_send_byte>:
    1d3a:	cf 93       	push	r28
    1d3c:	df 93       	push	r29
    1d3e:	1f 92       	push	r1
    1d40:	cd b7       	in	r28, 0x3d	; 61
    1d42:	de b7       	in	r29, 0x3e	; 62
    1d44:	89 83       	std	Y+1, r24	; 0x01
    1d46:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <_com_serial_instance>
    1d4a:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <_com_serial_instance+0x1>
    1d4e:	69 81       	ldd	r22, Y+1	; 0x01
    1d50:	0e 94 58 15 	call	0x2ab0	; 0x2ab0 <serial_send_byte>
    1d54:	0f 90       	pop	r0
    1d56:	df 91       	pop	r29
    1d58:	cf 91       	pop	r28
    1d5a:	08 95       	ret

00001d5c <init_board>:
    1d5c:	8f 92       	push	r8
    1d5e:	9f 92       	push	r9
    1d60:	af 92       	push	r10
    1d62:	bf 92       	push	r11
    1d64:	cf 92       	push	r12
    1d66:	df 92       	push	r13
    1d68:	ef 92       	push	r14
    1d6a:	0f 93       	push	r16
    1d6c:	cf 93       	push	r28
    1d6e:	df 93       	push	r29
    1d70:	cd b7       	in	r28, 0x3d	; 61
    1d72:	de b7       	in	r29, 0x3e	; 62
    1d74:	89 e1       	ldi	r24, 0x19	; 25
    1d76:	92 e0       	ldi	r25, 0x02	; 2
    1d78:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <buffer_init>
    1d7c:	8c e3       	ldi	r24, 0x3C	; 60
    1d7e:	92 e0       	ldi	r25, 0x02	; 2
    1d80:	0e 94 78 0f 	call	0x1ef0	; 0x1ef0 <buffer_init>
    1d84:	0f 2e       	mov	r0, r31
    1d86:	f6 ef       	ldi	r31, 0xF6	; 246
    1d88:	8f 2e       	mov	r8, r31
    1d8a:	fd e0       	ldi	r31, 0x0D	; 13
    1d8c:	9f 2e       	mov	r9, r31
    1d8e:	f0 2d       	mov	r31, r0
    1d90:	0f 2e       	mov	r0, r31
    1d92:	fc e3       	ldi	r31, 0x3C	; 60
    1d94:	af 2e       	mov	r10, r31
    1d96:	f2 e0       	ldi	r31, 0x02	; 2
    1d98:	bf 2e       	mov	r11, r31
    1d9a:	f0 2d       	mov	r31, r0
    1d9c:	0f 2e       	mov	r0, r31
    1d9e:	f9 e1       	ldi	r31, 0x19	; 25
    1da0:	cf 2e       	mov	r12, r31
    1da2:	f2 e0       	ldi	r31, 0x02	; 2
    1da4:	df 2e       	mov	r13, r31
    1da6:	f0 2d       	mov	r31, r0
    1da8:	e1 2c       	mov	r14, r1
    1daa:	00 e0       	ldi	r16, 0x00	; 0
    1dac:	23 e0       	ldi	r18, 0x03	; 3
    1dae:	40 e0       	ldi	r20, 0x00	; 0
    1db0:	52 ec       	ldi	r21, 0xC2	; 194
    1db2:	61 e0       	ldi	r22, 0x01	; 1
    1db4:	70 e0       	ldi	r23, 0x00	; 0
    1db6:	80 e0       	ldi	r24, 0x00	; 0
    1db8:	0e 94 97 14 	call	0x292e	; 0x292e <serial_new_instance>
    1dbc:	90 93 14 02 	sts	0x0214, r25	; 0x800214 <_com_serial_instance+0x1>
    1dc0:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <_com_serial_instance>
    1dc4:	87 e2       	ldi	r24, 0x27	; 39
    1dc6:	90 e0       	ldi	r25, 0x00	; 0
    1dc8:	27 e2       	ldi	r18, 0x27	; 39
    1dca:	30 e0       	ldi	r19, 0x00	; 0
    1dcc:	f9 01       	movw	r30, r18
    1dce:	20 81       	ld	r18, Z
    1dd0:	2c 73       	andi	r18, 0x3C	; 60
    1dd2:	fc 01       	movw	r30, r24
    1dd4:	20 83       	st	Z, r18
    1dd6:	8a e2       	ldi	r24, 0x2A	; 42
    1dd8:	90 e0       	ldi	r25, 0x00	; 0
    1dda:	2a e2       	ldi	r18, 0x2A	; 42
    1ddc:	30 e0       	ldi	r19, 0x00	; 0
    1dde:	f9 01       	movw	r30, r18
    1de0:	20 81       	ld	r18, Z
    1de2:	27 7f       	andi	r18, 0xF7	; 247
    1de4:	fc 01       	movw	r30, r24
    1de6:	20 83       	st	Z, r18
    1de8:	88 e2       	ldi	r24, 0x28	; 40
    1dea:	90 e0       	ldi	r25, 0x00	; 0
    1dec:	28 e2       	ldi	r18, 0x28	; 40
    1dee:	30 e0       	ldi	r19, 0x00	; 0
    1df0:	f9 01       	movw	r30, r18
    1df2:	20 81       	ld	r18, Z
    1df4:	23 6c       	ori	r18, 0xC3	; 195
    1df6:	fc 01       	movw	r30, r24
    1df8:	20 83       	st	Z, r18
    1dfa:	8b e2       	ldi	r24, 0x2B	; 43
    1dfc:	90 e0       	ldi	r25, 0x00	; 0
    1dfe:	2b e2       	ldi	r18, 0x2B	; 43
    1e00:	30 e0       	ldi	r19, 0x00	; 0
    1e02:	f9 01       	movw	r30, r18
    1e04:	20 81       	ld	r18, Z
    1e06:	28 60       	ori	r18, 0x08	; 8
    1e08:	fc 01       	movw	r30, r24
    1e0a:	20 83       	st	Z, r18
    1e0c:	8a e2       	ldi	r24, 0x2A	; 42
    1e0e:	90 e0       	ldi	r25, 0x00	; 0
    1e10:	2a e2       	ldi	r18, 0x2A	; 42
    1e12:	30 e0       	ldi	r19, 0x00	; 0
    1e14:	f9 01       	movw	r30, r18
    1e16:	20 81       	ld	r18, Z
    1e18:	24 67       	ori	r18, 0x74	; 116
    1e1a:	fc 01       	movw	r30, r24
    1e1c:	20 83       	st	Z, r18
    1e1e:	8b e2       	ldi	r24, 0x2B	; 43
    1e20:	90 e0       	ldi	r25, 0x00	; 0
    1e22:	2b e2       	ldi	r18, 0x2B	; 43
    1e24:	30 e0       	ldi	r19, 0x00	; 0
    1e26:	f9 01       	movw	r30, r18
    1e28:	20 81       	ld	r18, Z
    1e2a:	20 64       	ori	r18, 0x40	; 64
    1e2c:	fc 01       	movw	r30, r24
    1e2e:	20 83       	st	Z, r18
    1e30:	81 e2       	ldi	r24, 0x21	; 33
    1e32:	90 e0       	ldi	r25, 0x00	; 0
    1e34:	fc 01       	movw	r30, r24
    1e36:	80 81       	ld	r24, Z
    1e38:	81 e2       	ldi	r24, 0x21	; 33
    1e3a:	90 e0       	ldi	r25, 0x00	; 0
    1e3c:	2f ef       	ldi	r18, 0xFF	; 255
    1e3e:	fc 01       	movw	r30, r24
    1e40:	20 83       	st	Z, r18
    1e42:	84 e2       	ldi	r24, 0x24	; 36
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	24 e2       	ldi	r18, 0x24	; 36
    1e48:	30 e0       	ldi	r19, 0x00	; 0
    1e4a:	f9 01       	movw	r30, r18
    1e4c:	20 81       	ld	r18, Z
    1e4e:	23 60       	ori	r18, 0x03	; 3
    1e50:	fc 01       	movw	r30, r24
    1e52:	20 83       	st	Z, r18
    1e54:	84 e2       	ldi	r24, 0x24	; 36
    1e56:	90 e0       	ldi	r25, 0x00	; 0
    1e58:	24 e2       	ldi	r18, 0x24	; 36
    1e5a:	30 e0       	ldi	r19, 0x00	; 0
    1e5c:	f9 01       	movw	r30, r18
    1e5e:	20 81       	ld	r18, Z
    1e60:	2c 63       	ori	r18, 0x3C	; 60
    1e62:	fc 01       	movw	r30, r24
    1e64:	20 83       	st	Z, r18
    1e66:	00 00       	nop
    1e68:	df 91       	pop	r29
    1e6a:	cf 91       	pop	r28
    1e6c:	0f 91       	pop	r16
    1e6e:	ef 90       	pop	r14
    1e70:	df 90       	pop	r13
    1e72:	cf 90       	pop	r12
    1e74:	bf 90       	pop	r11
    1e76:	af 90       	pop	r10
    1e78:	9f 90       	pop	r9
    1e7a:	8f 90       	pop	r8
    1e7c:	08 95       	ret

00001e7e <switch_in>:
    1e7e:	cf 93       	push	r28
    1e80:	df 93       	push	r29
    1e82:	1f 92       	push	r1
    1e84:	cd b7       	in	r28, 0x3d	; 61
    1e86:	de b7       	in	r29, 0x3e	; 62
    1e88:	89 83       	std	Y+1, r24	; 0x01
    1e8a:	85 e2       	ldi	r24, 0x25	; 37
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	25 e2       	ldi	r18, 0x25	; 37
    1e90:	30 e0       	ldi	r19, 0x00	; 0
    1e92:	f9 01       	movw	r30, r18
    1e94:	20 81       	ld	r18, Z
    1e96:	23 7c       	andi	r18, 0xC3	; 195
    1e98:	fc 01       	movw	r30, r24
    1e9a:	20 83       	st	Z, r18
    1e9c:	85 e2       	ldi	r24, 0x25	; 37
    1e9e:	90 e0       	ldi	r25, 0x00	; 0
    1ea0:	25 e2       	ldi	r18, 0x25	; 37
    1ea2:	30 e0       	ldi	r19, 0x00	; 0
    1ea4:	f9 01       	movw	r30, r18
    1ea6:	20 81       	ld	r18, Z
    1ea8:	42 2f       	mov	r20, r18
    1eaa:	29 81       	ldd	r18, Y+1	; 0x01
    1eac:	22 2f       	mov	r18, r18
    1eae:	30 e0       	ldi	r19, 0x00	; 0
    1eb0:	22 0f       	add	r18, r18
    1eb2:	33 1f       	adc	r19, r19
    1eb4:	22 0f       	add	r18, r18
    1eb6:	33 1f       	adc	r19, r19
    1eb8:	24 2b       	or	r18, r20
    1eba:	fc 01       	movw	r30, r24
    1ebc:	20 83       	st	Z, r18
    1ebe:	00 00       	nop
    1ec0:	0f 90       	pop	r0
    1ec2:	df 91       	pop	r29
    1ec4:	cf 91       	pop	r28
    1ec6:	08 95       	ret

00001ec8 <switch_out>:
    1ec8:	cf 93       	push	r28
    1eca:	df 93       	push	r29
    1ecc:	1f 92       	push	r1
    1ece:	cd b7       	in	r28, 0x3d	; 61
    1ed0:	de b7       	in	r29, 0x3e	; 62
    1ed2:	89 83       	std	Y+1, r24	; 0x01
    1ed4:	85 e2       	ldi	r24, 0x25	; 37
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	25 e2       	ldi	r18, 0x25	; 37
    1eda:	30 e0       	ldi	r19, 0x00	; 0
    1edc:	f9 01       	movw	r30, r18
    1ede:	20 81       	ld	r18, Z
    1ee0:	23 7c       	andi	r18, 0xC3	; 195
    1ee2:	fc 01       	movw	r30, r24
    1ee4:	20 83       	st	Z, r18
    1ee6:	00 00       	nop
    1ee8:	0f 90       	pop	r0
    1eea:	df 91       	pop	r29
    1eec:	cf 91       	pop	r28
    1eee:	08 95       	ret

00001ef0 <buffer_init>:
    1ef0:	cf 93       	push	r28
    1ef2:	df 93       	push	r29
    1ef4:	00 d0       	rcall	.+0      	; 0x1ef6 <buffer_init+0x6>
    1ef6:	cd b7       	in	r28, 0x3d	; 61
    1ef8:	de b7       	in	r29, 0x3e	; 62
    1efa:	9a 83       	std	Y+2, r25	; 0x02
    1efc:	89 83       	std	Y+1, r24	; 0x01
    1efe:	89 81       	ldd	r24, Y+1	; 0x01
    1f00:	9a 81       	ldd	r25, Y+2	; 0x02
    1f02:	fc 01       	movw	r30, r24
    1f04:	10 a2       	std	Z+32, r1	; 0x20
    1f06:	89 81       	ldd	r24, Y+1	; 0x01
    1f08:	9a 81       	ldd	r25, Y+2	; 0x02
    1f0a:	fc 01       	movw	r30, r24
    1f0c:	11 a2       	std	Z+33, r1	; 0x21
    1f0e:	89 81       	ldd	r24, Y+1	; 0x01
    1f10:	9a 81       	ldd	r25, Y+2	; 0x02
    1f12:	fc 01       	movw	r30, r24
    1f14:	12 a2       	std	Z+34, r1	; 0x22
    1f16:	00 00       	nop
    1f18:	0f 90       	pop	r0
    1f1a:	0f 90       	pop	r0
    1f1c:	df 91       	pop	r29
    1f1e:	cf 91       	pop	r28
    1f20:	08 95       	ret

00001f22 <buffer_get_item>:
    1f22:	cf 93       	push	r28
    1f24:	df 93       	push	r29
    1f26:	00 d0       	rcall	.+0      	; 0x1f28 <buffer_get_item+0x6>
    1f28:	00 d0       	rcall	.+0      	; 0x1f2a <buffer_get_item+0x8>
    1f2a:	cd b7       	in	r28, 0x3d	; 61
    1f2c:	de b7       	in	r29, 0x3e	; 62
    1f2e:	9a 83       	std	Y+2, r25	; 0x02
    1f30:	89 83       	std	Y+1, r24	; 0x01
    1f32:	7c 83       	std	Y+4, r23	; 0x04
    1f34:	6b 83       	std	Y+3, r22	; 0x03
    1f36:	89 81       	ldd	r24, Y+1	; 0x01
    1f38:	9a 81       	ldd	r25, Y+2	; 0x02
    1f3a:	fc 01       	movw	r30, r24
    1f3c:	82 a1       	ldd	r24, Z+34	; 0x22
    1f3e:	88 23       	and	r24, r24
    1f40:	81 f1       	breq	.+96     	; 0x1fa2 <buffer_get_item+0x80>
    1f42:	89 81       	ldd	r24, Y+1	; 0x01
    1f44:	9a 81       	ldd	r25, Y+2	; 0x02
    1f46:	fc 01       	movw	r30, r24
    1f48:	81 a1       	ldd	r24, Z+33	; 0x21
    1f4a:	88 2f       	mov	r24, r24
    1f4c:	90 e0       	ldi	r25, 0x00	; 0
    1f4e:	29 81       	ldd	r18, Y+1	; 0x01
    1f50:	3a 81       	ldd	r19, Y+2	; 0x02
    1f52:	82 0f       	add	r24, r18
    1f54:	93 1f       	adc	r25, r19
    1f56:	fc 01       	movw	r30, r24
    1f58:	20 81       	ld	r18, Z
    1f5a:	8b 81       	ldd	r24, Y+3	; 0x03
    1f5c:	9c 81       	ldd	r25, Y+4	; 0x04
    1f5e:	fc 01       	movw	r30, r24
    1f60:	20 83       	st	Z, r18
    1f62:	89 81       	ldd	r24, Y+1	; 0x01
    1f64:	9a 81       	ldd	r25, Y+2	; 0x02
    1f66:	fc 01       	movw	r30, r24
    1f68:	81 a1       	ldd	r24, Z+33	; 0x21
    1f6a:	88 2f       	mov	r24, r24
    1f6c:	90 e0       	ldi	r25, 0x00	; 0
    1f6e:	01 96       	adiw	r24, 0x01	; 1
    1f70:	8f 71       	andi	r24, 0x1F	; 31
    1f72:	90 78       	andi	r25, 0x80	; 128
    1f74:	99 23       	and	r25, r25
    1f76:	24 f4       	brge	.+8      	; 0x1f80 <buffer_get_item+0x5e>
    1f78:	01 97       	sbiw	r24, 0x01	; 1
    1f7a:	80 6e       	ori	r24, 0xE0	; 224
    1f7c:	9f 6f       	ori	r25, 0xFF	; 255
    1f7e:	01 96       	adiw	r24, 0x01	; 1
    1f80:	28 2f       	mov	r18, r24
    1f82:	89 81       	ldd	r24, Y+1	; 0x01
    1f84:	9a 81       	ldd	r25, Y+2	; 0x02
    1f86:	fc 01       	movw	r30, r24
    1f88:	21 a3       	std	Z+33, r18	; 0x21
    1f8a:	89 81       	ldd	r24, Y+1	; 0x01
    1f8c:	9a 81       	ldd	r25, Y+2	; 0x02
    1f8e:	fc 01       	movw	r30, r24
    1f90:	82 a1       	ldd	r24, Z+34	; 0x22
    1f92:	2f ef       	ldi	r18, 0xFF	; 255
    1f94:	28 0f       	add	r18, r24
    1f96:	89 81       	ldd	r24, Y+1	; 0x01
    1f98:	9a 81       	ldd	r25, Y+2	; 0x02
    1f9a:	fc 01       	movw	r30, r24
    1f9c:	22 a3       	std	Z+34, r18	; 0x22
    1f9e:	80 e0       	ldi	r24, 0x00	; 0
    1fa0:	01 c0       	rjmp	.+2      	; 0x1fa4 <buffer_get_item+0x82>
    1fa2:	81 e0       	ldi	r24, 0x01	; 1
    1fa4:	0f 90       	pop	r0
    1fa6:	0f 90       	pop	r0
    1fa8:	0f 90       	pop	r0
    1faa:	0f 90       	pop	r0
    1fac:	df 91       	pop	r29
    1fae:	cf 91       	pop	r28
    1fb0:	08 95       	ret

00001fb2 <buffer_put_item>:
    1fb2:	cf 93       	push	r28
    1fb4:	df 93       	push	r29
    1fb6:	00 d0       	rcall	.+0      	; 0x1fb8 <buffer_put_item+0x6>
    1fb8:	1f 92       	push	r1
    1fba:	cd b7       	in	r28, 0x3d	; 61
    1fbc:	de b7       	in	r29, 0x3e	; 62
    1fbe:	9a 83       	std	Y+2, r25	; 0x02
    1fc0:	89 83       	std	Y+1, r24	; 0x01
    1fc2:	6b 83       	std	Y+3, r22	; 0x03
    1fc4:	89 81       	ldd	r24, Y+1	; 0x01
    1fc6:	9a 81       	ldd	r25, Y+2	; 0x02
    1fc8:	fc 01       	movw	r30, r24
    1fca:	82 a1       	ldd	r24, Z+34	; 0x22
    1fcc:	80 32       	cpi	r24, 0x20	; 32
    1fce:	68 f5       	brcc	.+90     	; 0x202a <buffer_put_item+0x78>
    1fd0:	89 81       	ldd	r24, Y+1	; 0x01
    1fd2:	9a 81       	ldd	r25, Y+2	; 0x02
    1fd4:	fc 01       	movw	r30, r24
    1fd6:	80 a1       	ldd	r24, Z+32	; 0x20
    1fd8:	88 2f       	mov	r24, r24
    1fda:	90 e0       	ldi	r25, 0x00	; 0
    1fdc:	29 81       	ldd	r18, Y+1	; 0x01
    1fde:	3a 81       	ldd	r19, Y+2	; 0x02
    1fe0:	82 0f       	add	r24, r18
    1fe2:	93 1f       	adc	r25, r19
    1fe4:	2b 81       	ldd	r18, Y+3	; 0x03
    1fe6:	fc 01       	movw	r30, r24
    1fe8:	20 83       	st	Z, r18
    1fea:	89 81       	ldd	r24, Y+1	; 0x01
    1fec:	9a 81       	ldd	r25, Y+2	; 0x02
    1fee:	fc 01       	movw	r30, r24
    1ff0:	80 a1       	ldd	r24, Z+32	; 0x20
    1ff2:	88 2f       	mov	r24, r24
    1ff4:	90 e0       	ldi	r25, 0x00	; 0
    1ff6:	01 96       	adiw	r24, 0x01	; 1
    1ff8:	8f 71       	andi	r24, 0x1F	; 31
    1ffa:	90 78       	andi	r25, 0x80	; 128
    1ffc:	99 23       	and	r25, r25
    1ffe:	24 f4       	brge	.+8      	; 0x2008 <buffer_put_item+0x56>
    2000:	01 97       	sbiw	r24, 0x01	; 1
    2002:	80 6e       	ori	r24, 0xE0	; 224
    2004:	9f 6f       	ori	r25, 0xFF	; 255
    2006:	01 96       	adiw	r24, 0x01	; 1
    2008:	28 2f       	mov	r18, r24
    200a:	89 81       	ldd	r24, Y+1	; 0x01
    200c:	9a 81       	ldd	r25, Y+2	; 0x02
    200e:	fc 01       	movw	r30, r24
    2010:	20 a3       	std	Z+32, r18	; 0x20
    2012:	89 81       	ldd	r24, Y+1	; 0x01
    2014:	9a 81       	ldd	r25, Y+2	; 0x02
    2016:	fc 01       	movw	r30, r24
    2018:	82 a1       	ldd	r24, Z+34	; 0x22
    201a:	21 e0       	ldi	r18, 0x01	; 1
    201c:	28 0f       	add	r18, r24
    201e:	89 81       	ldd	r24, Y+1	; 0x01
    2020:	9a 81       	ldd	r25, Y+2	; 0x02
    2022:	fc 01       	movw	r30, r24
    2024:	22 a3       	std	Z+34, r18	; 0x22
    2026:	80 e0       	ldi	r24, 0x00	; 0
    2028:	01 c0       	rjmp	.+2      	; 0x202c <buffer_put_item+0x7a>
    202a:	82 e0       	ldi	r24, 0x02	; 2
    202c:	0f 90       	pop	r0
    202e:	0f 90       	pop	r0
    2030:	0f 90       	pop	r0
    2032:	df 91       	pop	r29
    2034:	cf 91       	pop	r28
    2036:	08 95       	ret

00002038 <vListInitialise>:
    2038:	cf 93       	push	r28
    203a:	df 93       	push	r29
    203c:	00 d0       	rcall	.+0      	; 0x203e <vListInitialise+0x6>
    203e:	cd b7       	in	r28, 0x3d	; 61
    2040:	de b7       	in	r29, 0x3e	; 62
    2042:	9a 83       	std	Y+2, r25	; 0x02
    2044:	89 83       	std	Y+1, r24	; 0x01
    2046:	89 81       	ldd	r24, Y+1	; 0x01
    2048:	9a 81       	ldd	r25, Y+2	; 0x02
    204a:	9c 01       	movw	r18, r24
    204c:	2d 5f       	subi	r18, 0xFD	; 253
    204e:	3f 4f       	sbci	r19, 0xFF	; 255
    2050:	89 81       	ldd	r24, Y+1	; 0x01
    2052:	9a 81       	ldd	r25, Y+2	; 0x02
    2054:	fc 01       	movw	r30, r24
    2056:	32 83       	std	Z+2, r19	; 0x02
    2058:	21 83       	std	Z+1, r18	; 0x01
    205a:	89 81       	ldd	r24, Y+1	; 0x01
    205c:	9a 81       	ldd	r25, Y+2	; 0x02
    205e:	2f ef       	ldi	r18, 0xFF	; 255
    2060:	3f ef       	ldi	r19, 0xFF	; 255
    2062:	fc 01       	movw	r30, r24
    2064:	34 83       	std	Z+4, r19	; 0x04
    2066:	23 83       	std	Z+3, r18	; 0x03
    2068:	89 81       	ldd	r24, Y+1	; 0x01
    206a:	9a 81       	ldd	r25, Y+2	; 0x02
    206c:	9c 01       	movw	r18, r24
    206e:	2d 5f       	subi	r18, 0xFD	; 253
    2070:	3f 4f       	sbci	r19, 0xFF	; 255
    2072:	89 81       	ldd	r24, Y+1	; 0x01
    2074:	9a 81       	ldd	r25, Y+2	; 0x02
    2076:	fc 01       	movw	r30, r24
    2078:	36 83       	std	Z+6, r19	; 0x06
    207a:	25 83       	std	Z+5, r18	; 0x05
    207c:	89 81       	ldd	r24, Y+1	; 0x01
    207e:	9a 81       	ldd	r25, Y+2	; 0x02
    2080:	9c 01       	movw	r18, r24
    2082:	2d 5f       	subi	r18, 0xFD	; 253
    2084:	3f 4f       	sbci	r19, 0xFF	; 255
    2086:	89 81       	ldd	r24, Y+1	; 0x01
    2088:	9a 81       	ldd	r25, Y+2	; 0x02
    208a:	fc 01       	movw	r30, r24
    208c:	30 87       	std	Z+8, r19	; 0x08
    208e:	27 83       	std	Z+7, r18	; 0x07
    2090:	89 81       	ldd	r24, Y+1	; 0x01
    2092:	9a 81       	ldd	r25, Y+2	; 0x02
    2094:	fc 01       	movw	r30, r24
    2096:	10 82       	st	Z, r1
    2098:	00 00       	nop
    209a:	0f 90       	pop	r0
    209c:	0f 90       	pop	r0
    209e:	df 91       	pop	r29
    20a0:	cf 91       	pop	r28
    20a2:	08 95       	ret

000020a4 <vListInitialiseItem>:
    20a4:	cf 93       	push	r28
    20a6:	df 93       	push	r29
    20a8:	00 d0       	rcall	.+0      	; 0x20aa <vListInitialiseItem+0x6>
    20aa:	cd b7       	in	r28, 0x3d	; 61
    20ac:	de b7       	in	r29, 0x3e	; 62
    20ae:	9a 83       	std	Y+2, r25	; 0x02
    20b0:	89 83       	std	Y+1, r24	; 0x01
    20b2:	89 81       	ldd	r24, Y+1	; 0x01
    20b4:	9a 81       	ldd	r25, Y+2	; 0x02
    20b6:	fc 01       	movw	r30, r24
    20b8:	11 86       	std	Z+9, r1	; 0x09
    20ba:	10 86       	std	Z+8, r1	; 0x08
    20bc:	00 00       	nop
    20be:	0f 90       	pop	r0
    20c0:	0f 90       	pop	r0
    20c2:	df 91       	pop	r29
    20c4:	cf 91       	pop	r28
    20c6:	08 95       	ret

000020c8 <vListInsertEnd>:
    20c8:	cf 93       	push	r28
    20ca:	df 93       	push	r29
    20cc:	00 d0       	rcall	.+0      	; 0x20ce <vListInsertEnd+0x6>
    20ce:	00 d0       	rcall	.+0      	; 0x20d0 <vListInsertEnd+0x8>
    20d0:	00 d0       	rcall	.+0      	; 0x20d2 <vListInsertEnd+0xa>
    20d2:	cd b7       	in	r28, 0x3d	; 61
    20d4:	de b7       	in	r29, 0x3e	; 62
    20d6:	9c 83       	std	Y+4, r25	; 0x04
    20d8:	8b 83       	std	Y+3, r24	; 0x03
    20da:	7e 83       	std	Y+6, r23	; 0x06
    20dc:	6d 83       	std	Y+5, r22	; 0x05
    20de:	8b 81       	ldd	r24, Y+3	; 0x03
    20e0:	9c 81       	ldd	r25, Y+4	; 0x04
    20e2:	fc 01       	movw	r30, r24
    20e4:	81 81       	ldd	r24, Z+1	; 0x01
    20e6:	92 81       	ldd	r25, Z+2	; 0x02
    20e8:	9a 83       	std	Y+2, r25	; 0x02
    20ea:	89 83       	std	Y+1, r24	; 0x01
    20ec:	8d 81       	ldd	r24, Y+5	; 0x05
    20ee:	9e 81       	ldd	r25, Y+6	; 0x06
    20f0:	29 81       	ldd	r18, Y+1	; 0x01
    20f2:	3a 81       	ldd	r19, Y+2	; 0x02
    20f4:	fc 01       	movw	r30, r24
    20f6:	33 83       	std	Z+3, r19	; 0x03
    20f8:	22 83       	std	Z+2, r18	; 0x02
    20fa:	89 81       	ldd	r24, Y+1	; 0x01
    20fc:	9a 81       	ldd	r25, Y+2	; 0x02
    20fe:	fc 01       	movw	r30, r24
    2100:	24 81       	ldd	r18, Z+4	; 0x04
    2102:	35 81       	ldd	r19, Z+5	; 0x05
    2104:	8d 81       	ldd	r24, Y+5	; 0x05
    2106:	9e 81       	ldd	r25, Y+6	; 0x06
    2108:	fc 01       	movw	r30, r24
    210a:	35 83       	std	Z+5, r19	; 0x05
    210c:	24 83       	std	Z+4, r18	; 0x04
    210e:	89 81       	ldd	r24, Y+1	; 0x01
    2110:	9a 81       	ldd	r25, Y+2	; 0x02
    2112:	fc 01       	movw	r30, r24
    2114:	84 81       	ldd	r24, Z+4	; 0x04
    2116:	95 81       	ldd	r25, Z+5	; 0x05
    2118:	2d 81       	ldd	r18, Y+5	; 0x05
    211a:	3e 81       	ldd	r19, Y+6	; 0x06
    211c:	fc 01       	movw	r30, r24
    211e:	33 83       	std	Z+3, r19	; 0x03
    2120:	22 83       	std	Z+2, r18	; 0x02
    2122:	89 81       	ldd	r24, Y+1	; 0x01
    2124:	9a 81       	ldd	r25, Y+2	; 0x02
    2126:	2d 81       	ldd	r18, Y+5	; 0x05
    2128:	3e 81       	ldd	r19, Y+6	; 0x06
    212a:	fc 01       	movw	r30, r24
    212c:	35 83       	std	Z+5, r19	; 0x05
    212e:	24 83       	std	Z+4, r18	; 0x04
    2130:	8d 81       	ldd	r24, Y+5	; 0x05
    2132:	9e 81       	ldd	r25, Y+6	; 0x06
    2134:	2b 81       	ldd	r18, Y+3	; 0x03
    2136:	3c 81       	ldd	r19, Y+4	; 0x04
    2138:	fc 01       	movw	r30, r24
    213a:	31 87       	std	Z+9, r19	; 0x09
    213c:	20 87       	std	Z+8, r18	; 0x08
    213e:	8b 81       	ldd	r24, Y+3	; 0x03
    2140:	9c 81       	ldd	r25, Y+4	; 0x04
    2142:	fc 01       	movw	r30, r24
    2144:	80 81       	ld	r24, Z
    2146:	21 e0       	ldi	r18, 0x01	; 1
    2148:	28 0f       	add	r18, r24
    214a:	8b 81       	ldd	r24, Y+3	; 0x03
    214c:	9c 81       	ldd	r25, Y+4	; 0x04
    214e:	fc 01       	movw	r30, r24
    2150:	20 83       	st	Z, r18
    2152:	00 00       	nop
    2154:	26 96       	adiw	r28, 0x06	; 6
    2156:	0f b6       	in	r0, 0x3f	; 63
    2158:	f8 94       	cli
    215a:	de bf       	out	0x3e, r29	; 62
    215c:	0f be       	out	0x3f, r0	; 63
    215e:	cd bf       	out	0x3d, r28	; 61
    2160:	df 91       	pop	r29
    2162:	cf 91       	pop	r28
    2164:	08 95       	ret

00002166 <vListInsert>:
    2166:	cf 93       	push	r28
    2168:	df 93       	push	r29
    216a:	cd b7       	in	r28, 0x3d	; 61
    216c:	de b7       	in	r29, 0x3e	; 62
    216e:	28 97       	sbiw	r28, 0x08	; 8
    2170:	0f b6       	in	r0, 0x3f	; 63
    2172:	f8 94       	cli
    2174:	de bf       	out	0x3e, r29	; 62
    2176:	0f be       	out	0x3f, r0	; 63
    2178:	cd bf       	out	0x3d, r28	; 61
    217a:	9e 83       	std	Y+6, r25	; 0x06
    217c:	8d 83       	std	Y+5, r24	; 0x05
    217e:	78 87       	std	Y+8, r23	; 0x08
    2180:	6f 83       	std	Y+7, r22	; 0x07
    2182:	8f 81       	ldd	r24, Y+7	; 0x07
    2184:	98 85       	ldd	r25, Y+8	; 0x08
    2186:	fc 01       	movw	r30, r24
    2188:	80 81       	ld	r24, Z
    218a:	91 81       	ldd	r25, Z+1	; 0x01
    218c:	9c 83       	std	Y+4, r25	; 0x04
    218e:	8b 83       	std	Y+3, r24	; 0x03
    2190:	8b 81       	ldd	r24, Y+3	; 0x03
    2192:	9c 81       	ldd	r25, Y+4	; 0x04
    2194:	01 96       	adiw	r24, 0x01	; 1
    2196:	41 f4       	brne	.+16     	; 0x21a8 <vListInsert+0x42>
    2198:	8d 81       	ldd	r24, Y+5	; 0x05
    219a:	9e 81       	ldd	r25, Y+6	; 0x06
    219c:	fc 01       	movw	r30, r24
    219e:	87 81       	ldd	r24, Z+7	; 0x07
    21a0:	90 85       	ldd	r25, Z+8	; 0x08
    21a2:	9a 83       	std	Y+2, r25	; 0x02
    21a4:	89 83       	std	Y+1, r24	; 0x01
    21a6:	1a c0       	rjmp	.+52     	; 0x21dc <vListInsert+0x76>
    21a8:	8d 81       	ldd	r24, Y+5	; 0x05
    21aa:	9e 81       	ldd	r25, Y+6	; 0x06
    21ac:	03 96       	adiw	r24, 0x03	; 3
    21ae:	9a 83       	std	Y+2, r25	; 0x02
    21b0:	89 83       	std	Y+1, r24	; 0x01
    21b2:	07 c0       	rjmp	.+14     	; 0x21c2 <vListInsert+0x5c>
    21b4:	89 81       	ldd	r24, Y+1	; 0x01
    21b6:	9a 81       	ldd	r25, Y+2	; 0x02
    21b8:	fc 01       	movw	r30, r24
    21ba:	82 81       	ldd	r24, Z+2	; 0x02
    21bc:	93 81       	ldd	r25, Z+3	; 0x03
    21be:	9a 83       	std	Y+2, r25	; 0x02
    21c0:	89 83       	std	Y+1, r24	; 0x01
    21c2:	89 81       	ldd	r24, Y+1	; 0x01
    21c4:	9a 81       	ldd	r25, Y+2	; 0x02
    21c6:	fc 01       	movw	r30, r24
    21c8:	82 81       	ldd	r24, Z+2	; 0x02
    21ca:	93 81       	ldd	r25, Z+3	; 0x03
    21cc:	fc 01       	movw	r30, r24
    21ce:	20 81       	ld	r18, Z
    21d0:	31 81       	ldd	r19, Z+1	; 0x01
    21d2:	8b 81       	ldd	r24, Y+3	; 0x03
    21d4:	9c 81       	ldd	r25, Y+4	; 0x04
    21d6:	82 17       	cp	r24, r18
    21d8:	93 07       	cpc	r25, r19
    21da:	60 f7       	brcc	.-40     	; 0x21b4 <vListInsert+0x4e>
    21dc:	89 81       	ldd	r24, Y+1	; 0x01
    21de:	9a 81       	ldd	r25, Y+2	; 0x02
    21e0:	fc 01       	movw	r30, r24
    21e2:	22 81       	ldd	r18, Z+2	; 0x02
    21e4:	33 81       	ldd	r19, Z+3	; 0x03
    21e6:	8f 81       	ldd	r24, Y+7	; 0x07
    21e8:	98 85       	ldd	r25, Y+8	; 0x08
    21ea:	fc 01       	movw	r30, r24
    21ec:	33 83       	std	Z+3, r19	; 0x03
    21ee:	22 83       	std	Z+2, r18	; 0x02
    21f0:	8f 81       	ldd	r24, Y+7	; 0x07
    21f2:	98 85       	ldd	r25, Y+8	; 0x08
    21f4:	fc 01       	movw	r30, r24
    21f6:	82 81       	ldd	r24, Z+2	; 0x02
    21f8:	93 81       	ldd	r25, Z+3	; 0x03
    21fa:	2f 81       	ldd	r18, Y+7	; 0x07
    21fc:	38 85       	ldd	r19, Y+8	; 0x08
    21fe:	fc 01       	movw	r30, r24
    2200:	35 83       	std	Z+5, r19	; 0x05
    2202:	24 83       	std	Z+4, r18	; 0x04
    2204:	8f 81       	ldd	r24, Y+7	; 0x07
    2206:	98 85       	ldd	r25, Y+8	; 0x08
    2208:	29 81       	ldd	r18, Y+1	; 0x01
    220a:	3a 81       	ldd	r19, Y+2	; 0x02
    220c:	fc 01       	movw	r30, r24
    220e:	35 83       	std	Z+5, r19	; 0x05
    2210:	24 83       	std	Z+4, r18	; 0x04
    2212:	89 81       	ldd	r24, Y+1	; 0x01
    2214:	9a 81       	ldd	r25, Y+2	; 0x02
    2216:	2f 81       	ldd	r18, Y+7	; 0x07
    2218:	38 85       	ldd	r19, Y+8	; 0x08
    221a:	fc 01       	movw	r30, r24
    221c:	33 83       	std	Z+3, r19	; 0x03
    221e:	22 83       	std	Z+2, r18	; 0x02
    2220:	8f 81       	ldd	r24, Y+7	; 0x07
    2222:	98 85       	ldd	r25, Y+8	; 0x08
    2224:	2d 81       	ldd	r18, Y+5	; 0x05
    2226:	3e 81       	ldd	r19, Y+6	; 0x06
    2228:	fc 01       	movw	r30, r24
    222a:	31 87       	std	Z+9, r19	; 0x09
    222c:	20 87       	std	Z+8, r18	; 0x08
    222e:	8d 81       	ldd	r24, Y+5	; 0x05
    2230:	9e 81       	ldd	r25, Y+6	; 0x06
    2232:	fc 01       	movw	r30, r24
    2234:	80 81       	ld	r24, Z
    2236:	21 e0       	ldi	r18, 0x01	; 1
    2238:	28 0f       	add	r18, r24
    223a:	8d 81       	ldd	r24, Y+5	; 0x05
    223c:	9e 81       	ldd	r25, Y+6	; 0x06
    223e:	fc 01       	movw	r30, r24
    2240:	20 83       	st	Z, r18
    2242:	00 00       	nop
    2244:	28 96       	adiw	r28, 0x08	; 8
    2246:	0f b6       	in	r0, 0x3f	; 63
    2248:	f8 94       	cli
    224a:	de bf       	out	0x3e, r29	; 62
    224c:	0f be       	out	0x3f, r0	; 63
    224e:	cd bf       	out	0x3d, r28	; 61
    2250:	df 91       	pop	r29
    2252:	cf 91       	pop	r28
    2254:	08 95       	ret

00002256 <uxListRemove>:
    2256:	cf 93       	push	r28
    2258:	df 93       	push	r29
    225a:	00 d0       	rcall	.+0      	; 0x225c <uxListRemove+0x6>
    225c:	00 d0       	rcall	.+0      	; 0x225e <uxListRemove+0x8>
    225e:	cd b7       	in	r28, 0x3d	; 61
    2260:	de b7       	in	r29, 0x3e	; 62
    2262:	9c 83       	std	Y+4, r25	; 0x04
    2264:	8b 83       	std	Y+3, r24	; 0x03
    2266:	8b 81       	ldd	r24, Y+3	; 0x03
    2268:	9c 81       	ldd	r25, Y+4	; 0x04
    226a:	fc 01       	movw	r30, r24
    226c:	80 85       	ldd	r24, Z+8	; 0x08
    226e:	91 85       	ldd	r25, Z+9	; 0x09
    2270:	9a 83       	std	Y+2, r25	; 0x02
    2272:	89 83       	std	Y+1, r24	; 0x01
    2274:	8b 81       	ldd	r24, Y+3	; 0x03
    2276:	9c 81       	ldd	r25, Y+4	; 0x04
    2278:	fc 01       	movw	r30, r24
    227a:	82 81       	ldd	r24, Z+2	; 0x02
    227c:	93 81       	ldd	r25, Z+3	; 0x03
    227e:	2b 81       	ldd	r18, Y+3	; 0x03
    2280:	3c 81       	ldd	r19, Y+4	; 0x04
    2282:	f9 01       	movw	r30, r18
    2284:	24 81       	ldd	r18, Z+4	; 0x04
    2286:	35 81       	ldd	r19, Z+5	; 0x05
    2288:	fc 01       	movw	r30, r24
    228a:	35 83       	std	Z+5, r19	; 0x05
    228c:	24 83       	std	Z+4, r18	; 0x04
    228e:	8b 81       	ldd	r24, Y+3	; 0x03
    2290:	9c 81       	ldd	r25, Y+4	; 0x04
    2292:	fc 01       	movw	r30, r24
    2294:	84 81       	ldd	r24, Z+4	; 0x04
    2296:	95 81       	ldd	r25, Z+5	; 0x05
    2298:	2b 81       	ldd	r18, Y+3	; 0x03
    229a:	3c 81       	ldd	r19, Y+4	; 0x04
    229c:	f9 01       	movw	r30, r18
    229e:	22 81       	ldd	r18, Z+2	; 0x02
    22a0:	33 81       	ldd	r19, Z+3	; 0x03
    22a2:	fc 01       	movw	r30, r24
    22a4:	33 83       	std	Z+3, r19	; 0x03
    22a6:	22 83       	std	Z+2, r18	; 0x02
    22a8:	89 81       	ldd	r24, Y+1	; 0x01
    22aa:	9a 81       	ldd	r25, Y+2	; 0x02
    22ac:	fc 01       	movw	r30, r24
    22ae:	21 81       	ldd	r18, Z+1	; 0x01
    22b0:	32 81       	ldd	r19, Z+2	; 0x02
    22b2:	8b 81       	ldd	r24, Y+3	; 0x03
    22b4:	9c 81       	ldd	r25, Y+4	; 0x04
    22b6:	28 17       	cp	r18, r24
    22b8:	39 07       	cpc	r19, r25
    22ba:	51 f4       	brne	.+20     	; 0x22d0 <uxListRemove+0x7a>
    22bc:	8b 81       	ldd	r24, Y+3	; 0x03
    22be:	9c 81       	ldd	r25, Y+4	; 0x04
    22c0:	fc 01       	movw	r30, r24
    22c2:	24 81       	ldd	r18, Z+4	; 0x04
    22c4:	35 81       	ldd	r19, Z+5	; 0x05
    22c6:	89 81       	ldd	r24, Y+1	; 0x01
    22c8:	9a 81       	ldd	r25, Y+2	; 0x02
    22ca:	fc 01       	movw	r30, r24
    22cc:	32 83       	std	Z+2, r19	; 0x02
    22ce:	21 83       	std	Z+1, r18	; 0x01
    22d0:	8b 81       	ldd	r24, Y+3	; 0x03
    22d2:	9c 81       	ldd	r25, Y+4	; 0x04
    22d4:	fc 01       	movw	r30, r24
    22d6:	11 86       	std	Z+9, r1	; 0x09
    22d8:	10 86       	std	Z+8, r1	; 0x08
    22da:	89 81       	ldd	r24, Y+1	; 0x01
    22dc:	9a 81       	ldd	r25, Y+2	; 0x02
    22de:	fc 01       	movw	r30, r24
    22e0:	80 81       	ld	r24, Z
    22e2:	2f ef       	ldi	r18, 0xFF	; 255
    22e4:	28 0f       	add	r18, r24
    22e6:	89 81       	ldd	r24, Y+1	; 0x01
    22e8:	9a 81       	ldd	r25, Y+2	; 0x02
    22ea:	fc 01       	movw	r30, r24
    22ec:	20 83       	st	Z, r18
    22ee:	89 81       	ldd	r24, Y+1	; 0x01
    22f0:	9a 81       	ldd	r25, Y+2	; 0x02
    22f2:	fc 01       	movw	r30, r24
    22f4:	80 81       	ld	r24, Z
    22f6:	0f 90       	pop	r0
    22f8:	0f 90       	pop	r0
    22fa:	0f 90       	pop	r0
    22fc:	0f 90       	pop	r0
    22fe:	df 91       	pop	r29
    2300:	cf 91       	pop	r28
    2302:	08 95       	ret

00002304 <pxPortInitialiseStack>:
    2304:	cf 93       	push	r28
    2306:	df 93       	push	r29
    2308:	cd b7       	in	r28, 0x3d	; 61
    230a:	de b7       	in	r29, 0x3e	; 62
    230c:	28 97       	sbiw	r28, 0x08	; 8
    230e:	0f b6       	in	r0, 0x3f	; 63
    2310:	f8 94       	cli
    2312:	de bf       	out	0x3e, r29	; 62
    2314:	0f be       	out	0x3f, r0	; 63
    2316:	cd bf       	out	0x3d, r28	; 61
    2318:	9c 83       	std	Y+4, r25	; 0x04
    231a:	8b 83       	std	Y+3, r24	; 0x03
    231c:	7e 83       	std	Y+6, r23	; 0x06
    231e:	6d 83       	std	Y+5, r22	; 0x05
    2320:	58 87       	std	Y+8, r21	; 0x08
    2322:	4f 83       	std	Y+7, r20	; 0x07
    2324:	8b 81       	ldd	r24, Y+3	; 0x03
    2326:	9c 81       	ldd	r25, Y+4	; 0x04
    2328:	21 e1       	ldi	r18, 0x11	; 17
    232a:	fc 01       	movw	r30, r24
    232c:	20 83       	st	Z, r18
    232e:	8b 81       	ldd	r24, Y+3	; 0x03
    2330:	9c 81       	ldd	r25, Y+4	; 0x04
    2332:	01 97       	sbiw	r24, 0x01	; 1
    2334:	9c 83       	std	Y+4, r25	; 0x04
    2336:	8b 83       	std	Y+3, r24	; 0x03
    2338:	8b 81       	ldd	r24, Y+3	; 0x03
    233a:	9c 81       	ldd	r25, Y+4	; 0x04
    233c:	22 e2       	ldi	r18, 0x22	; 34
    233e:	fc 01       	movw	r30, r24
    2340:	20 83       	st	Z, r18
    2342:	8b 81       	ldd	r24, Y+3	; 0x03
    2344:	9c 81       	ldd	r25, Y+4	; 0x04
    2346:	01 97       	sbiw	r24, 0x01	; 1
    2348:	9c 83       	std	Y+4, r25	; 0x04
    234a:	8b 83       	std	Y+3, r24	; 0x03
    234c:	8b 81       	ldd	r24, Y+3	; 0x03
    234e:	9c 81       	ldd	r25, Y+4	; 0x04
    2350:	23 e3       	ldi	r18, 0x33	; 51
    2352:	fc 01       	movw	r30, r24
    2354:	20 83       	st	Z, r18
    2356:	8b 81       	ldd	r24, Y+3	; 0x03
    2358:	9c 81       	ldd	r25, Y+4	; 0x04
    235a:	01 97       	sbiw	r24, 0x01	; 1
    235c:	9c 83       	std	Y+4, r25	; 0x04
    235e:	8b 83       	std	Y+3, r24	; 0x03
    2360:	8d 81       	ldd	r24, Y+5	; 0x05
    2362:	9e 81       	ldd	r25, Y+6	; 0x06
    2364:	9a 83       	std	Y+2, r25	; 0x02
    2366:	89 83       	std	Y+1, r24	; 0x01
    2368:	29 81       	ldd	r18, Y+1	; 0x01
    236a:	8b 81       	ldd	r24, Y+3	; 0x03
    236c:	9c 81       	ldd	r25, Y+4	; 0x04
    236e:	fc 01       	movw	r30, r24
    2370:	20 83       	st	Z, r18
    2372:	8b 81       	ldd	r24, Y+3	; 0x03
    2374:	9c 81       	ldd	r25, Y+4	; 0x04
    2376:	01 97       	sbiw	r24, 0x01	; 1
    2378:	9c 83       	std	Y+4, r25	; 0x04
    237a:	8b 83       	std	Y+3, r24	; 0x03
    237c:	89 81       	ldd	r24, Y+1	; 0x01
    237e:	9a 81       	ldd	r25, Y+2	; 0x02
    2380:	89 2f       	mov	r24, r25
    2382:	99 27       	eor	r25, r25
    2384:	9a 83       	std	Y+2, r25	; 0x02
    2386:	89 83       	std	Y+1, r24	; 0x01
    2388:	29 81       	ldd	r18, Y+1	; 0x01
    238a:	8b 81       	ldd	r24, Y+3	; 0x03
    238c:	9c 81       	ldd	r25, Y+4	; 0x04
    238e:	fc 01       	movw	r30, r24
    2390:	20 83       	st	Z, r18
    2392:	8b 81       	ldd	r24, Y+3	; 0x03
    2394:	9c 81       	ldd	r25, Y+4	; 0x04
    2396:	01 97       	sbiw	r24, 0x01	; 1
    2398:	9c 83       	std	Y+4, r25	; 0x04
    239a:	8b 83       	std	Y+3, r24	; 0x03
    239c:	8b 81       	ldd	r24, Y+3	; 0x03
    239e:	9c 81       	ldd	r25, Y+4	; 0x04
    23a0:	fc 01       	movw	r30, r24
    23a2:	10 82       	st	Z, r1
    23a4:	8b 81       	ldd	r24, Y+3	; 0x03
    23a6:	9c 81       	ldd	r25, Y+4	; 0x04
    23a8:	01 97       	sbiw	r24, 0x01	; 1
    23aa:	9c 83       	std	Y+4, r25	; 0x04
    23ac:	8b 83       	std	Y+3, r24	; 0x03
    23ae:	8b 81       	ldd	r24, Y+3	; 0x03
    23b0:	9c 81       	ldd	r25, Y+4	; 0x04
    23b2:	20 e8       	ldi	r18, 0x80	; 128
    23b4:	fc 01       	movw	r30, r24
    23b6:	20 83       	st	Z, r18
    23b8:	8b 81       	ldd	r24, Y+3	; 0x03
    23ba:	9c 81       	ldd	r25, Y+4	; 0x04
    23bc:	01 97       	sbiw	r24, 0x01	; 1
    23be:	9c 83       	std	Y+4, r25	; 0x04
    23c0:	8b 83       	std	Y+3, r24	; 0x03
    23c2:	8b 81       	ldd	r24, Y+3	; 0x03
    23c4:	9c 81       	ldd	r25, Y+4	; 0x04
    23c6:	fc 01       	movw	r30, r24
    23c8:	10 82       	st	Z, r1
    23ca:	8b 81       	ldd	r24, Y+3	; 0x03
    23cc:	9c 81       	ldd	r25, Y+4	; 0x04
    23ce:	01 97       	sbiw	r24, 0x01	; 1
    23d0:	9c 83       	std	Y+4, r25	; 0x04
    23d2:	8b 83       	std	Y+3, r24	; 0x03
    23d4:	8b 81       	ldd	r24, Y+3	; 0x03
    23d6:	9c 81       	ldd	r25, Y+4	; 0x04
    23d8:	22 e0       	ldi	r18, 0x02	; 2
    23da:	fc 01       	movw	r30, r24
    23dc:	20 83       	st	Z, r18
    23de:	8b 81       	ldd	r24, Y+3	; 0x03
    23e0:	9c 81       	ldd	r25, Y+4	; 0x04
    23e2:	01 97       	sbiw	r24, 0x01	; 1
    23e4:	9c 83       	std	Y+4, r25	; 0x04
    23e6:	8b 83       	std	Y+3, r24	; 0x03
    23e8:	8b 81       	ldd	r24, Y+3	; 0x03
    23ea:	9c 81       	ldd	r25, Y+4	; 0x04
    23ec:	23 e0       	ldi	r18, 0x03	; 3
    23ee:	fc 01       	movw	r30, r24
    23f0:	20 83       	st	Z, r18
    23f2:	8b 81       	ldd	r24, Y+3	; 0x03
    23f4:	9c 81       	ldd	r25, Y+4	; 0x04
    23f6:	01 97       	sbiw	r24, 0x01	; 1
    23f8:	9c 83       	std	Y+4, r25	; 0x04
    23fa:	8b 83       	std	Y+3, r24	; 0x03
    23fc:	8b 81       	ldd	r24, Y+3	; 0x03
    23fe:	9c 81       	ldd	r25, Y+4	; 0x04
    2400:	24 e0       	ldi	r18, 0x04	; 4
    2402:	fc 01       	movw	r30, r24
    2404:	20 83       	st	Z, r18
    2406:	8b 81       	ldd	r24, Y+3	; 0x03
    2408:	9c 81       	ldd	r25, Y+4	; 0x04
    240a:	01 97       	sbiw	r24, 0x01	; 1
    240c:	9c 83       	std	Y+4, r25	; 0x04
    240e:	8b 83       	std	Y+3, r24	; 0x03
    2410:	8b 81       	ldd	r24, Y+3	; 0x03
    2412:	9c 81       	ldd	r25, Y+4	; 0x04
    2414:	25 e0       	ldi	r18, 0x05	; 5
    2416:	fc 01       	movw	r30, r24
    2418:	20 83       	st	Z, r18
    241a:	8b 81       	ldd	r24, Y+3	; 0x03
    241c:	9c 81       	ldd	r25, Y+4	; 0x04
    241e:	01 97       	sbiw	r24, 0x01	; 1
    2420:	9c 83       	std	Y+4, r25	; 0x04
    2422:	8b 83       	std	Y+3, r24	; 0x03
    2424:	8b 81       	ldd	r24, Y+3	; 0x03
    2426:	9c 81       	ldd	r25, Y+4	; 0x04
    2428:	26 e0       	ldi	r18, 0x06	; 6
    242a:	fc 01       	movw	r30, r24
    242c:	20 83       	st	Z, r18
    242e:	8b 81       	ldd	r24, Y+3	; 0x03
    2430:	9c 81       	ldd	r25, Y+4	; 0x04
    2432:	01 97       	sbiw	r24, 0x01	; 1
    2434:	9c 83       	std	Y+4, r25	; 0x04
    2436:	8b 83       	std	Y+3, r24	; 0x03
    2438:	8b 81       	ldd	r24, Y+3	; 0x03
    243a:	9c 81       	ldd	r25, Y+4	; 0x04
    243c:	27 e0       	ldi	r18, 0x07	; 7
    243e:	fc 01       	movw	r30, r24
    2440:	20 83       	st	Z, r18
    2442:	8b 81       	ldd	r24, Y+3	; 0x03
    2444:	9c 81       	ldd	r25, Y+4	; 0x04
    2446:	01 97       	sbiw	r24, 0x01	; 1
    2448:	9c 83       	std	Y+4, r25	; 0x04
    244a:	8b 83       	std	Y+3, r24	; 0x03
    244c:	8b 81       	ldd	r24, Y+3	; 0x03
    244e:	9c 81       	ldd	r25, Y+4	; 0x04
    2450:	28 e0       	ldi	r18, 0x08	; 8
    2452:	fc 01       	movw	r30, r24
    2454:	20 83       	st	Z, r18
    2456:	8b 81       	ldd	r24, Y+3	; 0x03
    2458:	9c 81       	ldd	r25, Y+4	; 0x04
    245a:	01 97       	sbiw	r24, 0x01	; 1
    245c:	9c 83       	std	Y+4, r25	; 0x04
    245e:	8b 83       	std	Y+3, r24	; 0x03
    2460:	8b 81       	ldd	r24, Y+3	; 0x03
    2462:	9c 81       	ldd	r25, Y+4	; 0x04
    2464:	29 e0       	ldi	r18, 0x09	; 9
    2466:	fc 01       	movw	r30, r24
    2468:	20 83       	st	Z, r18
    246a:	8b 81       	ldd	r24, Y+3	; 0x03
    246c:	9c 81       	ldd	r25, Y+4	; 0x04
    246e:	01 97       	sbiw	r24, 0x01	; 1
    2470:	9c 83       	std	Y+4, r25	; 0x04
    2472:	8b 83       	std	Y+3, r24	; 0x03
    2474:	8b 81       	ldd	r24, Y+3	; 0x03
    2476:	9c 81       	ldd	r25, Y+4	; 0x04
    2478:	20 e1       	ldi	r18, 0x10	; 16
    247a:	fc 01       	movw	r30, r24
    247c:	20 83       	st	Z, r18
    247e:	8b 81       	ldd	r24, Y+3	; 0x03
    2480:	9c 81       	ldd	r25, Y+4	; 0x04
    2482:	01 97       	sbiw	r24, 0x01	; 1
    2484:	9c 83       	std	Y+4, r25	; 0x04
    2486:	8b 83       	std	Y+3, r24	; 0x03
    2488:	8b 81       	ldd	r24, Y+3	; 0x03
    248a:	9c 81       	ldd	r25, Y+4	; 0x04
    248c:	21 e1       	ldi	r18, 0x11	; 17
    248e:	fc 01       	movw	r30, r24
    2490:	20 83       	st	Z, r18
    2492:	8b 81       	ldd	r24, Y+3	; 0x03
    2494:	9c 81       	ldd	r25, Y+4	; 0x04
    2496:	01 97       	sbiw	r24, 0x01	; 1
    2498:	9c 83       	std	Y+4, r25	; 0x04
    249a:	8b 83       	std	Y+3, r24	; 0x03
    249c:	8b 81       	ldd	r24, Y+3	; 0x03
    249e:	9c 81       	ldd	r25, Y+4	; 0x04
    24a0:	22 e1       	ldi	r18, 0x12	; 18
    24a2:	fc 01       	movw	r30, r24
    24a4:	20 83       	st	Z, r18
    24a6:	8b 81       	ldd	r24, Y+3	; 0x03
    24a8:	9c 81       	ldd	r25, Y+4	; 0x04
    24aa:	01 97       	sbiw	r24, 0x01	; 1
    24ac:	9c 83       	std	Y+4, r25	; 0x04
    24ae:	8b 83       	std	Y+3, r24	; 0x03
    24b0:	8b 81       	ldd	r24, Y+3	; 0x03
    24b2:	9c 81       	ldd	r25, Y+4	; 0x04
    24b4:	23 e1       	ldi	r18, 0x13	; 19
    24b6:	fc 01       	movw	r30, r24
    24b8:	20 83       	st	Z, r18
    24ba:	8b 81       	ldd	r24, Y+3	; 0x03
    24bc:	9c 81       	ldd	r25, Y+4	; 0x04
    24be:	01 97       	sbiw	r24, 0x01	; 1
    24c0:	9c 83       	std	Y+4, r25	; 0x04
    24c2:	8b 83       	std	Y+3, r24	; 0x03
    24c4:	8b 81       	ldd	r24, Y+3	; 0x03
    24c6:	9c 81       	ldd	r25, Y+4	; 0x04
    24c8:	24 e1       	ldi	r18, 0x14	; 20
    24ca:	fc 01       	movw	r30, r24
    24cc:	20 83       	st	Z, r18
    24ce:	8b 81       	ldd	r24, Y+3	; 0x03
    24d0:	9c 81       	ldd	r25, Y+4	; 0x04
    24d2:	01 97       	sbiw	r24, 0x01	; 1
    24d4:	9c 83       	std	Y+4, r25	; 0x04
    24d6:	8b 83       	std	Y+3, r24	; 0x03
    24d8:	8b 81       	ldd	r24, Y+3	; 0x03
    24da:	9c 81       	ldd	r25, Y+4	; 0x04
    24dc:	25 e1       	ldi	r18, 0x15	; 21
    24de:	fc 01       	movw	r30, r24
    24e0:	20 83       	st	Z, r18
    24e2:	8b 81       	ldd	r24, Y+3	; 0x03
    24e4:	9c 81       	ldd	r25, Y+4	; 0x04
    24e6:	01 97       	sbiw	r24, 0x01	; 1
    24e8:	9c 83       	std	Y+4, r25	; 0x04
    24ea:	8b 83       	std	Y+3, r24	; 0x03
    24ec:	8b 81       	ldd	r24, Y+3	; 0x03
    24ee:	9c 81       	ldd	r25, Y+4	; 0x04
    24f0:	26 e1       	ldi	r18, 0x16	; 22
    24f2:	fc 01       	movw	r30, r24
    24f4:	20 83       	st	Z, r18
    24f6:	8b 81       	ldd	r24, Y+3	; 0x03
    24f8:	9c 81       	ldd	r25, Y+4	; 0x04
    24fa:	01 97       	sbiw	r24, 0x01	; 1
    24fc:	9c 83       	std	Y+4, r25	; 0x04
    24fe:	8b 83       	std	Y+3, r24	; 0x03
    2500:	8b 81       	ldd	r24, Y+3	; 0x03
    2502:	9c 81       	ldd	r25, Y+4	; 0x04
    2504:	27 e1       	ldi	r18, 0x17	; 23
    2506:	fc 01       	movw	r30, r24
    2508:	20 83       	st	Z, r18
    250a:	8b 81       	ldd	r24, Y+3	; 0x03
    250c:	9c 81       	ldd	r25, Y+4	; 0x04
    250e:	01 97       	sbiw	r24, 0x01	; 1
    2510:	9c 83       	std	Y+4, r25	; 0x04
    2512:	8b 83       	std	Y+3, r24	; 0x03
    2514:	8b 81       	ldd	r24, Y+3	; 0x03
    2516:	9c 81       	ldd	r25, Y+4	; 0x04
    2518:	28 e1       	ldi	r18, 0x18	; 24
    251a:	fc 01       	movw	r30, r24
    251c:	20 83       	st	Z, r18
    251e:	8b 81       	ldd	r24, Y+3	; 0x03
    2520:	9c 81       	ldd	r25, Y+4	; 0x04
    2522:	01 97       	sbiw	r24, 0x01	; 1
    2524:	9c 83       	std	Y+4, r25	; 0x04
    2526:	8b 83       	std	Y+3, r24	; 0x03
    2528:	8b 81       	ldd	r24, Y+3	; 0x03
    252a:	9c 81       	ldd	r25, Y+4	; 0x04
    252c:	29 e1       	ldi	r18, 0x19	; 25
    252e:	fc 01       	movw	r30, r24
    2530:	20 83       	st	Z, r18
    2532:	8b 81       	ldd	r24, Y+3	; 0x03
    2534:	9c 81       	ldd	r25, Y+4	; 0x04
    2536:	01 97       	sbiw	r24, 0x01	; 1
    2538:	9c 83       	std	Y+4, r25	; 0x04
    253a:	8b 83       	std	Y+3, r24	; 0x03
    253c:	8b 81       	ldd	r24, Y+3	; 0x03
    253e:	9c 81       	ldd	r25, Y+4	; 0x04
    2540:	20 e2       	ldi	r18, 0x20	; 32
    2542:	fc 01       	movw	r30, r24
    2544:	20 83       	st	Z, r18
    2546:	8b 81       	ldd	r24, Y+3	; 0x03
    2548:	9c 81       	ldd	r25, Y+4	; 0x04
    254a:	01 97       	sbiw	r24, 0x01	; 1
    254c:	9c 83       	std	Y+4, r25	; 0x04
    254e:	8b 83       	std	Y+3, r24	; 0x03
    2550:	8b 81       	ldd	r24, Y+3	; 0x03
    2552:	9c 81       	ldd	r25, Y+4	; 0x04
    2554:	21 e2       	ldi	r18, 0x21	; 33
    2556:	fc 01       	movw	r30, r24
    2558:	20 83       	st	Z, r18
    255a:	8b 81       	ldd	r24, Y+3	; 0x03
    255c:	9c 81       	ldd	r25, Y+4	; 0x04
    255e:	01 97       	sbiw	r24, 0x01	; 1
    2560:	9c 83       	std	Y+4, r25	; 0x04
    2562:	8b 83       	std	Y+3, r24	; 0x03
    2564:	8b 81       	ldd	r24, Y+3	; 0x03
    2566:	9c 81       	ldd	r25, Y+4	; 0x04
    2568:	22 e2       	ldi	r18, 0x22	; 34
    256a:	fc 01       	movw	r30, r24
    256c:	20 83       	st	Z, r18
    256e:	8b 81       	ldd	r24, Y+3	; 0x03
    2570:	9c 81       	ldd	r25, Y+4	; 0x04
    2572:	01 97       	sbiw	r24, 0x01	; 1
    2574:	9c 83       	std	Y+4, r25	; 0x04
    2576:	8b 83       	std	Y+3, r24	; 0x03
    2578:	8b 81       	ldd	r24, Y+3	; 0x03
    257a:	9c 81       	ldd	r25, Y+4	; 0x04
    257c:	23 e2       	ldi	r18, 0x23	; 35
    257e:	fc 01       	movw	r30, r24
    2580:	20 83       	st	Z, r18
    2582:	8b 81       	ldd	r24, Y+3	; 0x03
    2584:	9c 81       	ldd	r25, Y+4	; 0x04
    2586:	01 97       	sbiw	r24, 0x01	; 1
    2588:	9c 83       	std	Y+4, r25	; 0x04
    258a:	8b 83       	std	Y+3, r24	; 0x03
    258c:	8f 81       	ldd	r24, Y+7	; 0x07
    258e:	98 85       	ldd	r25, Y+8	; 0x08
    2590:	9a 83       	std	Y+2, r25	; 0x02
    2592:	89 83       	std	Y+1, r24	; 0x01
    2594:	29 81       	ldd	r18, Y+1	; 0x01
    2596:	8b 81       	ldd	r24, Y+3	; 0x03
    2598:	9c 81       	ldd	r25, Y+4	; 0x04
    259a:	fc 01       	movw	r30, r24
    259c:	20 83       	st	Z, r18
    259e:	8b 81       	ldd	r24, Y+3	; 0x03
    25a0:	9c 81       	ldd	r25, Y+4	; 0x04
    25a2:	01 97       	sbiw	r24, 0x01	; 1
    25a4:	9c 83       	std	Y+4, r25	; 0x04
    25a6:	8b 83       	std	Y+3, r24	; 0x03
    25a8:	89 81       	ldd	r24, Y+1	; 0x01
    25aa:	9a 81       	ldd	r25, Y+2	; 0x02
    25ac:	89 2f       	mov	r24, r25
    25ae:	99 27       	eor	r25, r25
    25b0:	9a 83       	std	Y+2, r25	; 0x02
    25b2:	89 83       	std	Y+1, r24	; 0x01
    25b4:	29 81       	ldd	r18, Y+1	; 0x01
    25b6:	8b 81       	ldd	r24, Y+3	; 0x03
    25b8:	9c 81       	ldd	r25, Y+4	; 0x04
    25ba:	fc 01       	movw	r30, r24
    25bc:	20 83       	st	Z, r18
    25be:	8b 81       	ldd	r24, Y+3	; 0x03
    25c0:	9c 81       	ldd	r25, Y+4	; 0x04
    25c2:	01 97       	sbiw	r24, 0x01	; 1
    25c4:	9c 83       	std	Y+4, r25	; 0x04
    25c6:	8b 83       	std	Y+3, r24	; 0x03
    25c8:	8b 81       	ldd	r24, Y+3	; 0x03
    25ca:	9c 81       	ldd	r25, Y+4	; 0x04
    25cc:	26 e2       	ldi	r18, 0x26	; 38
    25ce:	fc 01       	movw	r30, r24
    25d0:	20 83       	st	Z, r18
    25d2:	8b 81       	ldd	r24, Y+3	; 0x03
    25d4:	9c 81       	ldd	r25, Y+4	; 0x04
    25d6:	01 97       	sbiw	r24, 0x01	; 1
    25d8:	9c 83       	std	Y+4, r25	; 0x04
    25da:	8b 83       	std	Y+3, r24	; 0x03
    25dc:	8b 81       	ldd	r24, Y+3	; 0x03
    25de:	9c 81       	ldd	r25, Y+4	; 0x04
    25e0:	27 e2       	ldi	r18, 0x27	; 39
    25e2:	fc 01       	movw	r30, r24
    25e4:	20 83       	st	Z, r18
    25e6:	8b 81       	ldd	r24, Y+3	; 0x03
    25e8:	9c 81       	ldd	r25, Y+4	; 0x04
    25ea:	01 97       	sbiw	r24, 0x01	; 1
    25ec:	9c 83       	std	Y+4, r25	; 0x04
    25ee:	8b 83       	std	Y+3, r24	; 0x03
    25f0:	8b 81       	ldd	r24, Y+3	; 0x03
    25f2:	9c 81       	ldd	r25, Y+4	; 0x04
    25f4:	28 e2       	ldi	r18, 0x28	; 40
    25f6:	fc 01       	movw	r30, r24
    25f8:	20 83       	st	Z, r18
    25fa:	8b 81       	ldd	r24, Y+3	; 0x03
    25fc:	9c 81       	ldd	r25, Y+4	; 0x04
    25fe:	01 97       	sbiw	r24, 0x01	; 1
    2600:	9c 83       	std	Y+4, r25	; 0x04
    2602:	8b 83       	std	Y+3, r24	; 0x03
    2604:	8b 81       	ldd	r24, Y+3	; 0x03
    2606:	9c 81       	ldd	r25, Y+4	; 0x04
    2608:	29 e2       	ldi	r18, 0x29	; 41
    260a:	fc 01       	movw	r30, r24
    260c:	20 83       	st	Z, r18
    260e:	8b 81       	ldd	r24, Y+3	; 0x03
    2610:	9c 81       	ldd	r25, Y+4	; 0x04
    2612:	01 97       	sbiw	r24, 0x01	; 1
    2614:	9c 83       	std	Y+4, r25	; 0x04
    2616:	8b 83       	std	Y+3, r24	; 0x03
    2618:	8b 81       	ldd	r24, Y+3	; 0x03
    261a:	9c 81       	ldd	r25, Y+4	; 0x04
    261c:	20 e3       	ldi	r18, 0x30	; 48
    261e:	fc 01       	movw	r30, r24
    2620:	20 83       	st	Z, r18
    2622:	8b 81       	ldd	r24, Y+3	; 0x03
    2624:	9c 81       	ldd	r25, Y+4	; 0x04
    2626:	01 97       	sbiw	r24, 0x01	; 1
    2628:	9c 83       	std	Y+4, r25	; 0x04
    262a:	8b 83       	std	Y+3, r24	; 0x03
    262c:	8b 81       	ldd	r24, Y+3	; 0x03
    262e:	9c 81       	ldd	r25, Y+4	; 0x04
    2630:	21 e3       	ldi	r18, 0x31	; 49
    2632:	fc 01       	movw	r30, r24
    2634:	20 83       	st	Z, r18
    2636:	8b 81       	ldd	r24, Y+3	; 0x03
    2638:	9c 81       	ldd	r25, Y+4	; 0x04
    263a:	01 97       	sbiw	r24, 0x01	; 1
    263c:	9c 83       	std	Y+4, r25	; 0x04
    263e:	8b 83       	std	Y+3, r24	; 0x03
    2640:	8b 81       	ldd	r24, Y+3	; 0x03
    2642:	9c 81       	ldd	r25, Y+4	; 0x04
    2644:	28 96       	adiw	r28, 0x08	; 8
    2646:	0f b6       	in	r0, 0x3f	; 63
    2648:	f8 94       	cli
    264a:	de bf       	out	0x3e, r29	; 62
    264c:	0f be       	out	0x3f, r0	; 63
    264e:	cd bf       	out	0x3d, r28	; 61
    2650:	df 91       	pop	r29
    2652:	cf 91       	pop	r28
    2654:	08 95       	ret

00002656 <xPortStartScheduler>:
    2656:	cf 93       	push	r28
    2658:	df 93       	push	r29
    265a:	cd b7       	in	r28, 0x3d	; 61
    265c:	de b7       	in	r29, 0x3e	; 62
    265e:	0e 94 18 14 	call	0x2830	; 0x2830 <prvSetupTimerInterrupt>
    2662:	a0 91 e4 07 	lds	r26, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    2666:	b0 91 e5 07 	lds	r27, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    266a:	cd 91       	ld	r28, X+
    266c:	cd bf       	out	0x3d, r28	; 61
    266e:	dd 91       	ld	r29, X+
    2670:	de bf       	out	0x3e, r29	; 62
    2672:	ff 91       	pop	r31
    2674:	ef 91       	pop	r30
    2676:	df 91       	pop	r29
    2678:	cf 91       	pop	r28
    267a:	bf 91       	pop	r27
    267c:	af 91       	pop	r26
    267e:	9f 91       	pop	r25
    2680:	8f 91       	pop	r24
    2682:	7f 91       	pop	r23
    2684:	6f 91       	pop	r22
    2686:	5f 91       	pop	r21
    2688:	4f 91       	pop	r20
    268a:	3f 91       	pop	r19
    268c:	2f 91       	pop	r18
    268e:	1f 91       	pop	r17
    2690:	0f 91       	pop	r16
    2692:	ff 90       	pop	r15
    2694:	ef 90       	pop	r14
    2696:	df 90       	pop	r13
    2698:	cf 90       	pop	r12
    269a:	bf 90       	pop	r11
    269c:	af 90       	pop	r10
    269e:	9f 90       	pop	r9
    26a0:	8f 90       	pop	r8
    26a2:	7f 90       	pop	r7
    26a4:	6f 90       	pop	r6
    26a6:	5f 90       	pop	r5
    26a8:	4f 90       	pop	r4
    26aa:	3f 90       	pop	r3
    26ac:	2f 90       	pop	r2
    26ae:	1f 90       	pop	r1
    26b0:	0f 90       	pop	r0
    26b2:	0f be       	out	0x3f, r0	; 63
    26b4:	0f 90       	pop	r0
    26b6:	08 95       	ret
    26b8:	81 e0       	ldi	r24, 0x01	; 1
    26ba:	df 91       	pop	r29
    26bc:	cf 91       	pop	r28
    26be:	08 95       	ret

000026c0 <vPortYield>:
    26c0:	0f 92       	push	r0
    26c2:	0f b6       	in	r0, 0x3f	; 63
    26c4:	f8 94       	cli
    26c6:	0f 92       	push	r0
    26c8:	1f 92       	push	r1
    26ca:	11 24       	eor	r1, r1
    26cc:	2f 92       	push	r2
    26ce:	3f 92       	push	r3
    26d0:	4f 92       	push	r4
    26d2:	5f 92       	push	r5
    26d4:	6f 92       	push	r6
    26d6:	7f 92       	push	r7
    26d8:	8f 92       	push	r8
    26da:	9f 92       	push	r9
    26dc:	af 92       	push	r10
    26de:	bf 92       	push	r11
    26e0:	cf 92       	push	r12
    26e2:	df 92       	push	r13
    26e4:	ef 92       	push	r14
    26e6:	ff 92       	push	r15
    26e8:	0f 93       	push	r16
    26ea:	1f 93       	push	r17
    26ec:	2f 93       	push	r18
    26ee:	3f 93       	push	r19
    26f0:	4f 93       	push	r20
    26f2:	5f 93       	push	r21
    26f4:	6f 93       	push	r22
    26f6:	7f 93       	push	r23
    26f8:	8f 93       	push	r24
    26fa:	9f 93       	push	r25
    26fc:	af 93       	push	r26
    26fe:	bf 93       	push	r27
    2700:	cf 93       	push	r28
    2702:	df 93       	push	r29
    2704:	ef 93       	push	r30
    2706:	ff 93       	push	r31
    2708:	a0 91 e4 07 	lds	r26, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    270c:	b0 91 e5 07 	lds	r27, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    2710:	0d b6       	in	r0, 0x3d	; 61
    2712:	0d 92       	st	X+, r0
    2714:	0e b6       	in	r0, 0x3e	; 62
    2716:	0d 92       	st	X+, r0
    2718:	0e 94 69 22 	call	0x44d2	; 0x44d2 <vTaskSwitchContext>
    271c:	a0 91 e4 07 	lds	r26, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    2720:	b0 91 e5 07 	lds	r27, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    2724:	cd 91       	ld	r28, X+
    2726:	cd bf       	out	0x3d, r28	; 61
    2728:	dd 91       	ld	r29, X+
    272a:	de bf       	out	0x3e, r29	; 62
    272c:	ff 91       	pop	r31
    272e:	ef 91       	pop	r30
    2730:	df 91       	pop	r29
    2732:	cf 91       	pop	r28
    2734:	bf 91       	pop	r27
    2736:	af 91       	pop	r26
    2738:	9f 91       	pop	r25
    273a:	8f 91       	pop	r24
    273c:	7f 91       	pop	r23
    273e:	6f 91       	pop	r22
    2740:	5f 91       	pop	r21
    2742:	4f 91       	pop	r20
    2744:	3f 91       	pop	r19
    2746:	2f 91       	pop	r18
    2748:	1f 91       	pop	r17
    274a:	0f 91       	pop	r16
    274c:	ff 90       	pop	r15
    274e:	ef 90       	pop	r14
    2750:	df 90       	pop	r13
    2752:	cf 90       	pop	r12
    2754:	bf 90       	pop	r11
    2756:	af 90       	pop	r10
    2758:	9f 90       	pop	r9
    275a:	8f 90       	pop	r8
    275c:	7f 90       	pop	r7
    275e:	6f 90       	pop	r6
    2760:	5f 90       	pop	r5
    2762:	4f 90       	pop	r4
    2764:	3f 90       	pop	r3
    2766:	2f 90       	pop	r2
    2768:	1f 90       	pop	r1
    276a:	0f 90       	pop	r0
    276c:	0f be       	out	0x3f, r0	; 63
    276e:	0f 90       	pop	r0
    2770:	08 95       	ret
	...

00002774 <vPortYieldFromTick>:
    2774:	0f 92       	push	r0
    2776:	0f b6       	in	r0, 0x3f	; 63
    2778:	f8 94       	cli
    277a:	0f 92       	push	r0
    277c:	1f 92       	push	r1
    277e:	11 24       	eor	r1, r1
    2780:	2f 92       	push	r2
    2782:	3f 92       	push	r3
    2784:	4f 92       	push	r4
    2786:	5f 92       	push	r5
    2788:	6f 92       	push	r6
    278a:	7f 92       	push	r7
    278c:	8f 92       	push	r8
    278e:	9f 92       	push	r9
    2790:	af 92       	push	r10
    2792:	bf 92       	push	r11
    2794:	cf 92       	push	r12
    2796:	df 92       	push	r13
    2798:	ef 92       	push	r14
    279a:	ff 92       	push	r15
    279c:	0f 93       	push	r16
    279e:	1f 93       	push	r17
    27a0:	2f 93       	push	r18
    27a2:	3f 93       	push	r19
    27a4:	4f 93       	push	r20
    27a6:	5f 93       	push	r21
    27a8:	6f 93       	push	r22
    27aa:	7f 93       	push	r23
    27ac:	8f 93       	push	r24
    27ae:	9f 93       	push	r25
    27b0:	af 93       	push	r26
    27b2:	bf 93       	push	r27
    27b4:	cf 93       	push	r28
    27b6:	df 93       	push	r29
    27b8:	ef 93       	push	r30
    27ba:	ff 93       	push	r31
    27bc:	a0 91 e4 07 	lds	r26, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    27c0:	b0 91 e5 07 	lds	r27, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    27c4:	0d b6       	in	r0, 0x3d	; 61
    27c6:	0d 92       	st	X+, r0
    27c8:	0e b6       	in	r0, 0x3e	; 62
    27ca:	0d 92       	st	X+, r0
    27cc:	0e 94 4c 21 	call	0x4298	; 0x4298 <xTaskIncrementTick>
    27d0:	88 23       	and	r24, r24
    27d2:	11 f0       	breq	.+4      	; 0x27d8 <vPortYieldFromTick+0x64>
    27d4:	0e 94 69 22 	call	0x44d2	; 0x44d2 <vTaskSwitchContext>
    27d8:	a0 91 e4 07 	lds	r26, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    27dc:	b0 91 e5 07 	lds	r27, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    27e0:	cd 91       	ld	r28, X+
    27e2:	cd bf       	out	0x3d, r28	; 61
    27e4:	dd 91       	ld	r29, X+
    27e6:	de bf       	out	0x3e, r29	; 62
    27e8:	ff 91       	pop	r31
    27ea:	ef 91       	pop	r30
    27ec:	df 91       	pop	r29
    27ee:	cf 91       	pop	r28
    27f0:	bf 91       	pop	r27
    27f2:	af 91       	pop	r26
    27f4:	9f 91       	pop	r25
    27f6:	8f 91       	pop	r24
    27f8:	7f 91       	pop	r23
    27fa:	6f 91       	pop	r22
    27fc:	5f 91       	pop	r21
    27fe:	4f 91       	pop	r20
    2800:	3f 91       	pop	r19
    2802:	2f 91       	pop	r18
    2804:	1f 91       	pop	r17
    2806:	0f 91       	pop	r16
    2808:	ff 90       	pop	r15
    280a:	ef 90       	pop	r14
    280c:	df 90       	pop	r13
    280e:	cf 90       	pop	r12
    2810:	bf 90       	pop	r11
    2812:	af 90       	pop	r10
    2814:	9f 90       	pop	r9
    2816:	8f 90       	pop	r8
    2818:	7f 90       	pop	r7
    281a:	6f 90       	pop	r6
    281c:	5f 90       	pop	r5
    281e:	4f 90       	pop	r4
    2820:	3f 90       	pop	r3
    2822:	2f 90       	pop	r2
    2824:	1f 90       	pop	r1
    2826:	0f 90       	pop	r0
    2828:	0f be       	out	0x3f, r0	; 63
    282a:	0f 90       	pop	r0
    282c:	08 95       	ret
	...

00002830 <prvSetupTimerInterrupt>:
    2830:	cf 93       	push	r28
    2832:	df 93       	push	r29
    2834:	00 d0       	rcall	.+0      	; 0x2836 <prvSetupTimerInterrupt+0x6>
    2836:	00 d0       	rcall	.+0      	; 0x2838 <prvSetupTimerInterrupt+0x8>
    2838:	00 d0       	rcall	.+0      	; 0x283a <prvSetupTimerInterrupt+0xa>
    283a:	cd b7       	in	r28, 0x3d	; 61
    283c:	de b7       	in	r29, 0x3e	; 62
    283e:	89 e9       	ldi	r24, 0x99	; 153
    2840:	99 e3       	ldi	r25, 0x39	; 57
    2842:	a0 e0       	ldi	r26, 0x00	; 0
    2844:	b0 e0       	ldi	r27, 0x00	; 0
    2846:	89 83       	std	Y+1, r24	; 0x01
    2848:	9a 83       	std	Y+2, r25	; 0x02
    284a:	ab 83       	std	Y+3, r26	; 0x03
    284c:	bc 83       	std	Y+4, r27	; 0x04
    284e:	89 81       	ldd	r24, Y+1	; 0x01
    2850:	9a 81       	ldd	r25, Y+2	; 0x02
    2852:	ab 81       	ldd	r26, Y+3	; 0x03
    2854:	bc 81       	ldd	r27, Y+4	; 0x04
    2856:	68 94       	set
    2858:	15 f8       	bld	r1, 5
    285a:	b6 95       	lsr	r27
    285c:	a7 95       	ror	r26
    285e:	97 95       	ror	r25
    2860:	87 95       	ror	r24
    2862:	16 94       	lsr	r1
    2864:	d1 f7       	brne	.-12     	; 0x285a <prvSetupTimerInterrupt+0x2a>
    2866:	89 83       	std	Y+1, r24	; 0x01
    2868:	9a 83       	std	Y+2, r25	; 0x02
    286a:	ab 83       	std	Y+3, r26	; 0x03
    286c:	bc 83       	std	Y+4, r27	; 0x04
    286e:	89 81       	ldd	r24, Y+1	; 0x01
    2870:	9a 81       	ldd	r25, Y+2	; 0x02
    2872:	ab 81       	ldd	r26, Y+3	; 0x03
    2874:	bc 81       	ldd	r27, Y+4	; 0x04
    2876:	01 97       	sbiw	r24, 0x01	; 1
    2878:	a1 09       	sbc	r26, r1
    287a:	b1 09       	sbc	r27, r1
    287c:	89 83       	std	Y+1, r24	; 0x01
    287e:	9a 83       	std	Y+2, r25	; 0x02
    2880:	ab 83       	std	Y+3, r26	; 0x03
    2882:	bc 83       	std	Y+4, r27	; 0x04
    2884:	89 81       	ldd	r24, Y+1	; 0x01
    2886:	8d 83       	std	Y+5, r24	; 0x05
    2888:	89 81       	ldd	r24, Y+1	; 0x01
    288a:	9a 81       	ldd	r25, Y+2	; 0x02
    288c:	ab 81       	ldd	r26, Y+3	; 0x03
    288e:	bc 81       	ldd	r27, Y+4	; 0x04
    2890:	89 2f       	mov	r24, r25
    2892:	9a 2f       	mov	r25, r26
    2894:	ab 2f       	mov	r26, r27
    2896:	bb 27       	eor	r27, r27
    2898:	89 83       	std	Y+1, r24	; 0x01
    289a:	9a 83       	std	Y+2, r25	; 0x02
    289c:	ab 83       	std	Y+3, r26	; 0x03
    289e:	bc 83       	std	Y+4, r27	; 0x04
    28a0:	89 81       	ldd	r24, Y+1	; 0x01
    28a2:	8e 83       	std	Y+6, r24	; 0x06
    28a4:	89 e8       	ldi	r24, 0x89	; 137
    28a6:	90 e0       	ldi	r25, 0x00	; 0
    28a8:	2e 81       	ldd	r18, Y+6	; 0x06
    28aa:	fc 01       	movw	r30, r24
    28ac:	20 83       	st	Z, r18
    28ae:	88 e8       	ldi	r24, 0x88	; 136
    28b0:	90 e0       	ldi	r25, 0x00	; 0
    28b2:	2d 81       	ldd	r18, Y+5	; 0x05
    28b4:	fc 01       	movw	r30, r24
    28b6:	20 83       	st	Z, r18
    28b8:	8b e0       	ldi	r24, 0x0B	; 11
    28ba:	8d 83       	std	Y+5, r24	; 0x05
    28bc:	81 e8       	ldi	r24, 0x81	; 129
    28be:	90 e0       	ldi	r25, 0x00	; 0
    28c0:	2d 81       	ldd	r18, Y+5	; 0x05
    28c2:	fc 01       	movw	r30, r24
    28c4:	20 83       	st	Z, r18
    28c6:	8f e6       	ldi	r24, 0x6F	; 111
    28c8:	90 e0       	ldi	r25, 0x00	; 0
    28ca:	fc 01       	movw	r30, r24
    28cc:	80 81       	ld	r24, Z
    28ce:	8d 83       	std	Y+5, r24	; 0x05
    28d0:	8d 81       	ldd	r24, Y+5	; 0x05
    28d2:	82 60       	ori	r24, 0x02	; 2
    28d4:	8d 83       	std	Y+5, r24	; 0x05
    28d6:	8f e6       	ldi	r24, 0x6F	; 111
    28d8:	90 e0       	ldi	r25, 0x00	; 0
    28da:	2d 81       	ldd	r18, Y+5	; 0x05
    28dc:	fc 01       	movw	r30, r24
    28de:	20 83       	st	Z, r18
    28e0:	00 00       	nop
    28e2:	26 96       	adiw	r28, 0x06	; 6
    28e4:	0f b6       	in	r0, 0x3f	; 63
    28e6:	f8 94       	cli
    28e8:	de bf       	out	0x3e, r29	; 62
    28ea:	0f be       	out	0x3f, r0	; 63
    28ec:	cd bf       	out	0x3d, r28	; 61
    28ee:	df 91       	pop	r29
    28f0:	cf 91       	pop	r28
    28f2:	08 95       	ret

000028f4 <__vector_13>:
    28f4:	0e 94 ba 13 	call	0x2774	; 0x2774 <vPortYieldFromTick>
    28f8:	18 95       	reti
	...

000028fc <_serial_tx_int_on>:
    28fc:	cf 93       	push	r28
    28fe:	df 93       	push	r29
    2900:	00 d0       	rcall	.+0      	; 0x2902 <_serial_tx_int_on+0x6>
    2902:	cd b7       	in	r28, 0x3d	; 61
    2904:	de b7       	in	r29, 0x3e	; 62
    2906:	9a 83       	std	Y+2, r25	; 0x02
    2908:	89 83       	std	Y+1, r24	; 0x01
    290a:	89 81       	ldd	r24, Y+1	; 0x01
    290c:	9a 81       	ldd	r25, Y+2	; 0x02
    290e:	05 97       	sbiw	r24, 0x05	; 5
    2910:	29 81       	ldd	r18, Y+1	; 0x01
    2912:	3a 81       	ldd	r19, Y+2	; 0x02
    2914:	25 50       	subi	r18, 0x05	; 5
    2916:	31 09       	sbc	r19, r1
    2918:	f9 01       	movw	r30, r18
    291a:	20 81       	ld	r18, Z
    291c:	20 62       	ori	r18, 0x20	; 32
    291e:	fc 01       	movw	r30, r24
    2920:	20 83       	st	Z, r18
    2922:	00 00       	nop
    2924:	0f 90       	pop	r0
    2926:	0f 90       	pop	r0
    2928:	df 91       	pop	r29
    292a:	cf 91       	pop	r28
    292c:	08 95       	ret

0000292e <serial_new_instance>:
    292e:	8f 92       	push	r8
    2930:	9f 92       	push	r9
    2932:	af 92       	push	r10
    2934:	bf 92       	push	r11
    2936:	cf 92       	push	r12
    2938:	df 92       	push	r13
    293a:	ef 92       	push	r14
    293c:	0f 93       	push	r16
    293e:	1f 93       	push	r17
    2940:	cf 93       	push	r28
    2942:	df 93       	push	r29
    2944:	cd b7       	in	r28, 0x3d	; 61
    2946:	de b7       	in	r29, 0x3e	; 62
    2948:	61 97       	sbiw	r28, 0x11	; 17
    294a:	0f b6       	in	r0, 0x3f	; 63
    294c:	f8 94       	cli
    294e:	de bf       	out	0x3e, r29	; 62
    2950:	0f be       	out	0x3f, r0	; 63
    2952:	cd bf       	out	0x3d, r28	; 61
    2954:	8c 83       	std	Y+4, r24	; 0x04
    2956:	4d 83       	std	Y+5, r20	; 0x05
    2958:	5e 83       	std	Y+6, r21	; 0x06
    295a:	6f 83       	std	Y+7, r22	; 0x07
    295c:	78 87       	std	Y+8, r23	; 0x08
    295e:	29 87       	std	Y+9, r18	; 0x09
    2960:	0a 87       	std	Y+10, r16	; 0x0a
    2962:	eb 86       	std	Y+11, r14	; 0x0b
    2964:	dd 86       	std	Y+13, r13	; 0x0d
    2966:	cc 86       	std	Y+12, r12	; 0x0c
    2968:	bf 86       	std	Y+15, r11	; 0x0f
    296a:	ae 86       	std	Y+14, r10	; 0x0e
    296c:	99 8a       	std	Y+17, r9	; 0x11
    296e:	88 8a       	std	Y+16, r8	; 0x10
    2970:	88 e0       	ldi	r24, 0x08	; 8
    2972:	90 e0       	ldi	r25, 0x00	; 0
    2974:	0e 94 ea 16 	call	0x2dd4	; 0x2dd4 <pvPortMalloc>
    2978:	9a 83       	std	Y+2, r25	; 0x02
    297a:	89 83       	std	Y+1, r24	; 0x01
    297c:	8c 81       	ldd	r24, Y+4	; 0x04
    297e:	88 2f       	mov	r24, r24
    2980:	90 e0       	ldi	r25, 0x00	; 0
    2982:	88 0f       	add	r24, r24
    2984:	99 1f       	adc	r25, r25
    2986:	81 5a       	subi	r24, 0xA1	; 161
    2988:	9d 4f       	sbci	r25, 0xFD	; 253
    298a:	29 81       	ldd	r18, Y+1	; 0x01
    298c:	3a 81       	ldd	r19, Y+2	; 0x02
    298e:	fc 01       	movw	r30, r24
    2990:	31 83       	std	Z+1, r19	; 0x01
    2992:	20 83       	st	Z, r18
    2994:	8c 81       	ldd	r24, Y+4	; 0x04
    2996:	88 2f       	mov	r24, r24
    2998:	90 e0       	ldi	r25, 0x00	; 0
    299a:	88 0f       	add	r24, r24
    299c:	99 1f       	adc	r25, r25
    299e:	82 5e       	subi	r24, 0xE2	; 226
    29a0:	9e 4f       	sbci	r25, 0xFE	; 254
    29a2:	fc 01       	movw	r30, r24
    29a4:	20 81       	ld	r18, Z
    29a6:	31 81       	ldd	r19, Z+1	; 0x01
    29a8:	89 81       	ldd	r24, Y+1	; 0x01
    29aa:	9a 81       	ldd	r25, Y+2	; 0x02
    29ac:	fc 01       	movw	r30, r24
    29ae:	31 83       	std	Z+1, r19	; 0x01
    29b0:	20 83       	st	Z, r18
    29b2:	89 81       	ldd	r24, Y+1	; 0x01
    29b4:	9a 81       	ldd	r25, Y+2	; 0x02
    29b6:	2e 85       	ldd	r18, Y+14	; 0x0e
    29b8:	3f 85       	ldd	r19, Y+15	; 0x0f
    29ba:	fc 01       	movw	r30, r24
    29bc:	33 83       	std	Z+3, r19	; 0x03
    29be:	22 83       	std	Z+2, r18	; 0x02
    29c0:	89 81       	ldd	r24, Y+1	; 0x01
    29c2:	9a 81       	ldd	r25, Y+2	; 0x02
    29c4:	2c 85       	ldd	r18, Y+12	; 0x0c
    29c6:	3d 85       	ldd	r19, Y+13	; 0x0d
    29c8:	fc 01       	movw	r30, r24
    29ca:	35 83       	std	Z+5, r19	; 0x05
    29cc:	24 83       	std	Z+4, r18	; 0x04
    29ce:	89 81       	ldd	r24, Y+1	; 0x01
    29d0:	9a 81       	ldd	r25, Y+2	; 0x02
    29d2:	28 89       	ldd	r18, Y+16	; 0x10
    29d4:	39 89       	ldd	r19, Y+17	; 0x11
    29d6:	fc 01       	movw	r30, r24
    29d8:	37 83       	std	Z+7, r19	; 0x07
    29da:	26 83       	std	Z+6, r18	; 0x06
    29dc:	8f e5       	ldi	r24, 0x5F	; 95
    29de:	90 e0       	ldi	r25, 0x00	; 0
    29e0:	fc 01       	movw	r30, r24
    29e2:	80 81       	ld	r24, Z
    29e4:	8b 83       	std	Y+3, r24	; 0x03
    29e6:	f8 94       	cli
    29e8:	89 81       	ldd	r24, Y+1	; 0x01
    29ea:	9a 81       	ldd	r25, Y+2	; 0x02
    29ec:	fc 01       	movw	r30, r24
    29ee:	80 81       	ld	r24, Z
    29f0:	91 81       	ldd	r25, Z+1	; 0x01
    29f2:	06 97       	sbiw	r24, 0x06	; 6
    29f4:	29 81       	ldd	r18, Y+1	; 0x01
    29f6:	3a 81       	ldd	r19, Y+2	; 0x02
    29f8:	f9 01       	movw	r30, r18
    29fa:	20 81       	ld	r18, Z
    29fc:	31 81       	ldd	r19, Z+1	; 0x01
    29fe:	26 50       	subi	r18, 0x06	; 6
    2a00:	31 09       	sbc	r19, r1
    2a02:	f9 01       	movw	r30, r18
    2a04:	20 81       	ld	r18, Z
    2a06:	22 60       	ori	r18, 0x02	; 2
    2a08:	fc 01       	movw	r30, r24
    2a0a:	20 83       	st	Z, r18
    2a0c:	89 81       	ldd	r24, Y+1	; 0x01
    2a0e:	9a 81       	ldd	r25, Y+2	; 0x02
    2a10:	fc 01       	movw	r30, r24
    2a12:	80 81       	ld	r24, Z
    2a14:	91 81       	ldd	r25, Z+1	; 0x01
    2a16:	8c 01       	movw	r16, r24
    2a18:	02 50       	subi	r16, 0x02	; 2
    2a1a:	11 09       	sbc	r17, r1
    2a1c:	8d 81       	ldd	r24, Y+5	; 0x05
    2a1e:	9e 81       	ldd	r25, Y+6	; 0x06
    2a20:	af 81       	ldd	r26, Y+7	; 0x07
    2a22:	b8 85       	ldd	r27, Y+8	; 0x08
    2a24:	88 0f       	add	r24, r24
    2a26:	99 1f       	adc	r25, r25
    2a28:	aa 1f       	adc	r26, r26
    2a2a:	bb 1f       	adc	r27, r27
    2a2c:	88 0f       	add	r24, r24
    2a2e:	99 1f       	adc	r25, r25
    2a30:	aa 1f       	adc	r26, r26
    2a32:	bb 1f       	adc	r27, r27
    2a34:	88 0f       	add	r24, r24
    2a36:	99 1f       	adc	r25, r25
    2a38:	aa 1f       	adc	r26, r26
    2a3a:	bb 1f       	adc	r27, r27
    2a3c:	9c 01       	movw	r18, r24
    2a3e:	ad 01       	movw	r20, r26
    2a40:	80 e0       	ldi	r24, 0x00	; 0
    2a42:	90 e0       	ldi	r25, 0x00	; 0
    2a44:	a1 ee       	ldi	r26, 0xE1	; 225
    2a46:	b0 e0       	ldi	r27, 0x00	; 0
    2a48:	bc 01       	movw	r22, r24
    2a4a:	cd 01       	movw	r24, r26
    2a4c:	0e 94 0e 27 	call	0x4e1c	; 0x4e1c <__udivmodsi4>
    2a50:	da 01       	movw	r26, r20
    2a52:	c9 01       	movw	r24, r18
    2a54:	81 50       	subi	r24, 0x01	; 1
    2a56:	f8 01       	movw	r30, r16
    2a58:	80 83       	st	Z, r24
    2a5a:	89 81       	ldd	r24, Y+1	; 0x01
    2a5c:	9a 81       	ldd	r25, Y+2	; 0x02
    2a5e:	fc 01       	movw	r30, r24
    2a60:	80 81       	ld	r24, Z
    2a62:	91 81       	ldd	r25, Z+1	; 0x01
    2a64:	05 97       	sbiw	r24, 0x05	; 5
    2a66:	28 e9       	ldi	r18, 0x98	; 152
    2a68:	fc 01       	movw	r30, r24
    2a6a:	20 83       	st	Z, r18
    2a6c:	89 81       	ldd	r24, Y+1	; 0x01
    2a6e:	9a 81       	ldd	r25, Y+2	; 0x02
    2a70:	fc 01       	movw	r30, r24
    2a72:	80 81       	ld	r24, Z
    2a74:	91 81       	ldd	r25, Z+1	; 0x01
    2a76:	04 97       	sbiw	r24, 0x04	; 4
    2a78:	26 e0       	ldi	r18, 0x06	; 6
    2a7a:	fc 01       	movw	r30, r24
    2a7c:	20 83       	st	Z, r18
    2a7e:	8f e5       	ldi	r24, 0x5F	; 95
    2a80:	90 e0       	ldi	r25, 0x00	; 0
    2a82:	2b 81       	ldd	r18, Y+3	; 0x03
    2a84:	fc 01       	movw	r30, r24
    2a86:	20 83       	st	Z, r18
    2a88:	89 81       	ldd	r24, Y+1	; 0x01
    2a8a:	9a 81       	ldd	r25, Y+2	; 0x02
    2a8c:	61 96       	adiw	r28, 0x11	; 17
    2a8e:	0f b6       	in	r0, 0x3f	; 63
    2a90:	f8 94       	cli
    2a92:	de bf       	out	0x3e, r29	; 62
    2a94:	0f be       	out	0x3f, r0	; 63
    2a96:	cd bf       	out	0x3d, r28	; 61
    2a98:	df 91       	pop	r29
    2a9a:	cf 91       	pop	r28
    2a9c:	1f 91       	pop	r17
    2a9e:	0f 91       	pop	r16
    2aa0:	ef 90       	pop	r14
    2aa2:	df 90       	pop	r13
    2aa4:	cf 90       	pop	r12
    2aa6:	bf 90       	pop	r11
    2aa8:	af 90       	pop	r10
    2aaa:	9f 90       	pop	r9
    2aac:	8f 90       	pop	r8
    2aae:	08 95       	ret

00002ab0 <serial_send_byte>:
    2ab0:	cf 93       	push	r28
    2ab2:	df 93       	push	r29
    2ab4:	00 d0       	rcall	.+0      	; 0x2ab6 <serial_send_byte+0x6>
    2ab6:	1f 92       	push	r1
    2ab8:	cd b7       	in	r28, 0x3d	; 61
    2aba:	de b7       	in	r29, 0x3e	; 62
    2abc:	9a 83       	std	Y+2, r25	; 0x02
    2abe:	89 83       	std	Y+1, r24	; 0x01
    2ac0:	6b 83       	std	Y+3, r22	; 0x03
    2ac2:	89 81       	ldd	r24, Y+1	; 0x01
    2ac4:	9a 81       	ldd	r25, Y+2	; 0x02
    2ac6:	fc 01       	movw	r30, r24
    2ac8:	82 81       	ldd	r24, Z+2	; 0x02
    2aca:	93 81       	ldd	r25, Z+3	; 0x03
    2acc:	89 2b       	or	r24, r25
    2ace:	99 f0       	breq	.+38     	; 0x2af6 <serial_send_byte+0x46>
    2ad0:	89 81       	ldd	r24, Y+1	; 0x01
    2ad2:	9a 81       	ldd	r25, Y+2	; 0x02
    2ad4:	fc 01       	movw	r30, r24
    2ad6:	82 81       	ldd	r24, Z+2	; 0x02
    2ad8:	93 81       	ldd	r25, Z+3	; 0x03
    2ada:	6b 81       	ldd	r22, Y+3	; 0x03
    2adc:	0e 94 d9 0f 	call	0x1fb2	; 0x1fb2 <buffer_put_item>
    2ae0:	88 23       	and	r24, r24
    2ae2:	49 f4       	brne	.+18     	; 0x2af6 <serial_send_byte+0x46>
    2ae4:	89 81       	ldd	r24, Y+1	; 0x01
    2ae6:	9a 81       	ldd	r25, Y+2	; 0x02
    2ae8:	fc 01       	movw	r30, r24
    2aea:	80 81       	ld	r24, Z
    2aec:	91 81       	ldd	r25, Z+1	; 0x01
    2aee:	0e 94 7e 14 	call	0x28fc	; 0x28fc <_serial_tx_int_on>
    2af2:	80 e0       	ldi	r24, 0x00	; 0
    2af4:	01 c0       	rjmp	.+2      	; 0x2af8 <serial_send_byte+0x48>
    2af6:	82 e0       	ldi	r24, 0x02	; 2
    2af8:	0f 90       	pop	r0
    2afa:	0f 90       	pop	r0
    2afc:	0f 90       	pop	r0
    2afe:	df 91       	pop	r29
    2b00:	cf 91       	pop	r28
    2b02:	08 95       	ret

00002b04 <__vector_20>:
    2b04:	1f 92       	push	r1
    2b06:	0f 92       	push	r0
    2b08:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    2b0c:	0f 92       	push	r0
    2b0e:	11 24       	eor	r1, r1
    2b10:	2f 93       	push	r18
    2b12:	3f 93       	push	r19
    2b14:	4f 93       	push	r20
    2b16:	5f 93       	push	r21
    2b18:	6f 93       	push	r22
    2b1a:	7f 93       	push	r23
    2b1c:	8f 93       	push	r24
    2b1e:	9f 93       	push	r25
    2b20:	af 93       	push	r26
    2b22:	bf 93       	push	r27
    2b24:	ef 93       	push	r30
    2b26:	ff 93       	push	r31
    2b28:	cf 93       	push	r28
    2b2a:	df 93       	push	r29
    2b2c:	1f 92       	push	r1
    2b2e:	cd b7       	in	r28, 0x3d	; 61
    2b30:	de b7       	in	r29, 0x3e	; 62
    2b32:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <_ser_handle>
    2b36:	90 91 60 02 	lds	r25, 0x0260	; 0x800260 <_ser_handle+0x1>
    2b3a:	89 2b       	or	r24, r25
    2b3c:	31 f1       	breq	.+76     	; 0x2b8a <__vector_20+0x86>
    2b3e:	86 ec       	ldi	r24, 0xC6	; 198
    2b40:	90 e0       	ldi	r25, 0x00	; 0
    2b42:	fc 01       	movw	r30, r24
    2b44:	80 81       	ld	r24, Z
    2b46:	89 83       	std	Y+1, r24	; 0x01
    2b48:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <_ser_handle>
    2b4c:	90 91 60 02 	lds	r25, 0x0260	; 0x800260 <_ser_handle+0x1>
    2b50:	fc 01       	movw	r30, r24
    2b52:	84 81       	ldd	r24, Z+4	; 0x04
    2b54:	95 81       	ldd	r25, Z+5	; 0x05
    2b56:	69 81       	ldd	r22, Y+1	; 0x01
    2b58:	0e 94 d9 0f 	call	0x1fb2	; 0x1fb2 <buffer_put_item>
    2b5c:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <_ser_handle>
    2b60:	90 91 60 02 	lds	r25, 0x0260	; 0x800260 <_ser_handle+0x1>
    2b64:	fc 01       	movw	r30, r24
    2b66:	86 81       	ldd	r24, Z+6	; 0x06
    2b68:	97 81       	ldd	r25, Z+7	; 0x07
    2b6a:	89 2b       	or	r24, r25
    2b6c:	71 f0       	breq	.+28     	; 0x2b8a <__vector_20+0x86>
    2b6e:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <_ser_handle>
    2b72:	90 91 60 02 	lds	r25, 0x0260	; 0x800260 <_ser_handle+0x1>
    2b76:	fc 01       	movw	r30, r24
    2b78:	26 81       	ldd	r18, Z+6	; 0x06
    2b7a:	37 81       	ldd	r19, Z+7	; 0x07
    2b7c:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <_ser_handle>
    2b80:	90 91 60 02 	lds	r25, 0x0260	; 0x800260 <_ser_handle+0x1>
    2b84:	69 81       	ldd	r22, Y+1	; 0x01
    2b86:	f9 01       	movw	r30, r18
    2b88:	09 95       	icall
    2b8a:	00 00       	nop
    2b8c:	0f 90       	pop	r0
    2b8e:	df 91       	pop	r29
    2b90:	cf 91       	pop	r28
    2b92:	ff 91       	pop	r31
    2b94:	ef 91       	pop	r30
    2b96:	bf 91       	pop	r27
    2b98:	af 91       	pop	r26
    2b9a:	9f 91       	pop	r25
    2b9c:	8f 91       	pop	r24
    2b9e:	7f 91       	pop	r23
    2ba0:	6f 91       	pop	r22
    2ba2:	5f 91       	pop	r21
    2ba4:	4f 91       	pop	r20
    2ba6:	3f 91       	pop	r19
    2ba8:	2f 91       	pop	r18
    2baa:	0f 90       	pop	r0
    2bac:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    2bb0:	0f 90       	pop	r0
    2bb2:	1f 90       	pop	r1
    2bb4:	18 95       	reti

00002bb6 <__vector_21>:
    2bb6:	1f 92       	push	r1
    2bb8:	0f 92       	push	r0
    2bba:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    2bbe:	0f 92       	push	r0
    2bc0:	11 24       	eor	r1, r1
    2bc2:	2f 93       	push	r18
    2bc4:	3f 93       	push	r19
    2bc6:	4f 93       	push	r20
    2bc8:	5f 93       	push	r21
    2bca:	6f 93       	push	r22
    2bcc:	7f 93       	push	r23
    2bce:	8f 93       	push	r24
    2bd0:	9f 93       	push	r25
    2bd2:	af 93       	push	r26
    2bd4:	bf 93       	push	r27
    2bd6:	ef 93       	push	r30
    2bd8:	ff 93       	push	r31
    2bda:	cf 93       	push	r28
    2bdc:	df 93       	push	r29
    2bde:	1f 92       	push	r1
    2be0:	cd b7       	in	r28, 0x3d	; 61
    2be2:	de b7       	in	r29, 0x3e	; 62
    2be4:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <_ser_handle>
    2be8:	90 91 60 02 	lds	r25, 0x0260	; 0x800260 <_ser_handle+0x1>
    2bec:	89 2b       	or	r24, r25
    2bee:	f9 f0       	breq	.+62     	; 0x2c2e <__vector_21+0x78>
    2bf0:	80 91 5f 02 	lds	r24, 0x025F	; 0x80025f <_ser_handle>
    2bf4:	90 91 60 02 	lds	r25, 0x0260	; 0x800260 <_ser_handle+0x1>
    2bf8:	fc 01       	movw	r30, r24
    2bfa:	82 81       	ldd	r24, Z+2	; 0x02
    2bfc:	93 81       	ldd	r25, Z+3	; 0x03
    2bfe:	9e 01       	movw	r18, r28
    2c00:	2f 5f       	subi	r18, 0xFF	; 255
    2c02:	3f 4f       	sbci	r19, 0xFF	; 255
    2c04:	b9 01       	movw	r22, r18
    2c06:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <buffer_get_item>
    2c0a:	88 23       	and	r24, r24
    2c0c:	31 f4       	brne	.+12     	; 0x2c1a <__vector_21+0x64>
    2c0e:	86 ec       	ldi	r24, 0xC6	; 198
    2c10:	90 e0       	ldi	r25, 0x00	; 0
    2c12:	29 81       	ldd	r18, Y+1	; 0x01
    2c14:	fc 01       	movw	r30, r24
    2c16:	20 83       	st	Z, r18
    2c18:	13 c0       	rjmp	.+38     	; 0x2c40 <__vector_21+0x8a>
    2c1a:	81 ec       	ldi	r24, 0xC1	; 193
    2c1c:	90 e0       	ldi	r25, 0x00	; 0
    2c1e:	21 ec       	ldi	r18, 0xC1	; 193
    2c20:	30 e0       	ldi	r19, 0x00	; 0
    2c22:	f9 01       	movw	r30, r18
    2c24:	20 81       	ld	r18, Z
    2c26:	2f 7d       	andi	r18, 0xDF	; 223
    2c28:	fc 01       	movw	r30, r24
    2c2a:	20 83       	st	Z, r18
    2c2c:	09 c0       	rjmp	.+18     	; 0x2c40 <__vector_21+0x8a>
    2c2e:	81 ec       	ldi	r24, 0xC1	; 193
    2c30:	90 e0       	ldi	r25, 0x00	; 0
    2c32:	21 ec       	ldi	r18, 0xC1	; 193
    2c34:	30 e0       	ldi	r19, 0x00	; 0
    2c36:	f9 01       	movw	r30, r18
    2c38:	20 81       	ld	r18, Z
    2c3a:	2f 7d       	andi	r18, 0xDF	; 223
    2c3c:	fc 01       	movw	r30, r24
    2c3e:	20 83       	st	Z, r18
    2c40:	00 00       	nop
    2c42:	0f 90       	pop	r0
    2c44:	df 91       	pop	r29
    2c46:	cf 91       	pop	r28
    2c48:	ff 91       	pop	r31
    2c4a:	ef 91       	pop	r30
    2c4c:	bf 91       	pop	r27
    2c4e:	af 91       	pop	r26
    2c50:	9f 91       	pop	r25
    2c52:	8f 91       	pop	r24
    2c54:	7f 91       	pop	r23
    2c56:	6f 91       	pop	r22
    2c58:	5f 91       	pop	r21
    2c5a:	4f 91       	pop	r20
    2c5c:	3f 91       	pop	r19
    2c5e:	2f 91       	pop	r18
    2c60:	0f 90       	pop	r0
    2c62:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    2c66:	0f 90       	pop	r0
    2c68:	1f 90       	pop	r1
    2c6a:	18 95       	reti

00002c6c <__vector_28>:
    2c6c:	1f 92       	push	r1
    2c6e:	0f 92       	push	r0
    2c70:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    2c74:	0f 92       	push	r0
    2c76:	11 24       	eor	r1, r1
    2c78:	2f 93       	push	r18
    2c7a:	3f 93       	push	r19
    2c7c:	4f 93       	push	r20
    2c7e:	5f 93       	push	r21
    2c80:	6f 93       	push	r22
    2c82:	7f 93       	push	r23
    2c84:	8f 93       	push	r24
    2c86:	9f 93       	push	r25
    2c88:	af 93       	push	r26
    2c8a:	bf 93       	push	r27
    2c8c:	ef 93       	push	r30
    2c8e:	ff 93       	push	r31
    2c90:	cf 93       	push	r28
    2c92:	df 93       	push	r29
    2c94:	1f 92       	push	r1
    2c96:	cd b7       	in	r28, 0x3d	; 61
    2c98:	de b7       	in	r29, 0x3e	; 62
    2c9a:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <_ser_handle+0x2>
    2c9e:	90 91 62 02 	lds	r25, 0x0262	; 0x800262 <_ser_handle+0x3>
    2ca2:	89 2b       	or	r24, r25
    2ca4:	31 f1       	breq	.+76     	; 0x2cf2 <__vector_28+0x86>
    2ca6:	8e ec       	ldi	r24, 0xCE	; 206
    2ca8:	90 e0       	ldi	r25, 0x00	; 0
    2caa:	fc 01       	movw	r30, r24
    2cac:	80 81       	ld	r24, Z
    2cae:	89 83       	std	Y+1, r24	; 0x01
    2cb0:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <_ser_handle+0x2>
    2cb4:	90 91 62 02 	lds	r25, 0x0262	; 0x800262 <_ser_handle+0x3>
    2cb8:	fc 01       	movw	r30, r24
    2cba:	84 81       	ldd	r24, Z+4	; 0x04
    2cbc:	95 81       	ldd	r25, Z+5	; 0x05
    2cbe:	69 81       	ldd	r22, Y+1	; 0x01
    2cc0:	0e 94 d9 0f 	call	0x1fb2	; 0x1fb2 <buffer_put_item>
    2cc4:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <_ser_handle+0x2>
    2cc8:	90 91 62 02 	lds	r25, 0x0262	; 0x800262 <_ser_handle+0x3>
    2ccc:	fc 01       	movw	r30, r24
    2cce:	86 81       	ldd	r24, Z+6	; 0x06
    2cd0:	97 81       	ldd	r25, Z+7	; 0x07
    2cd2:	89 2b       	or	r24, r25
    2cd4:	71 f0       	breq	.+28     	; 0x2cf2 <__vector_28+0x86>
    2cd6:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <_ser_handle+0x2>
    2cda:	90 91 62 02 	lds	r25, 0x0262	; 0x800262 <_ser_handle+0x3>
    2cde:	fc 01       	movw	r30, r24
    2ce0:	26 81       	ldd	r18, Z+6	; 0x06
    2ce2:	37 81       	ldd	r19, Z+7	; 0x07
    2ce4:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <_ser_handle+0x2>
    2ce8:	90 91 62 02 	lds	r25, 0x0262	; 0x800262 <_ser_handle+0x3>
    2cec:	69 81       	ldd	r22, Y+1	; 0x01
    2cee:	f9 01       	movw	r30, r18
    2cf0:	09 95       	icall
    2cf2:	00 00       	nop
    2cf4:	0f 90       	pop	r0
    2cf6:	df 91       	pop	r29
    2cf8:	cf 91       	pop	r28
    2cfa:	ff 91       	pop	r31
    2cfc:	ef 91       	pop	r30
    2cfe:	bf 91       	pop	r27
    2d00:	af 91       	pop	r26
    2d02:	9f 91       	pop	r25
    2d04:	8f 91       	pop	r24
    2d06:	7f 91       	pop	r23
    2d08:	6f 91       	pop	r22
    2d0a:	5f 91       	pop	r21
    2d0c:	4f 91       	pop	r20
    2d0e:	3f 91       	pop	r19
    2d10:	2f 91       	pop	r18
    2d12:	0f 90       	pop	r0
    2d14:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    2d18:	0f 90       	pop	r0
    2d1a:	1f 90       	pop	r1
    2d1c:	18 95       	reti

00002d1e <__vector_29>:
    2d1e:	1f 92       	push	r1
    2d20:	0f 92       	push	r0
    2d22:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    2d26:	0f 92       	push	r0
    2d28:	11 24       	eor	r1, r1
    2d2a:	2f 93       	push	r18
    2d2c:	3f 93       	push	r19
    2d2e:	4f 93       	push	r20
    2d30:	5f 93       	push	r21
    2d32:	6f 93       	push	r22
    2d34:	7f 93       	push	r23
    2d36:	8f 93       	push	r24
    2d38:	9f 93       	push	r25
    2d3a:	af 93       	push	r26
    2d3c:	bf 93       	push	r27
    2d3e:	ef 93       	push	r30
    2d40:	ff 93       	push	r31
    2d42:	cf 93       	push	r28
    2d44:	df 93       	push	r29
    2d46:	1f 92       	push	r1
    2d48:	cd b7       	in	r28, 0x3d	; 61
    2d4a:	de b7       	in	r29, 0x3e	; 62
    2d4c:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <_ser_handle+0x2>
    2d50:	90 91 62 02 	lds	r25, 0x0262	; 0x800262 <_ser_handle+0x3>
    2d54:	89 2b       	or	r24, r25
    2d56:	f9 f0       	breq	.+62     	; 0x2d96 <__vector_29+0x78>
    2d58:	80 91 61 02 	lds	r24, 0x0261	; 0x800261 <_ser_handle+0x2>
    2d5c:	90 91 62 02 	lds	r25, 0x0262	; 0x800262 <_ser_handle+0x3>
    2d60:	fc 01       	movw	r30, r24
    2d62:	82 81       	ldd	r24, Z+2	; 0x02
    2d64:	93 81       	ldd	r25, Z+3	; 0x03
    2d66:	9e 01       	movw	r18, r28
    2d68:	2f 5f       	subi	r18, 0xFF	; 255
    2d6a:	3f 4f       	sbci	r19, 0xFF	; 255
    2d6c:	b9 01       	movw	r22, r18
    2d6e:	0e 94 91 0f 	call	0x1f22	; 0x1f22 <buffer_get_item>
    2d72:	88 23       	and	r24, r24
    2d74:	31 f4       	brne	.+12     	; 0x2d82 <__vector_29+0x64>
    2d76:	8e ec       	ldi	r24, 0xCE	; 206
    2d78:	90 e0       	ldi	r25, 0x00	; 0
    2d7a:	29 81       	ldd	r18, Y+1	; 0x01
    2d7c:	fc 01       	movw	r30, r24
    2d7e:	20 83       	st	Z, r18
    2d80:	13 c0       	rjmp	.+38     	; 0x2da8 <__vector_29+0x8a>
    2d82:	89 ec       	ldi	r24, 0xC9	; 201
    2d84:	90 e0       	ldi	r25, 0x00	; 0
    2d86:	29 ec       	ldi	r18, 0xC9	; 201
    2d88:	30 e0       	ldi	r19, 0x00	; 0
    2d8a:	f9 01       	movw	r30, r18
    2d8c:	20 81       	ld	r18, Z
    2d8e:	2f 7d       	andi	r18, 0xDF	; 223
    2d90:	fc 01       	movw	r30, r24
    2d92:	20 83       	st	Z, r18
    2d94:	09 c0       	rjmp	.+18     	; 0x2da8 <__vector_29+0x8a>
    2d96:	89 ec       	ldi	r24, 0xC9	; 201
    2d98:	90 e0       	ldi	r25, 0x00	; 0
    2d9a:	29 ec       	ldi	r18, 0xC9	; 201
    2d9c:	30 e0       	ldi	r19, 0x00	; 0
    2d9e:	f9 01       	movw	r30, r18
    2da0:	20 81       	ld	r18, Z
    2da2:	2f 7d       	andi	r18, 0xDF	; 223
    2da4:	fc 01       	movw	r30, r24
    2da6:	20 83       	st	Z, r18
    2da8:	00 00       	nop
    2daa:	0f 90       	pop	r0
    2dac:	df 91       	pop	r29
    2dae:	cf 91       	pop	r28
    2db0:	ff 91       	pop	r31
    2db2:	ef 91       	pop	r30
    2db4:	bf 91       	pop	r27
    2db6:	af 91       	pop	r26
    2db8:	9f 91       	pop	r25
    2dba:	8f 91       	pop	r24
    2dbc:	7f 91       	pop	r23
    2dbe:	6f 91       	pop	r22
    2dc0:	5f 91       	pop	r21
    2dc2:	4f 91       	pop	r20
    2dc4:	3f 91       	pop	r19
    2dc6:	2f 91       	pop	r18
    2dc8:	0f 90       	pop	r0
    2dca:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
    2dce:	0f 90       	pop	r0
    2dd0:	1f 90       	pop	r1
    2dd2:	18 95       	reti

00002dd4 <pvPortMalloc>:
    2dd4:	cf 93       	push	r28
    2dd6:	df 93       	push	r29
    2dd8:	cd b7       	in	r28, 0x3d	; 61
    2dda:	de b7       	in	r29, 0x3e	; 62
    2ddc:	2e 97       	sbiw	r28, 0x0e	; 14
    2dde:	0f b6       	in	r0, 0x3f	; 63
    2de0:	f8 94       	cli
    2de2:	de bf       	out	0x3e, r29	; 62
    2de4:	0f be       	out	0x3f, r0	; 63
    2de6:	cd bf       	out	0x3d, r28	; 61
    2de8:	9e 87       	std	Y+14, r25	; 0x0e
    2dea:	8d 87       	std	Y+13, r24	; 0x0d
    2dec:	1e 82       	std	Y+6, r1	; 0x06
    2dee:	1d 82       	std	Y+5, r1	; 0x05
    2df0:	0e 94 91 20 	call	0x4122	; 0x4122 <vTaskSuspendAll>
    2df4:	80 91 e3 07 	lds	r24, 0x07E3	; 0x8007e3 <xHeapHasBeenInitialised.2095>
    2df8:	88 23       	and	r24, r24
    2dfa:	29 f4       	brne	.+10     	; 0x2e06 <pvPortMalloc+0x32>
    2dfc:	0e 94 51 18 	call	0x30a2	; 0x30a2 <prvHeapInit>
    2e00:	81 e0       	ldi	r24, 0x01	; 1
    2e02:	80 93 e3 07 	sts	0x07E3, r24	; 0x8007e3 <xHeapHasBeenInitialised.2095>
    2e06:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e08:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e0a:	89 2b       	or	r24, r25
    2e0c:	41 f0       	breq	.+16     	; 0x2e1e <pvPortMalloc+0x4a>
    2e0e:	84 e0       	ldi	r24, 0x04	; 4
    2e10:	90 e0       	ldi	r25, 0x00	; 0
    2e12:	2d 85       	ldd	r18, Y+13	; 0x0d
    2e14:	3e 85       	ldd	r19, Y+14	; 0x0e
    2e16:	82 0f       	add	r24, r18
    2e18:	93 1f       	adc	r25, r19
    2e1a:	9e 87       	std	Y+14, r25	; 0x0e
    2e1c:	8d 87       	std	Y+13, r24	; 0x0d
    2e1e:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e20:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e22:	89 2b       	or	r24, r25
    2e24:	09 f4       	brne	.+2      	; 0x2e28 <pvPortMalloc+0x54>
    2e26:	b8 c0       	rjmp	.+368    	; 0x2f98 <pvPortMalloc+0x1c4>
    2e28:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e2a:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e2c:	87 37       	cpi	r24, 0x77	; 119
    2e2e:	95 40       	sbci	r25, 0x05	; 5
    2e30:	08 f0       	brcs	.+2      	; 0x2e34 <pvPortMalloc+0x60>
    2e32:	b2 c0       	rjmp	.+356    	; 0x2f98 <pvPortMalloc+0x1c4>
    2e34:	8b ed       	ldi	r24, 0xDB	; 219
    2e36:	97 e0       	ldi	r25, 0x07	; 7
    2e38:	9c 83       	std	Y+4, r25	; 0x04
    2e3a:	8b 83       	std	Y+3, r24	; 0x03
    2e3c:	80 91 db 07 	lds	r24, 0x07DB	; 0x8007db <xStart>
    2e40:	90 91 dc 07 	lds	r25, 0x07DC	; 0x8007dc <xStart+0x1>
    2e44:	9a 83       	std	Y+2, r25	; 0x02
    2e46:	89 83       	std	Y+1, r24	; 0x01
    2e48:	0b c0       	rjmp	.+22     	; 0x2e60 <pvPortMalloc+0x8c>
    2e4a:	89 81       	ldd	r24, Y+1	; 0x01
    2e4c:	9a 81       	ldd	r25, Y+2	; 0x02
    2e4e:	9c 83       	std	Y+4, r25	; 0x04
    2e50:	8b 83       	std	Y+3, r24	; 0x03
    2e52:	89 81       	ldd	r24, Y+1	; 0x01
    2e54:	9a 81       	ldd	r25, Y+2	; 0x02
    2e56:	fc 01       	movw	r30, r24
    2e58:	80 81       	ld	r24, Z
    2e5a:	91 81       	ldd	r25, Z+1	; 0x01
    2e5c:	9a 83       	std	Y+2, r25	; 0x02
    2e5e:	89 83       	std	Y+1, r24	; 0x01
    2e60:	89 81       	ldd	r24, Y+1	; 0x01
    2e62:	9a 81       	ldd	r25, Y+2	; 0x02
    2e64:	fc 01       	movw	r30, r24
    2e66:	22 81       	ldd	r18, Z+2	; 0x02
    2e68:	33 81       	ldd	r19, Z+3	; 0x03
    2e6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e6c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e6e:	28 17       	cp	r18, r24
    2e70:	39 07       	cpc	r19, r25
    2e72:	38 f4       	brcc	.+14     	; 0x2e82 <pvPortMalloc+0xae>
    2e74:	89 81       	ldd	r24, Y+1	; 0x01
    2e76:	9a 81       	ldd	r25, Y+2	; 0x02
    2e78:	fc 01       	movw	r30, r24
    2e7a:	80 81       	ld	r24, Z
    2e7c:	91 81       	ldd	r25, Z+1	; 0x01
    2e7e:	89 2b       	or	r24, r25
    2e80:	21 f7       	brne	.-56     	; 0x2e4a <pvPortMalloc+0x76>
    2e82:	89 81       	ldd	r24, Y+1	; 0x01
    2e84:	9a 81       	ldd	r25, Y+2	; 0x02
    2e86:	8f 5d       	subi	r24, 0xDF	; 223
    2e88:	97 40       	sbci	r25, 0x07	; 7
    2e8a:	09 f4       	brne	.+2      	; 0x2e8e <pvPortMalloc+0xba>
    2e8c:	85 c0       	rjmp	.+266    	; 0x2f98 <pvPortMalloc+0x1c4>
    2e8e:	8b 81       	ldd	r24, Y+3	; 0x03
    2e90:	9c 81       	ldd	r25, Y+4	; 0x04
    2e92:	fc 01       	movw	r30, r24
    2e94:	20 81       	ld	r18, Z
    2e96:	31 81       	ldd	r19, Z+1	; 0x01
    2e98:	84 e0       	ldi	r24, 0x04	; 4
    2e9a:	90 e0       	ldi	r25, 0x00	; 0
    2e9c:	82 0f       	add	r24, r18
    2e9e:	93 1f       	adc	r25, r19
    2ea0:	9e 83       	std	Y+6, r25	; 0x06
    2ea2:	8d 83       	std	Y+5, r24	; 0x05
    2ea4:	89 81       	ldd	r24, Y+1	; 0x01
    2ea6:	9a 81       	ldd	r25, Y+2	; 0x02
    2ea8:	fc 01       	movw	r30, r24
    2eaa:	20 81       	ld	r18, Z
    2eac:	31 81       	ldd	r19, Z+1	; 0x01
    2eae:	8b 81       	ldd	r24, Y+3	; 0x03
    2eb0:	9c 81       	ldd	r25, Y+4	; 0x04
    2eb2:	fc 01       	movw	r30, r24
    2eb4:	31 83       	std	Z+1, r19	; 0x01
    2eb6:	20 83       	st	Z, r18
    2eb8:	89 81       	ldd	r24, Y+1	; 0x01
    2eba:	9a 81       	ldd	r25, Y+2	; 0x02
    2ebc:	fc 01       	movw	r30, r24
    2ebe:	22 81       	ldd	r18, Z+2	; 0x02
    2ec0:	33 81       	ldd	r19, Z+3	; 0x03
    2ec2:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ec4:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ec6:	28 1b       	sub	r18, r24
    2ec8:	39 0b       	sbc	r19, r25
    2eca:	84 e0       	ldi	r24, 0x04	; 4
    2ecc:	90 e0       	ldi	r25, 0x00	; 0
    2ece:	88 0f       	add	r24, r24
    2ed0:	99 1f       	adc	r25, r25
    2ed2:	82 17       	cp	r24, r18
    2ed4:	93 07       	cpc	r25, r19
    2ed6:	08 f0       	brcs	.+2      	; 0x2eda <pvPortMalloc+0x106>
    2ed8:	4e c0       	rjmp	.+156    	; 0x2f76 <pvPortMalloc+0x1a2>
    2eda:	29 81       	ldd	r18, Y+1	; 0x01
    2edc:	3a 81       	ldd	r19, Y+2	; 0x02
    2ede:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ee0:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ee2:	82 0f       	add	r24, r18
    2ee4:	93 1f       	adc	r25, r19
    2ee6:	9a 87       	std	Y+10, r25	; 0x0a
    2ee8:	89 87       	std	Y+9, r24	; 0x09
    2eea:	89 81       	ldd	r24, Y+1	; 0x01
    2eec:	9a 81       	ldd	r25, Y+2	; 0x02
    2eee:	fc 01       	movw	r30, r24
    2ef0:	22 81       	ldd	r18, Z+2	; 0x02
    2ef2:	33 81       	ldd	r19, Z+3	; 0x03
    2ef4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ef6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ef8:	28 1b       	sub	r18, r24
    2efa:	39 0b       	sbc	r19, r25
    2efc:	89 85       	ldd	r24, Y+9	; 0x09
    2efe:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f00:	fc 01       	movw	r30, r24
    2f02:	33 83       	std	Z+3, r19	; 0x03
    2f04:	22 83       	std	Z+2, r18	; 0x02
    2f06:	89 81       	ldd	r24, Y+1	; 0x01
    2f08:	9a 81       	ldd	r25, Y+2	; 0x02
    2f0a:	2d 85       	ldd	r18, Y+13	; 0x0d
    2f0c:	3e 85       	ldd	r19, Y+14	; 0x0e
    2f0e:	fc 01       	movw	r30, r24
    2f10:	33 83       	std	Z+3, r19	; 0x03
    2f12:	22 83       	std	Z+2, r18	; 0x02
    2f14:	89 85       	ldd	r24, Y+9	; 0x09
    2f16:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f18:	fc 01       	movw	r30, r24
    2f1a:	82 81       	ldd	r24, Z+2	; 0x02
    2f1c:	93 81       	ldd	r25, Z+3	; 0x03
    2f1e:	9c 87       	std	Y+12, r25	; 0x0c
    2f20:	8b 87       	std	Y+11, r24	; 0x0b
    2f22:	8b ed       	ldi	r24, 0xDB	; 219
    2f24:	97 e0       	ldi	r25, 0x07	; 7
    2f26:	98 87       	std	Y+8, r25	; 0x08
    2f28:	8f 83       	std	Y+7, r24	; 0x07
    2f2a:	07 c0       	rjmp	.+14     	; 0x2f3a <pvPortMalloc+0x166>
    2f2c:	8f 81       	ldd	r24, Y+7	; 0x07
    2f2e:	98 85       	ldd	r25, Y+8	; 0x08
    2f30:	fc 01       	movw	r30, r24
    2f32:	80 81       	ld	r24, Z
    2f34:	91 81       	ldd	r25, Z+1	; 0x01
    2f36:	98 87       	std	Y+8, r25	; 0x08
    2f38:	8f 83       	std	Y+7, r24	; 0x07
    2f3a:	8f 81       	ldd	r24, Y+7	; 0x07
    2f3c:	98 85       	ldd	r25, Y+8	; 0x08
    2f3e:	fc 01       	movw	r30, r24
    2f40:	80 81       	ld	r24, Z
    2f42:	91 81       	ldd	r25, Z+1	; 0x01
    2f44:	fc 01       	movw	r30, r24
    2f46:	22 81       	ldd	r18, Z+2	; 0x02
    2f48:	33 81       	ldd	r19, Z+3	; 0x03
    2f4a:	8b 85       	ldd	r24, Y+11	; 0x0b
    2f4c:	9c 85       	ldd	r25, Y+12	; 0x0c
    2f4e:	28 17       	cp	r18, r24
    2f50:	39 07       	cpc	r19, r25
    2f52:	60 f3       	brcs	.-40     	; 0x2f2c <pvPortMalloc+0x158>
    2f54:	8f 81       	ldd	r24, Y+7	; 0x07
    2f56:	98 85       	ldd	r25, Y+8	; 0x08
    2f58:	fc 01       	movw	r30, r24
    2f5a:	20 81       	ld	r18, Z
    2f5c:	31 81       	ldd	r19, Z+1	; 0x01
    2f5e:	89 85       	ldd	r24, Y+9	; 0x09
    2f60:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f62:	fc 01       	movw	r30, r24
    2f64:	31 83       	std	Z+1, r19	; 0x01
    2f66:	20 83       	st	Z, r18
    2f68:	8f 81       	ldd	r24, Y+7	; 0x07
    2f6a:	98 85       	ldd	r25, Y+8	; 0x08
    2f6c:	29 85       	ldd	r18, Y+9	; 0x09
    2f6e:	3a 85       	ldd	r19, Y+10	; 0x0a
    2f70:	fc 01       	movw	r30, r24
    2f72:	31 83       	std	Z+1, r19	; 0x01
    2f74:	20 83       	st	Z, r18
    2f76:	20 91 22 01 	lds	r18, 0x0122	; 0x800122 <xFreeBytesRemaining>
    2f7a:	30 91 23 01 	lds	r19, 0x0123	; 0x800123 <xFreeBytesRemaining+0x1>
    2f7e:	89 81       	ldd	r24, Y+1	; 0x01
    2f80:	9a 81       	ldd	r25, Y+2	; 0x02
    2f82:	fc 01       	movw	r30, r24
    2f84:	82 81       	ldd	r24, Z+2	; 0x02
    2f86:	93 81       	ldd	r25, Z+3	; 0x03
    2f88:	a9 01       	movw	r20, r18
    2f8a:	48 1b       	sub	r20, r24
    2f8c:	59 0b       	sbc	r21, r25
    2f8e:	ca 01       	movw	r24, r20
    2f90:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <xFreeBytesRemaining+0x1>
    2f94:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <xFreeBytesRemaining>
    2f98:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    2f9c:	8d 81       	ldd	r24, Y+5	; 0x05
    2f9e:	9e 81       	ldd	r25, Y+6	; 0x06
    2fa0:	89 2b       	or	r24, r25
    2fa2:	11 f4       	brne	.+4      	; 0x2fa8 <pvPortMalloc+0x1d4>
    2fa4:	0e 94 86 08 	call	0x110c	; 0x110c <vApplicationMallocFailedHook>
    2fa8:	8d 81       	ldd	r24, Y+5	; 0x05
    2faa:	9e 81       	ldd	r25, Y+6	; 0x06
    2fac:	2e 96       	adiw	r28, 0x0e	; 14
    2fae:	0f b6       	in	r0, 0x3f	; 63
    2fb0:	f8 94       	cli
    2fb2:	de bf       	out	0x3e, r29	; 62
    2fb4:	0f be       	out	0x3f, r0	; 63
    2fb6:	cd bf       	out	0x3d, r28	; 61
    2fb8:	df 91       	pop	r29
    2fba:	cf 91       	pop	r28
    2fbc:	08 95       	ret

00002fbe <vPortFree>:
    2fbe:	cf 93       	push	r28
    2fc0:	df 93       	push	r29
    2fc2:	cd b7       	in	r28, 0x3d	; 61
    2fc4:	de b7       	in	r29, 0x3e	; 62
    2fc6:	2a 97       	sbiw	r28, 0x0a	; 10
    2fc8:	0f b6       	in	r0, 0x3f	; 63
    2fca:	f8 94       	cli
    2fcc:	de bf       	out	0x3e, r29	; 62
    2fce:	0f be       	out	0x3f, r0	; 63
    2fd0:	cd bf       	out	0x3d, r28	; 61
    2fd2:	9a 87       	std	Y+10, r25	; 0x0a
    2fd4:	89 87       	std	Y+9, r24	; 0x09
    2fd6:	89 85       	ldd	r24, Y+9	; 0x09
    2fd8:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fda:	9c 83       	std	Y+4, r25	; 0x04
    2fdc:	8b 83       	std	Y+3, r24	; 0x03
    2fde:	89 85       	ldd	r24, Y+9	; 0x09
    2fe0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fe2:	89 2b       	or	r24, r25
    2fe4:	09 f4       	brne	.+2      	; 0x2fe8 <vPortFree+0x2a>
    2fe6:	53 c0       	rjmp	.+166    	; 0x308e <vPortFree+0xd0>
    2fe8:	84 e0       	ldi	r24, 0x04	; 4
    2fea:	90 e0       	ldi	r25, 0x00	; 0
    2fec:	91 95       	neg	r25
    2fee:	81 95       	neg	r24
    2ff0:	91 09       	sbc	r25, r1
    2ff2:	2b 81       	ldd	r18, Y+3	; 0x03
    2ff4:	3c 81       	ldd	r19, Y+4	; 0x04
    2ff6:	82 0f       	add	r24, r18
    2ff8:	93 1f       	adc	r25, r19
    2ffa:	9c 83       	std	Y+4, r25	; 0x04
    2ffc:	8b 83       	std	Y+3, r24	; 0x03
    2ffe:	8b 81       	ldd	r24, Y+3	; 0x03
    3000:	9c 81       	ldd	r25, Y+4	; 0x04
    3002:	9e 83       	std	Y+6, r25	; 0x06
    3004:	8d 83       	std	Y+5, r24	; 0x05
    3006:	0e 94 91 20 	call	0x4122	; 0x4122 <vTaskSuspendAll>
    300a:	8d 81       	ldd	r24, Y+5	; 0x05
    300c:	9e 81       	ldd	r25, Y+6	; 0x06
    300e:	fc 01       	movw	r30, r24
    3010:	82 81       	ldd	r24, Z+2	; 0x02
    3012:	93 81       	ldd	r25, Z+3	; 0x03
    3014:	98 87       	std	Y+8, r25	; 0x08
    3016:	8f 83       	std	Y+7, r24	; 0x07
    3018:	8b ed       	ldi	r24, 0xDB	; 219
    301a:	97 e0       	ldi	r25, 0x07	; 7
    301c:	9a 83       	std	Y+2, r25	; 0x02
    301e:	89 83       	std	Y+1, r24	; 0x01
    3020:	07 c0       	rjmp	.+14     	; 0x3030 <vPortFree+0x72>
    3022:	89 81       	ldd	r24, Y+1	; 0x01
    3024:	9a 81       	ldd	r25, Y+2	; 0x02
    3026:	fc 01       	movw	r30, r24
    3028:	80 81       	ld	r24, Z
    302a:	91 81       	ldd	r25, Z+1	; 0x01
    302c:	9a 83       	std	Y+2, r25	; 0x02
    302e:	89 83       	std	Y+1, r24	; 0x01
    3030:	89 81       	ldd	r24, Y+1	; 0x01
    3032:	9a 81       	ldd	r25, Y+2	; 0x02
    3034:	fc 01       	movw	r30, r24
    3036:	80 81       	ld	r24, Z
    3038:	91 81       	ldd	r25, Z+1	; 0x01
    303a:	fc 01       	movw	r30, r24
    303c:	22 81       	ldd	r18, Z+2	; 0x02
    303e:	33 81       	ldd	r19, Z+3	; 0x03
    3040:	8f 81       	ldd	r24, Y+7	; 0x07
    3042:	98 85       	ldd	r25, Y+8	; 0x08
    3044:	28 17       	cp	r18, r24
    3046:	39 07       	cpc	r19, r25
    3048:	60 f3       	brcs	.-40     	; 0x3022 <vPortFree+0x64>
    304a:	89 81       	ldd	r24, Y+1	; 0x01
    304c:	9a 81       	ldd	r25, Y+2	; 0x02
    304e:	fc 01       	movw	r30, r24
    3050:	20 81       	ld	r18, Z
    3052:	31 81       	ldd	r19, Z+1	; 0x01
    3054:	8d 81       	ldd	r24, Y+5	; 0x05
    3056:	9e 81       	ldd	r25, Y+6	; 0x06
    3058:	fc 01       	movw	r30, r24
    305a:	31 83       	std	Z+1, r19	; 0x01
    305c:	20 83       	st	Z, r18
    305e:	89 81       	ldd	r24, Y+1	; 0x01
    3060:	9a 81       	ldd	r25, Y+2	; 0x02
    3062:	2d 81       	ldd	r18, Y+5	; 0x05
    3064:	3e 81       	ldd	r19, Y+6	; 0x06
    3066:	fc 01       	movw	r30, r24
    3068:	31 83       	std	Z+1, r19	; 0x01
    306a:	20 83       	st	Z, r18
    306c:	8d 81       	ldd	r24, Y+5	; 0x05
    306e:	9e 81       	ldd	r25, Y+6	; 0x06
    3070:	fc 01       	movw	r30, r24
    3072:	22 81       	ldd	r18, Z+2	; 0x02
    3074:	33 81       	ldd	r19, Z+3	; 0x03
    3076:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <xFreeBytesRemaining>
    307a:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <xFreeBytesRemaining+0x1>
    307e:	82 0f       	add	r24, r18
    3080:	93 1f       	adc	r25, r19
    3082:	90 93 23 01 	sts	0x0123, r25	; 0x800123 <xFreeBytesRemaining+0x1>
    3086:	80 93 22 01 	sts	0x0122, r24	; 0x800122 <xFreeBytesRemaining>
    308a:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    308e:	00 00       	nop
    3090:	2a 96       	adiw	r28, 0x0a	; 10
    3092:	0f b6       	in	r0, 0x3f	; 63
    3094:	f8 94       	cli
    3096:	de bf       	out	0x3e, r29	; 62
    3098:	0f be       	out	0x3f, r0	; 63
    309a:	cd bf       	out	0x3d, r28	; 61
    309c:	df 91       	pop	r29
    309e:	cf 91       	pop	r28
    30a0:	08 95       	ret

000030a2 <prvHeapInit>:
    30a2:	cf 93       	push	r28
    30a4:	df 93       	push	r29
    30a6:	00 d0       	rcall	.+0      	; 0x30a8 <prvHeapInit+0x6>
    30a8:	00 d0       	rcall	.+0      	; 0x30aa <prvHeapInit+0x8>
    30aa:	cd b7       	in	r28, 0x3d	; 61
    30ac:	de b7       	in	r29, 0x3e	; 62
    30ae:	84 e6       	ldi	r24, 0x64	; 100
    30b0:	92 e0       	ldi	r25, 0x02	; 2
    30b2:	9a 83       	std	Y+2, r25	; 0x02
    30b4:	89 83       	std	Y+1, r24	; 0x01
    30b6:	89 81       	ldd	r24, Y+1	; 0x01
    30b8:	9a 81       	ldd	r25, Y+2	; 0x02
    30ba:	90 93 dc 07 	sts	0x07DC, r25	; 0x8007dc <xStart+0x1>
    30be:	80 93 db 07 	sts	0x07DB, r24	; 0x8007db <xStart>
    30c2:	10 92 de 07 	sts	0x07DE, r1	; 0x8007de <xStart+0x3>
    30c6:	10 92 dd 07 	sts	0x07DD, r1	; 0x8007dd <xStart+0x2>
    30ca:	87 e7       	ldi	r24, 0x77	; 119
    30cc:	95 e0       	ldi	r25, 0x05	; 5
    30ce:	90 93 e2 07 	sts	0x07E2, r25	; 0x8007e2 <xEnd+0x3>
    30d2:	80 93 e1 07 	sts	0x07E1, r24	; 0x8007e1 <xEnd+0x2>
    30d6:	10 92 e0 07 	sts	0x07E0, r1	; 0x8007e0 <xEnd+0x1>
    30da:	10 92 df 07 	sts	0x07DF, r1	; 0x8007df <xEnd>
    30de:	89 81       	ldd	r24, Y+1	; 0x01
    30e0:	9a 81       	ldd	r25, Y+2	; 0x02
    30e2:	9c 83       	std	Y+4, r25	; 0x04
    30e4:	8b 83       	std	Y+3, r24	; 0x03
    30e6:	8b 81       	ldd	r24, Y+3	; 0x03
    30e8:	9c 81       	ldd	r25, Y+4	; 0x04
    30ea:	27 e7       	ldi	r18, 0x77	; 119
    30ec:	35 e0       	ldi	r19, 0x05	; 5
    30ee:	fc 01       	movw	r30, r24
    30f0:	33 83       	std	Z+3, r19	; 0x03
    30f2:	22 83       	std	Z+2, r18	; 0x02
    30f4:	8b 81       	ldd	r24, Y+3	; 0x03
    30f6:	9c 81       	ldd	r25, Y+4	; 0x04
    30f8:	2f ed       	ldi	r18, 0xDF	; 223
    30fa:	37 e0       	ldi	r19, 0x07	; 7
    30fc:	fc 01       	movw	r30, r24
    30fe:	31 83       	std	Z+1, r19	; 0x01
    3100:	20 83       	st	Z, r18
    3102:	00 00       	nop
    3104:	0f 90       	pop	r0
    3106:	0f 90       	pop	r0
    3108:	0f 90       	pop	r0
    310a:	0f 90       	pop	r0
    310c:	df 91       	pop	r29
    310e:	cf 91       	pop	r28
    3110:	08 95       	ret

00003112 <xQueueGenericReset>:
    3112:	cf 93       	push	r28
    3114:	df 93       	push	r29
    3116:	00 d0       	rcall	.+0      	; 0x3118 <xQueueGenericReset+0x6>
    3118:	00 d0       	rcall	.+0      	; 0x311a <xQueueGenericReset+0x8>
    311a:	1f 92       	push	r1
    311c:	cd b7       	in	r28, 0x3d	; 61
    311e:	de b7       	in	r29, 0x3e	; 62
    3120:	9c 83       	std	Y+4, r25	; 0x04
    3122:	8b 83       	std	Y+3, r24	; 0x03
    3124:	6d 83       	std	Y+5, r22	; 0x05
    3126:	8b 81       	ldd	r24, Y+3	; 0x03
    3128:	9c 81       	ldd	r25, Y+4	; 0x04
    312a:	9a 83       	std	Y+2, r25	; 0x02
    312c:	89 83       	std	Y+1, r24	; 0x01
    312e:	0f b6       	in	r0, 0x3f	; 63
    3130:	f8 94       	cli
    3132:	0f 92       	push	r0
    3134:	89 81       	ldd	r24, Y+1	; 0x01
    3136:	9a 81       	ldd	r25, Y+2	; 0x02
    3138:	fc 01       	movw	r30, r24
    313a:	80 81       	ld	r24, Z
    313c:	91 81       	ldd	r25, Z+1	; 0x01
    313e:	29 81       	ldd	r18, Y+1	; 0x01
    3140:	3a 81       	ldd	r19, Y+2	; 0x02
    3142:	f9 01       	movw	r30, r18
    3144:	23 8d       	ldd	r18, Z+27	; 0x1b
    3146:	42 2f       	mov	r20, r18
    3148:	50 e0       	ldi	r21, 0x00	; 0
    314a:	29 81       	ldd	r18, Y+1	; 0x01
    314c:	3a 81       	ldd	r19, Y+2	; 0x02
    314e:	f9 01       	movw	r30, r18
    3150:	24 8d       	ldd	r18, Z+28	; 0x1c
    3152:	22 2f       	mov	r18, r18
    3154:	30 e0       	ldi	r19, 0x00	; 0
    3156:	42 9f       	mul	r20, r18
    3158:	b0 01       	movw	r22, r0
    315a:	43 9f       	mul	r20, r19
    315c:	70 0d       	add	r23, r0
    315e:	52 9f       	mul	r21, r18
    3160:	70 0d       	add	r23, r0
    3162:	11 24       	eor	r1, r1
    3164:	9b 01       	movw	r18, r22
    3166:	28 0f       	add	r18, r24
    3168:	39 1f       	adc	r19, r25
    316a:	89 81       	ldd	r24, Y+1	; 0x01
    316c:	9a 81       	ldd	r25, Y+2	; 0x02
    316e:	fc 01       	movw	r30, r24
    3170:	33 83       	std	Z+3, r19	; 0x03
    3172:	22 83       	std	Z+2, r18	; 0x02
    3174:	89 81       	ldd	r24, Y+1	; 0x01
    3176:	9a 81       	ldd	r25, Y+2	; 0x02
    3178:	fc 01       	movw	r30, r24
    317a:	12 8e       	std	Z+26, r1	; 0x1a
    317c:	89 81       	ldd	r24, Y+1	; 0x01
    317e:	9a 81       	ldd	r25, Y+2	; 0x02
    3180:	fc 01       	movw	r30, r24
    3182:	20 81       	ld	r18, Z
    3184:	31 81       	ldd	r19, Z+1	; 0x01
    3186:	89 81       	ldd	r24, Y+1	; 0x01
    3188:	9a 81       	ldd	r25, Y+2	; 0x02
    318a:	fc 01       	movw	r30, r24
    318c:	35 83       	std	Z+5, r19	; 0x05
    318e:	24 83       	std	Z+4, r18	; 0x04
    3190:	89 81       	ldd	r24, Y+1	; 0x01
    3192:	9a 81       	ldd	r25, Y+2	; 0x02
    3194:	fc 01       	movw	r30, r24
    3196:	80 81       	ld	r24, Z
    3198:	91 81       	ldd	r25, Z+1	; 0x01
    319a:	29 81       	ldd	r18, Y+1	; 0x01
    319c:	3a 81       	ldd	r19, Y+2	; 0x02
    319e:	f9 01       	movw	r30, r18
    31a0:	23 8d       	ldd	r18, Z+27	; 0x1b
    31a2:	22 2f       	mov	r18, r18
    31a4:	30 e0       	ldi	r19, 0x00	; 0
    31a6:	a9 01       	movw	r20, r18
    31a8:	41 50       	subi	r20, 0x01	; 1
    31aa:	51 09       	sbc	r21, r1
    31ac:	29 81       	ldd	r18, Y+1	; 0x01
    31ae:	3a 81       	ldd	r19, Y+2	; 0x02
    31b0:	f9 01       	movw	r30, r18
    31b2:	24 8d       	ldd	r18, Z+28	; 0x1c
    31b4:	22 2f       	mov	r18, r18
    31b6:	30 e0       	ldi	r19, 0x00	; 0
    31b8:	42 9f       	mul	r20, r18
    31ba:	b0 01       	movw	r22, r0
    31bc:	43 9f       	mul	r20, r19
    31be:	70 0d       	add	r23, r0
    31c0:	52 9f       	mul	r21, r18
    31c2:	70 0d       	add	r23, r0
    31c4:	11 24       	eor	r1, r1
    31c6:	9b 01       	movw	r18, r22
    31c8:	28 0f       	add	r18, r24
    31ca:	39 1f       	adc	r19, r25
    31cc:	89 81       	ldd	r24, Y+1	; 0x01
    31ce:	9a 81       	ldd	r25, Y+2	; 0x02
    31d0:	fc 01       	movw	r30, r24
    31d2:	37 83       	std	Z+7, r19	; 0x07
    31d4:	26 83       	std	Z+6, r18	; 0x06
    31d6:	89 81       	ldd	r24, Y+1	; 0x01
    31d8:	9a 81       	ldd	r25, Y+2	; 0x02
    31da:	2f ef       	ldi	r18, 0xFF	; 255
    31dc:	fc 01       	movw	r30, r24
    31de:	25 8f       	std	Z+29, r18	; 0x1d
    31e0:	89 81       	ldd	r24, Y+1	; 0x01
    31e2:	9a 81       	ldd	r25, Y+2	; 0x02
    31e4:	2f ef       	ldi	r18, 0xFF	; 255
    31e6:	fc 01       	movw	r30, r24
    31e8:	26 8f       	std	Z+30, r18	; 0x1e
    31ea:	8d 81       	ldd	r24, Y+5	; 0x05
    31ec:	88 23       	and	r24, r24
    31ee:	81 f4       	brne	.+32     	; 0x3210 <xQueueGenericReset+0xfe>
    31f0:	89 81       	ldd	r24, Y+1	; 0x01
    31f2:	9a 81       	ldd	r25, Y+2	; 0x02
    31f4:	fc 01       	movw	r30, r24
    31f6:	80 85       	ldd	r24, Z+8	; 0x08
    31f8:	88 23       	and	r24, r24
    31fa:	a1 f0       	breq	.+40     	; 0x3224 <xQueueGenericReset+0x112>
    31fc:	89 81       	ldd	r24, Y+1	; 0x01
    31fe:	9a 81       	ldd	r25, Y+2	; 0x02
    3200:	08 96       	adiw	r24, 0x08	; 8
    3202:	0e 94 31 23 	call	0x4662	; 0x4662 <xTaskRemoveFromEventList>
    3206:	88 23       	and	r24, r24
    3208:	69 f0       	breq	.+26     	; 0x3224 <xQueueGenericReset+0x112>
    320a:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    320e:	0a c0       	rjmp	.+20     	; 0x3224 <xQueueGenericReset+0x112>
    3210:	89 81       	ldd	r24, Y+1	; 0x01
    3212:	9a 81       	ldd	r25, Y+2	; 0x02
    3214:	08 96       	adiw	r24, 0x08	; 8
    3216:	0e 94 1c 10 	call	0x2038	; 0x2038 <vListInitialise>
    321a:	89 81       	ldd	r24, Y+1	; 0x01
    321c:	9a 81       	ldd	r25, Y+2	; 0x02
    321e:	41 96       	adiw	r24, 0x11	; 17
    3220:	0e 94 1c 10 	call	0x2038	; 0x2038 <vListInitialise>
    3224:	0f 90       	pop	r0
    3226:	0f be       	out	0x3f, r0	; 63
    3228:	81 e0       	ldi	r24, 0x01	; 1
    322a:	0f 90       	pop	r0
    322c:	0f 90       	pop	r0
    322e:	0f 90       	pop	r0
    3230:	0f 90       	pop	r0
    3232:	0f 90       	pop	r0
    3234:	df 91       	pop	r29
    3236:	cf 91       	pop	r28
    3238:	08 95       	ret

0000323a <xQueueGenericCreate>:
    323a:	0f 93       	push	r16
    323c:	1f 93       	push	r17
    323e:	cf 93       	push	r28
    3240:	df 93       	push	r29
    3242:	cd b7       	in	r28, 0x3d	; 61
    3244:	de b7       	in	r29, 0x3e	; 62
    3246:	29 97       	sbiw	r28, 0x09	; 9
    3248:	0f b6       	in	r0, 0x3f	; 63
    324a:	f8 94       	cli
    324c:	de bf       	out	0x3e, r29	; 62
    324e:	0f be       	out	0x3f, r0	; 63
    3250:	cd bf       	out	0x3d, r28	; 61
    3252:	8f 83       	std	Y+7, r24	; 0x07
    3254:	68 87       	std	Y+8, r22	; 0x08
    3256:	49 87       	std	Y+9, r20	; 0x09
    3258:	88 85       	ldd	r24, Y+8	; 0x08
    325a:	88 23       	and	r24, r24
    325c:	19 f4       	brne	.+6      	; 0x3264 <xQueueGenericCreate+0x2a>
    325e:	1a 82       	std	Y+2, r1	; 0x02
    3260:	19 82       	std	Y+1, r1	; 0x01
    3262:	0f c0       	rjmp	.+30     	; 0x3282 <xQueueGenericCreate+0x48>
    3264:	8f 81       	ldd	r24, Y+7	; 0x07
    3266:	48 2f       	mov	r20, r24
    3268:	50 e0       	ldi	r21, 0x00	; 0
    326a:	88 85       	ldd	r24, Y+8	; 0x08
    326c:	28 2f       	mov	r18, r24
    326e:	30 e0       	ldi	r19, 0x00	; 0
    3270:	42 9f       	mul	r20, r18
    3272:	c0 01       	movw	r24, r0
    3274:	43 9f       	mul	r20, r19
    3276:	90 0d       	add	r25, r0
    3278:	52 9f       	mul	r21, r18
    327a:	90 0d       	add	r25, r0
    327c:	11 24       	eor	r1, r1
    327e:	9a 83       	std	Y+2, r25	; 0x02
    3280:	89 83       	std	Y+1, r24	; 0x01
    3282:	89 81       	ldd	r24, Y+1	; 0x01
    3284:	9a 81       	ldd	r25, Y+2	; 0x02
    3286:	81 96       	adiw	r24, 0x21	; 33
    3288:	0e 94 ea 16 	call	0x2dd4	; 0x2dd4 <pvPortMalloc>
    328c:	9c 83       	std	Y+4, r25	; 0x04
    328e:	8b 83       	std	Y+3, r24	; 0x03
    3290:	8b 81       	ldd	r24, Y+3	; 0x03
    3292:	9c 81       	ldd	r25, Y+4	; 0x04
    3294:	89 2b       	or	r24, r25
    3296:	81 f0       	breq	.+32     	; 0x32b8 <xQueueGenericCreate+0x7e>
    3298:	8b 81       	ldd	r24, Y+3	; 0x03
    329a:	9c 81       	ldd	r25, Y+4	; 0x04
    329c:	81 96       	adiw	r24, 0x21	; 33
    329e:	9e 83       	std	Y+6, r25	; 0x06
    32a0:	8d 83       	std	Y+5, r24	; 0x05
    32a2:	2b 81       	ldd	r18, Y+3	; 0x03
    32a4:	3c 81       	ldd	r19, Y+4	; 0x04
    32a6:	8d 81       	ldd	r24, Y+5	; 0x05
    32a8:	9e 81       	ldd	r25, Y+6	; 0x06
    32aa:	89 01       	movw	r16, r18
    32ac:	29 85       	ldd	r18, Y+9	; 0x09
    32ae:	ac 01       	movw	r20, r24
    32b0:	68 85       	ldd	r22, Y+8	; 0x08
    32b2:	8f 81       	ldd	r24, Y+7	; 0x07
    32b4:	0e 94 69 19 	call	0x32d2	; 0x32d2 <prvInitialiseNewQueue>
    32b8:	8b 81       	ldd	r24, Y+3	; 0x03
    32ba:	9c 81       	ldd	r25, Y+4	; 0x04
    32bc:	29 96       	adiw	r28, 0x09	; 9
    32be:	0f b6       	in	r0, 0x3f	; 63
    32c0:	f8 94       	cli
    32c2:	de bf       	out	0x3e, r29	; 62
    32c4:	0f be       	out	0x3f, r0	; 63
    32c6:	cd bf       	out	0x3d, r28	; 61
    32c8:	df 91       	pop	r29
    32ca:	cf 91       	pop	r28
    32cc:	1f 91       	pop	r17
    32ce:	0f 91       	pop	r16
    32d0:	08 95       	ret

000032d2 <prvInitialiseNewQueue>:
    32d2:	0f 93       	push	r16
    32d4:	1f 93       	push	r17
    32d6:	cf 93       	push	r28
    32d8:	df 93       	push	r29
    32da:	cd b7       	in	r28, 0x3d	; 61
    32dc:	de b7       	in	r29, 0x3e	; 62
    32de:	27 97       	sbiw	r28, 0x07	; 7
    32e0:	0f b6       	in	r0, 0x3f	; 63
    32e2:	f8 94       	cli
    32e4:	de bf       	out	0x3e, r29	; 62
    32e6:	0f be       	out	0x3f, r0	; 63
    32e8:	cd bf       	out	0x3d, r28	; 61
    32ea:	89 83       	std	Y+1, r24	; 0x01
    32ec:	6a 83       	std	Y+2, r22	; 0x02
    32ee:	5c 83       	std	Y+4, r21	; 0x04
    32f0:	4b 83       	std	Y+3, r20	; 0x03
    32f2:	2d 83       	std	Y+5, r18	; 0x05
    32f4:	1f 83       	std	Y+7, r17	; 0x07
    32f6:	0e 83       	std	Y+6, r16	; 0x06
    32f8:	8a 81       	ldd	r24, Y+2	; 0x02
    32fa:	88 23       	and	r24, r24
    32fc:	41 f4       	brne	.+16     	; 0x330e <prvInitialiseNewQueue+0x3c>
    32fe:	8e 81       	ldd	r24, Y+6	; 0x06
    3300:	9f 81       	ldd	r25, Y+7	; 0x07
    3302:	2e 81       	ldd	r18, Y+6	; 0x06
    3304:	3f 81       	ldd	r19, Y+7	; 0x07
    3306:	fc 01       	movw	r30, r24
    3308:	31 83       	std	Z+1, r19	; 0x01
    330a:	20 83       	st	Z, r18
    330c:	07 c0       	rjmp	.+14     	; 0x331c <prvInitialiseNewQueue+0x4a>
    330e:	8e 81       	ldd	r24, Y+6	; 0x06
    3310:	9f 81       	ldd	r25, Y+7	; 0x07
    3312:	2b 81       	ldd	r18, Y+3	; 0x03
    3314:	3c 81       	ldd	r19, Y+4	; 0x04
    3316:	fc 01       	movw	r30, r24
    3318:	31 83       	std	Z+1, r19	; 0x01
    331a:	20 83       	st	Z, r18
    331c:	8e 81       	ldd	r24, Y+6	; 0x06
    331e:	9f 81       	ldd	r25, Y+7	; 0x07
    3320:	29 81       	ldd	r18, Y+1	; 0x01
    3322:	fc 01       	movw	r30, r24
    3324:	23 8f       	std	Z+27, r18	; 0x1b
    3326:	8e 81       	ldd	r24, Y+6	; 0x06
    3328:	9f 81       	ldd	r25, Y+7	; 0x07
    332a:	2a 81       	ldd	r18, Y+2	; 0x02
    332c:	fc 01       	movw	r30, r24
    332e:	24 8f       	std	Z+28, r18	; 0x1c
    3330:	8e 81       	ldd	r24, Y+6	; 0x06
    3332:	9f 81       	ldd	r25, Y+7	; 0x07
    3334:	61 e0       	ldi	r22, 0x01	; 1
    3336:	0e 94 89 18 	call	0x3112	; 0x3112 <xQueueGenericReset>
    333a:	8e 81       	ldd	r24, Y+6	; 0x06
    333c:	9f 81       	ldd	r25, Y+7	; 0x07
    333e:	2d 81       	ldd	r18, Y+5	; 0x05
    3340:	fc 01       	movw	r30, r24
    3342:	20 a3       	std	Z+32, r18	; 0x20
    3344:	00 00       	nop
    3346:	27 96       	adiw	r28, 0x07	; 7
    3348:	0f b6       	in	r0, 0x3f	; 63
    334a:	f8 94       	cli
    334c:	de bf       	out	0x3e, r29	; 62
    334e:	0f be       	out	0x3f, r0	; 63
    3350:	cd bf       	out	0x3d, r28	; 61
    3352:	df 91       	pop	r29
    3354:	cf 91       	pop	r28
    3356:	1f 91       	pop	r17
    3358:	0f 91       	pop	r16
    335a:	08 95       	ret

0000335c <prvInitialiseMutex>:
    335c:	cf 93       	push	r28
    335e:	df 93       	push	r29
    3360:	00 d0       	rcall	.+0      	; 0x3362 <prvInitialiseMutex+0x6>
    3362:	cd b7       	in	r28, 0x3d	; 61
    3364:	de b7       	in	r29, 0x3e	; 62
    3366:	9a 83       	std	Y+2, r25	; 0x02
    3368:	89 83       	std	Y+1, r24	; 0x01
    336a:	89 81       	ldd	r24, Y+1	; 0x01
    336c:	9a 81       	ldd	r25, Y+2	; 0x02
    336e:	89 2b       	or	r24, r25
    3370:	b9 f0       	breq	.+46     	; 0x33a0 <prvInitialiseMutex+0x44>
    3372:	89 81       	ldd	r24, Y+1	; 0x01
    3374:	9a 81       	ldd	r25, Y+2	; 0x02
    3376:	fc 01       	movw	r30, r24
    3378:	13 82       	std	Z+3, r1	; 0x03
    337a:	12 82       	std	Z+2, r1	; 0x02
    337c:	89 81       	ldd	r24, Y+1	; 0x01
    337e:	9a 81       	ldd	r25, Y+2	; 0x02
    3380:	fc 01       	movw	r30, r24
    3382:	11 82       	std	Z+1, r1	; 0x01
    3384:	10 82       	st	Z, r1
    3386:	89 81       	ldd	r24, Y+1	; 0x01
    3388:	9a 81       	ldd	r25, Y+2	; 0x02
    338a:	fc 01       	movw	r30, r24
    338c:	16 82       	std	Z+6, r1	; 0x06
    338e:	89 81       	ldd	r24, Y+1	; 0x01
    3390:	9a 81       	ldd	r25, Y+2	; 0x02
    3392:	20 e0       	ldi	r18, 0x00	; 0
    3394:	40 e0       	ldi	r20, 0x00	; 0
    3396:	50 e0       	ldi	r21, 0x00	; 0
    3398:	60 e0       	ldi	r22, 0x00	; 0
    339a:	70 e0       	ldi	r23, 0x00	; 0
    339c:	0e 94 f6 19 	call	0x33ec	; 0x33ec <xQueueGenericSend>
    33a0:	00 00       	nop
    33a2:	0f 90       	pop	r0
    33a4:	0f 90       	pop	r0
    33a6:	df 91       	pop	r29
    33a8:	cf 91       	pop	r28
    33aa:	08 95       	ret

000033ac <xQueueCreateMutex>:
    33ac:	cf 93       	push	r28
    33ae:	df 93       	push	r29
    33b0:	00 d0       	rcall	.+0      	; 0x33b2 <xQueueCreateMutex+0x6>
    33b2:	00 d0       	rcall	.+0      	; 0x33b4 <xQueueCreateMutex+0x8>
    33b4:	1f 92       	push	r1
    33b6:	cd b7       	in	r28, 0x3d	; 61
    33b8:	de b7       	in	r29, 0x3e	; 62
    33ba:	8d 83       	std	Y+5, r24	; 0x05
    33bc:	81 e0       	ldi	r24, 0x01	; 1
    33be:	89 83       	std	Y+1, r24	; 0x01
    33c0:	1a 82       	std	Y+2, r1	; 0x02
    33c2:	4d 81       	ldd	r20, Y+5	; 0x05
    33c4:	6a 81       	ldd	r22, Y+2	; 0x02
    33c6:	89 81       	ldd	r24, Y+1	; 0x01
    33c8:	0e 94 1d 19 	call	0x323a	; 0x323a <xQueueGenericCreate>
    33cc:	9c 83       	std	Y+4, r25	; 0x04
    33ce:	8b 83       	std	Y+3, r24	; 0x03
    33d0:	8b 81       	ldd	r24, Y+3	; 0x03
    33d2:	9c 81       	ldd	r25, Y+4	; 0x04
    33d4:	0e 94 ae 19 	call	0x335c	; 0x335c <prvInitialiseMutex>
    33d8:	8b 81       	ldd	r24, Y+3	; 0x03
    33da:	9c 81       	ldd	r25, Y+4	; 0x04
    33dc:	0f 90       	pop	r0
    33de:	0f 90       	pop	r0
    33e0:	0f 90       	pop	r0
    33e2:	0f 90       	pop	r0
    33e4:	0f 90       	pop	r0
    33e6:	df 91       	pop	r29
    33e8:	cf 91       	pop	r28
    33ea:	08 95       	ret

000033ec <xQueueGenericSend>:
    33ec:	cf 93       	push	r28
    33ee:	df 93       	push	r29
    33f0:	cd b7       	in	r28, 0x3d	; 61
    33f2:	de b7       	in	r29, 0x3e	; 62
    33f4:	2e 97       	sbiw	r28, 0x0e	; 14
    33f6:	0f b6       	in	r0, 0x3f	; 63
    33f8:	f8 94       	cli
    33fa:	de bf       	out	0x3e, r29	; 62
    33fc:	0f be       	out	0x3f, r0	; 63
    33fe:	cd bf       	out	0x3d, r28	; 61
    3400:	99 87       	std	Y+9, r25	; 0x09
    3402:	88 87       	std	Y+8, r24	; 0x08
    3404:	7b 87       	std	Y+11, r23	; 0x0b
    3406:	6a 87       	std	Y+10, r22	; 0x0a
    3408:	5d 87       	std	Y+13, r21	; 0x0d
    340a:	4c 87       	std	Y+12, r20	; 0x0c
    340c:	2e 87       	std	Y+14, r18	; 0x0e
    340e:	19 82       	std	Y+1, r1	; 0x01
    3410:	88 85       	ldd	r24, Y+8	; 0x08
    3412:	99 85       	ldd	r25, Y+9	; 0x09
    3414:	9b 83       	std	Y+3, r25	; 0x03
    3416:	8a 83       	std	Y+2, r24	; 0x02
    3418:	0f b6       	in	r0, 0x3f	; 63
    341a:	f8 94       	cli
    341c:	0f 92       	push	r0
    341e:	8a 81       	ldd	r24, Y+2	; 0x02
    3420:	9b 81       	ldd	r25, Y+3	; 0x03
    3422:	fc 01       	movw	r30, r24
    3424:	22 8d       	ldd	r18, Z+26	; 0x1a
    3426:	8a 81       	ldd	r24, Y+2	; 0x02
    3428:	9b 81       	ldd	r25, Y+3	; 0x03
    342a:	fc 01       	movw	r30, r24
    342c:	83 8d       	ldd	r24, Z+27	; 0x1b
    342e:	28 17       	cp	r18, r24
    3430:	18 f0       	brcs	.+6      	; 0x3438 <xQueueGenericSend+0x4c>
    3432:	8e 85       	ldd	r24, Y+14	; 0x0e
    3434:	82 30       	cpi	r24, 0x02	; 2
    3436:	11 f5       	brne	.+68     	; 0x347c <xQueueGenericSend+0x90>
    3438:	2a 85       	ldd	r18, Y+10	; 0x0a
    343a:	3b 85       	ldd	r19, Y+11	; 0x0b
    343c:	8a 81       	ldd	r24, Y+2	; 0x02
    343e:	9b 81       	ldd	r25, Y+3	; 0x03
    3440:	4e 85       	ldd	r20, Y+14	; 0x0e
    3442:	b9 01       	movw	r22, r18
    3444:	0e 94 23 1c 	call	0x3846	; 0x3846 <prvCopyDataToQueue>
    3448:	8c 83       	std	Y+4, r24	; 0x04
    344a:	8a 81       	ldd	r24, Y+2	; 0x02
    344c:	9b 81       	ldd	r25, Y+3	; 0x03
    344e:	fc 01       	movw	r30, r24
    3450:	81 89       	ldd	r24, Z+17	; 0x11
    3452:	88 23       	and	r24, r24
    3454:	51 f0       	breq	.+20     	; 0x346a <xQueueGenericSend+0x7e>
    3456:	8a 81       	ldd	r24, Y+2	; 0x02
    3458:	9b 81       	ldd	r25, Y+3	; 0x03
    345a:	41 96       	adiw	r24, 0x11	; 17
    345c:	0e 94 31 23 	call	0x4662	; 0x4662 <xTaskRemoveFromEventList>
    3460:	88 23       	and	r24, r24
    3462:	41 f0       	breq	.+16     	; 0x3474 <xQueueGenericSend+0x88>
    3464:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    3468:	05 c0       	rjmp	.+10     	; 0x3474 <xQueueGenericSend+0x88>
    346a:	8c 81       	ldd	r24, Y+4	; 0x04
    346c:	88 23       	and	r24, r24
    346e:	11 f0       	breq	.+4      	; 0x3474 <xQueueGenericSend+0x88>
    3470:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    3474:	0f 90       	pop	r0
    3476:	0f be       	out	0x3f, r0	; 63
    3478:	81 e0       	ldi	r24, 0x01	; 1
    347a:	60 c0       	rjmp	.+192    	; 0x353c <xQueueGenericSend+0x150>
    347c:	8c 85       	ldd	r24, Y+12	; 0x0c
    347e:	9d 85       	ldd	r25, Y+13	; 0x0d
    3480:	89 2b       	or	r24, r25
    3482:	21 f4       	brne	.+8      	; 0x348c <xQueueGenericSend+0xa0>
    3484:	0f 90       	pop	r0
    3486:	0f be       	out	0x3f, r0	; 63
    3488:	80 e0       	ldi	r24, 0x00	; 0
    348a:	58 c0       	rjmp	.+176    	; 0x353c <xQueueGenericSend+0x150>
    348c:	89 81       	ldd	r24, Y+1	; 0x01
    348e:	88 23       	and	r24, r24
    3490:	31 f4       	brne	.+12     	; 0x349e <xQueueGenericSend+0xb2>
    3492:	ce 01       	movw	r24, r28
    3494:	05 96       	adiw	r24, 0x05	; 5
    3496:	0e 94 9e 23 	call	0x473c	; 0x473c <vTaskSetTimeOutState>
    349a:	81 e0       	ldi	r24, 0x01	; 1
    349c:	89 83       	std	Y+1, r24	; 0x01
    349e:	0f 90       	pop	r0
    34a0:	0f be       	out	0x3f, r0	; 63
    34a2:	0e 94 91 20 	call	0x4122	; 0x4122 <vTaskSuspendAll>
    34a6:	0f b6       	in	r0, 0x3f	; 63
    34a8:	f8 94       	cli
    34aa:	0f 92       	push	r0
    34ac:	8a 81       	ldd	r24, Y+2	; 0x02
    34ae:	9b 81       	ldd	r25, Y+3	; 0x03
    34b0:	fc 01       	movw	r30, r24
    34b2:	85 8d       	ldd	r24, Z+29	; 0x1d
    34b4:	8f 3f       	cpi	r24, 0xFF	; 255
    34b6:	21 f4       	brne	.+8      	; 0x34c0 <xQueueGenericSend+0xd4>
    34b8:	8a 81       	ldd	r24, Y+2	; 0x02
    34ba:	9b 81       	ldd	r25, Y+3	; 0x03
    34bc:	fc 01       	movw	r30, r24
    34be:	15 8e       	std	Z+29, r1	; 0x1d
    34c0:	8a 81       	ldd	r24, Y+2	; 0x02
    34c2:	9b 81       	ldd	r25, Y+3	; 0x03
    34c4:	fc 01       	movw	r30, r24
    34c6:	86 8d       	ldd	r24, Z+30	; 0x1e
    34c8:	8f 3f       	cpi	r24, 0xFF	; 255
    34ca:	21 f4       	brne	.+8      	; 0x34d4 <xQueueGenericSend+0xe8>
    34cc:	8a 81       	ldd	r24, Y+2	; 0x02
    34ce:	9b 81       	ldd	r25, Y+3	; 0x03
    34d0:	fc 01       	movw	r30, r24
    34d2:	16 8e       	std	Z+30, r1	; 0x1e
    34d4:	0f 90       	pop	r0
    34d6:	0f be       	out	0x3f, r0	; 63
    34d8:	9e 01       	movw	r18, r28
    34da:	24 5f       	subi	r18, 0xF4	; 244
    34dc:	3f 4f       	sbci	r19, 0xFF	; 255
    34de:	ce 01       	movw	r24, r28
    34e0:	05 96       	adiw	r24, 0x05	; 5
    34e2:	b9 01       	movw	r22, r18
    34e4:	0e 94 ba 23 	call	0x4774	; 0x4774 <xTaskCheckForTimeOut>
    34e8:	88 23       	and	r24, r24
    34ea:	09 f5       	brne	.+66     	; 0x352e <xQueueGenericSend+0x142>
    34ec:	8a 81       	ldd	r24, Y+2	; 0x02
    34ee:	9b 81       	ldd	r25, Y+3	; 0x03
    34f0:	0e 94 c0 1d 	call	0x3b80	; 0x3b80 <prvIsQueueFull>
    34f4:	88 23       	and	r24, r24
    34f6:	a1 f0       	breq	.+40     	; 0x3520 <xQueueGenericSend+0x134>
    34f8:	2c 85       	ldd	r18, Y+12	; 0x0c
    34fa:	3d 85       	ldd	r19, Y+13	; 0x0d
    34fc:	8a 81       	ldd	r24, Y+2	; 0x02
    34fe:	9b 81       	ldd	r25, Y+3	; 0x03
    3500:	08 96       	adiw	r24, 0x08	; 8
    3502:	b9 01       	movw	r22, r18
    3504:	0e 94 0e 23 	call	0x461c	; 0x461c <vTaskPlaceOnEventList>
    3508:	8a 81       	ldd	r24, Y+2	; 0x02
    350a:	9b 81       	ldd	r25, Y+3	; 0x03
    350c:	0e 94 44 1d 	call	0x3a88	; 0x3a88 <prvUnlockQueue>
    3510:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    3514:	88 23       	and	r24, r24
    3516:	09 f0       	breq	.+2      	; 0x351a <xQueueGenericSend+0x12e>
    3518:	7f cf       	rjmp	.-258    	; 0x3418 <xQueueGenericSend+0x2c>
    351a:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    351e:	7c cf       	rjmp	.-264    	; 0x3418 <xQueueGenericSend+0x2c>
    3520:	8a 81       	ldd	r24, Y+2	; 0x02
    3522:	9b 81       	ldd	r25, Y+3	; 0x03
    3524:	0e 94 44 1d 	call	0x3a88	; 0x3a88 <prvUnlockQueue>
    3528:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    352c:	75 cf       	rjmp	.-278    	; 0x3418 <xQueueGenericSend+0x2c>
    352e:	8a 81       	ldd	r24, Y+2	; 0x02
    3530:	9b 81       	ldd	r25, Y+3	; 0x03
    3532:	0e 94 44 1d 	call	0x3a88	; 0x3a88 <prvUnlockQueue>
    3536:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    353a:	80 e0       	ldi	r24, 0x00	; 0
    353c:	2e 96       	adiw	r28, 0x0e	; 14
    353e:	0f b6       	in	r0, 0x3f	; 63
    3540:	f8 94       	cli
    3542:	de bf       	out	0x3e, r29	; 62
    3544:	0f be       	out	0x3f, r0	; 63
    3546:	cd bf       	out	0x3d, r28	; 61
    3548:	df 91       	pop	r29
    354a:	cf 91       	pop	r28
    354c:	08 95       	ret

0000354e <xQueueGenericSendFromISR>:
    354e:	cf 93       	push	r28
    3550:	df 93       	push	r29
    3552:	cd b7       	in	r28, 0x3d	; 61
    3554:	de b7       	in	r29, 0x3e	; 62
    3556:	2c 97       	sbiw	r28, 0x0c	; 12
    3558:	0f b6       	in	r0, 0x3f	; 63
    355a:	f8 94       	cli
    355c:	de bf       	out	0x3e, r29	; 62
    355e:	0f be       	out	0x3f, r0	; 63
    3560:	cd bf       	out	0x3d, r28	; 61
    3562:	9f 83       	std	Y+7, r25	; 0x07
    3564:	8e 83       	std	Y+6, r24	; 0x06
    3566:	79 87       	std	Y+9, r23	; 0x09
    3568:	68 87       	std	Y+8, r22	; 0x08
    356a:	5b 87       	std	Y+11, r21	; 0x0b
    356c:	4a 87       	std	Y+10, r20	; 0x0a
    356e:	2c 87       	std	Y+12, r18	; 0x0c
    3570:	8e 81       	ldd	r24, Y+6	; 0x06
    3572:	9f 81       	ldd	r25, Y+7	; 0x07
    3574:	9b 83       	std	Y+3, r25	; 0x03
    3576:	8a 83       	std	Y+2, r24	; 0x02
    3578:	1c 82       	std	Y+4, r1	; 0x04
    357a:	8a 81       	ldd	r24, Y+2	; 0x02
    357c:	9b 81       	ldd	r25, Y+3	; 0x03
    357e:	fc 01       	movw	r30, r24
    3580:	22 8d       	ldd	r18, Z+26	; 0x1a
    3582:	8a 81       	ldd	r24, Y+2	; 0x02
    3584:	9b 81       	ldd	r25, Y+3	; 0x03
    3586:	fc 01       	movw	r30, r24
    3588:	83 8d       	ldd	r24, Z+27	; 0x1b
    358a:	28 17       	cp	r18, r24
    358c:	18 f0       	brcs	.+6      	; 0x3594 <xQueueGenericSendFromISR+0x46>
    358e:	8c 85       	ldd	r24, Y+12	; 0x0c
    3590:	82 30       	cpi	r24, 0x02	; 2
    3592:	89 f5       	brne	.+98     	; 0x35f6 <xQueueGenericSendFromISR+0xa8>
    3594:	8a 81       	ldd	r24, Y+2	; 0x02
    3596:	9b 81       	ldd	r25, Y+3	; 0x03
    3598:	fc 01       	movw	r30, r24
    359a:	86 8d       	ldd	r24, Z+30	; 0x1e
    359c:	8d 83       	std	Y+5, r24	; 0x05
    359e:	28 85       	ldd	r18, Y+8	; 0x08
    35a0:	39 85       	ldd	r19, Y+9	; 0x09
    35a2:	8a 81       	ldd	r24, Y+2	; 0x02
    35a4:	9b 81       	ldd	r25, Y+3	; 0x03
    35a6:	4c 85       	ldd	r20, Y+12	; 0x0c
    35a8:	b9 01       	movw	r22, r18
    35aa:	0e 94 23 1c 	call	0x3846	; 0x3846 <prvCopyDataToQueue>
    35ae:	8d 81       	ldd	r24, Y+5	; 0x05
    35b0:	8f 3f       	cpi	r24, 0xFF	; 255
    35b2:	b9 f4       	brne	.+46     	; 0x35e2 <xQueueGenericSendFromISR+0x94>
    35b4:	8a 81       	ldd	r24, Y+2	; 0x02
    35b6:	9b 81       	ldd	r25, Y+3	; 0x03
    35b8:	fc 01       	movw	r30, r24
    35ba:	81 89       	ldd	r24, Z+17	; 0x11
    35bc:	88 23       	and	r24, r24
    35be:	c1 f0       	breq	.+48     	; 0x35f0 <xQueueGenericSendFromISR+0xa2>
    35c0:	8a 81       	ldd	r24, Y+2	; 0x02
    35c2:	9b 81       	ldd	r25, Y+3	; 0x03
    35c4:	41 96       	adiw	r24, 0x11	; 17
    35c6:	0e 94 31 23 	call	0x4662	; 0x4662 <xTaskRemoveFromEventList>
    35ca:	88 23       	and	r24, r24
    35cc:	89 f0       	breq	.+34     	; 0x35f0 <xQueueGenericSendFromISR+0xa2>
    35ce:	8a 85       	ldd	r24, Y+10	; 0x0a
    35d0:	9b 85       	ldd	r25, Y+11	; 0x0b
    35d2:	89 2b       	or	r24, r25
    35d4:	69 f0       	breq	.+26     	; 0x35f0 <xQueueGenericSendFromISR+0xa2>
    35d6:	8a 85       	ldd	r24, Y+10	; 0x0a
    35d8:	9b 85       	ldd	r25, Y+11	; 0x0b
    35da:	21 e0       	ldi	r18, 0x01	; 1
    35dc:	fc 01       	movw	r30, r24
    35de:	20 83       	st	Z, r18
    35e0:	07 c0       	rjmp	.+14     	; 0x35f0 <xQueueGenericSendFromISR+0xa2>
    35e2:	8d 81       	ldd	r24, Y+5	; 0x05
    35e4:	8f 5f       	subi	r24, 0xFF	; 255
    35e6:	28 2f       	mov	r18, r24
    35e8:	8a 81       	ldd	r24, Y+2	; 0x02
    35ea:	9b 81       	ldd	r25, Y+3	; 0x03
    35ec:	fc 01       	movw	r30, r24
    35ee:	26 8f       	std	Z+30, r18	; 0x1e
    35f0:	81 e0       	ldi	r24, 0x01	; 1
    35f2:	89 83       	std	Y+1, r24	; 0x01
    35f4:	01 c0       	rjmp	.+2      	; 0x35f8 <xQueueGenericSendFromISR+0xaa>
    35f6:	19 82       	std	Y+1, r1	; 0x01
    35f8:	89 81       	ldd	r24, Y+1	; 0x01
    35fa:	2c 96       	adiw	r28, 0x0c	; 12
    35fc:	0f b6       	in	r0, 0x3f	; 63
    35fe:	f8 94       	cli
    3600:	de bf       	out	0x3e, r29	; 62
    3602:	0f be       	out	0x3f, r0	; 63
    3604:	cd bf       	out	0x3d, r28	; 61
    3606:	df 91       	pop	r29
    3608:	cf 91       	pop	r28
    360a:	08 95       	ret

0000360c <xQueueGenericReceive>:
    360c:	cf 93       	push	r28
    360e:	df 93       	push	r29
    3610:	cd b7       	in	r28, 0x3d	; 61
    3612:	de b7       	in	r29, 0x3e	; 62
    3614:	60 97       	sbiw	r28, 0x10	; 16
    3616:	0f b6       	in	r0, 0x3f	; 63
    3618:	f8 94       	cli
    361a:	de bf       	out	0x3e, r29	; 62
    361c:	0f be       	out	0x3f, r0	; 63
    361e:	cd bf       	out	0x3d, r28	; 61
    3620:	9b 87       	std	Y+11, r25	; 0x0b
    3622:	8a 87       	std	Y+10, r24	; 0x0a
    3624:	7d 87       	std	Y+13, r23	; 0x0d
    3626:	6c 87       	std	Y+12, r22	; 0x0c
    3628:	5f 87       	std	Y+15, r21	; 0x0f
    362a:	4e 87       	std	Y+14, r20	; 0x0e
    362c:	28 8b       	std	Y+16, r18	; 0x10
    362e:	19 82       	std	Y+1, r1	; 0x01
    3630:	8a 85       	ldd	r24, Y+10	; 0x0a
    3632:	9b 85       	ldd	r25, Y+11	; 0x0b
    3634:	9b 83       	std	Y+3, r25	; 0x03
    3636:	8a 83       	std	Y+2, r24	; 0x02
    3638:	0f b6       	in	r0, 0x3f	; 63
    363a:	f8 94       	cli
    363c:	0f 92       	push	r0
    363e:	8a 81       	ldd	r24, Y+2	; 0x02
    3640:	9b 81       	ldd	r25, Y+3	; 0x03
    3642:	fc 01       	movw	r30, r24
    3644:	82 8d       	ldd	r24, Z+26	; 0x1a
    3646:	8c 83       	std	Y+4, r24	; 0x04
    3648:	8c 81       	ldd	r24, Y+4	; 0x04
    364a:	88 23       	and	r24, r24
    364c:	09 f4       	brne	.+2      	; 0x3650 <xQueueGenericReceive+0x44>
    364e:	51 c0       	rjmp	.+162    	; 0x36f2 <xQueueGenericReceive+0xe6>
    3650:	8a 81       	ldd	r24, Y+2	; 0x02
    3652:	9b 81       	ldd	r25, Y+3	; 0x03
    3654:	fc 01       	movw	r30, r24
    3656:	86 81       	ldd	r24, Z+6	; 0x06
    3658:	97 81       	ldd	r25, Z+7	; 0x07
    365a:	9e 83       	std	Y+6, r25	; 0x06
    365c:	8d 83       	std	Y+5, r24	; 0x05
    365e:	2c 85       	ldd	r18, Y+12	; 0x0c
    3660:	3d 85       	ldd	r19, Y+13	; 0x0d
    3662:	8a 81       	ldd	r24, Y+2	; 0x02
    3664:	9b 81       	ldd	r25, Y+3	; 0x03
    3666:	b9 01       	movw	r22, r18
    3668:	0e 94 f3 1c 	call	0x39e6	; 0x39e6 <prvCopyDataFromQueue>
    366c:	88 89       	ldd	r24, Y+16	; 0x10
    366e:	88 23       	and	r24, r24
    3670:	31 f5       	brne	.+76     	; 0x36be <xQueueGenericReceive+0xb2>
    3672:	8c 81       	ldd	r24, Y+4	; 0x04
    3674:	2f ef       	ldi	r18, 0xFF	; 255
    3676:	28 0f       	add	r18, r24
    3678:	8a 81       	ldd	r24, Y+2	; 0x02
    367a:	9b 81       	ldd	r25, Y+3	; 0x03
    367c:	fc 01       	movw	r30, r24
    367e:	22 8f       	std	Z+26, r18	; 0x1a
    3680:	8a 81       	ldd	r24, Y+2	; 0x02
    3682:	9b 81       	ldd	r25, Y+3	; 0x03
    3684:	fc 01       	movw	r30, r24
    3686:	80 81       	ld	r24, Z
    3688:	91 81       	ldd	r25, Z+1	; 0x01
    368a:	89 2b       	or	r24, r25
    368c:	41 f4       	brne	.+16     	; 0x369e <xQueueGenericReceive+0x92>
    368e:	0e 94 78 26 	call	0x4cf0	; 0x4cf0 <pvTaskIncrementMutexHeldCount>
    3692:	9c 01       	movw	r18, r24
    3694:	8a 81       	ldd	r24, Y+2	; 0x02
    3696:	9b 81       	ldd	r25, Y+3	; 0x03
    3698:	fc 01       	movw	r30, r24
    369a:	33 83       	std	Z+3, r19	; 0x03
    369c:	22 83       	std	Z+2, r18	; 0x02
    369e:	8a 81       	ldd	r24, Y+2	; 0x02
    36a0:	9b 81       	ldd	r25, Y+3	; 0x03
    36a2:	fc 01       	movw	r30, r24
    36a4:	80 85       	ldd	r24, Z+8	; 0x08
    36a6:	88 23       	and	r24, r24
    36a8:	01 f1       	breq	.+64     	; 0x36ea <xQueueGenericReceive+0xde>
    36aa:	8a 81       	ldd	r24, Y+2	; 0x02
    36ac:	9b 81       	ldd	r25, Y+3	; 0x03
    36ae:	08 96       	adiw	r24, 0x08	; 8
    36b0:	0e 94 31 23 	call	0x4662	; 0x4662 <xTaskRemoveFromEventList>
    36b4:	88 23       	and	r24, r24
    36b6:	c9 f0       	breq	.+50     	; 0x36ea <xQueueGenericReceive+0xde>
    36b8:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    36bc:	16 c0       	rjmp	.+44     	; 0x36ea <xQueueGenericReceive+0xde>
    36be:	8a 81       	ldd	r24, Y+2	; 0x02
    36c0:	9b 81       	ldd	r25, Y+3	; 0x03
    36c2:	2d 81       	ldd	r18, Y+5	; 0x05
    36c4:	3e 81       	ldd	r19, Y+6	; 0x06
    36c6:	fc 01       	movw	r30, r24
    36c8:	37 83       	std	Z+7, r19	; 0x07
    36ca:	26 83       	std	Z+6, r18	; 0x06
    36cc:	8a 81       	ldd	r24, Y+2	; 0x02
    36ce:	9b 81       	ldd	r25, Y+3	; 0x03
    36d0:	fc 01       	movw	r30, r24
    36d2:	81 89       	ldd	r24, Z+17	; 0x11
    36d4:	88 23       	and	r24, r24
    36d6:	49 f0       	breq	.+18     	; 0x36ea <xQueueGenericReceive+0xde>
    36d8:	8a 81       	ldd	r24, Y+2	; 0x02
    36da:	9b 81       	ldd	r25, Y+3	; 0x03
    36dc:	41 96       	adiw	r24, 0x11	; 17
    36de:	0e 94 31 23 	call	0x4662	; 0x4662 <xTaskRemoveFromEventList>
    36e2:	88 23       	and	r24, r24
    36e4:	11 f0       	breq	.+4      	; 0x36ea <xQueueGenericReceive+0xde>
    36e6:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    36ea:	0f 90       	pop	r0
    36ec:	0f be       	out	0x3f, r0	; 63
    36ee:	81 e0       	ldi	r24, 0x01	; 1
    36f0:	7a c0       	rjmp	.+244    	; 0x37e6 <xQueueGenericReceive+0x1da>
    36f2:	8e 85       	ldd	r24, Y+14	; 0x0e
    36f4:	9f 85       	ldd	r25, Y+15	; 0x0f
    36f6:	89 2b       	or	r24, r25
    36f8:	21 f4       	brne	.+8      	; 0x3702 <xQueueGenericReceive+0xf6>
    36fa:	0f 90       	pop	r0
    36fc:	0f be       	out	0x3f, r0	; 63
    36fe:	80 e0       	ldi	r24, 0x00	; 0
    3700:	72 c0       	rjmp	.+228    	; 0x37e6 <xQueueGenericReceive+0x1da>
    3702:	89 81       	ldd	r24, Y+1	; 0x01
    3704:	88 23       	and	r24, r24
    3706:	31 f4       	brne	.+12     	; 0x3714 <xQueueGenericReceive+0x108>
    3708:	ce 01       	movw	r24, r28
    370a:	07 96       	adiw	r24, 0x07	; 7
    370c:	0e 94 9e 23 	call	0x473c	; 0x473c <vTaskSetTimeOutState>
    3710:	81 e0       	ldi	r24, 0x01	; 1
    3712:	89 83       	std	Y+1, r24	; 0x01
    3714:	0f 90       	pop	r0
    3716:	0f be       	out	0x3f, r0	; 63
    3718:	0e 94 91 20 	call	0x4122	; 0x4122 <vTaskSuspendAll>
    371c:	0f b6       	in	r0, 0x3f	; 63
    371e:	f8 94       	cli
    3720:	0f 92       	push	r0
    3722:	8a 81       	ldd	r24, Y+2	; 0x02
    3724:	9b 81       	ldd	r25, Y+3	; 0x03
    3726:	fc 01       	movw	r30, r24
    3728:	85 8d       	ldd	r24, Z+29	; 0x1d
    372a:	8f 3f       	cpi	r24, 0xFF	; 255
    372c:	21 f4       	brne	.+8      	; 0x3736 <xQueueGenericReceive+0x12a>
    372e:	8a 81       	ldd	r24, Y+2	; 0x02
    3730:	9b 81       	ldd	r25, Y+3	; 0x03
    3732:	fc 01       	movw	r30, r24
    3734:	15 8e       	std	Z+29, r1	; 0x1d
    3736:	8a 81       	ldd	r24, Y+2	; 0x02
    3738:	9b 81       	ldd	r25, Y+3	; 0x03
    373a:	fc 01       	movw	r30, r24
    373c:	86 8d       	ldd	r24, Z+30	; 0x1e
    373e:	8f 3f       	cpi	r24, 0xFF	; 255
    3740:	21 f4       	brne	.+8      	; 0x374a <xQueueGenericReceive+0x13e>
    3742:	8a 81       	ldd	r24, Y+2	; 0x02
    3744:	9b 81       	ldd	r25, Y+3	; 0x03
    3746:	fc 01       	movw	r30, r24
    3748:	16 8e       	std	Z+30, r1	; 0x1e
    374a:	0f 90       	pop	r0
    374c:	0f be       	out	0x3f, r0	; 63
    374e:	9e 01       	movw	r18, r28
    3750:	22 5f       	subi	r18, 0xF2	; 242
    3752:	3f 4f       	sbci	r19, 0xFF	; 255
    3754:	ce 01       	movw	r24, r28
    3756:	07 96       	adiw	r24, 0x07	; 7
    3758:	b9 01       	movw	r22, r18
    375a:	0e 94 ba 23 	call	0x4774	; 0x4774 <xTaskCheckForTimeOut>
    375e:	88 23       	and	r24, r24
    3760:	a1 f5       	brne	.+104    	; 0x37ca <xQueueGenericReceive+0x1be>
    3762:	8a 81       	ldd	r24, Y+2	; 0x02
    3764:	9b 81       	ldd	r25, Y+3	; 0x03
    3766:	0e 94 a2 1d 	call	0x3b44	; 0x3b44 <prvIsQueueEmpty>
    376a:	88 23       	and	r24, r24
    376c:	39 f1       	breq	.+78     	; 0x37bc <xQueueGenericReceive+0x1b0>
    376e:	8a 81       	ldd	r24, Y+2	; 0x02
    3770:	9b 81       	ldd	r25, Y+3	; 0x03
    3772:	fc 01       	movw	r30, r24
    3774:	80 81       	ld	r24, Z
    3776:	91 81       	ldd	r25, Z+1	; 0x01
    3778:	89 2b       	or	r24, r25
    377a:	61 f4       	brne	.+24     	; 0x3794 <xQueueGenericReceive+0x188>
    377c:	0f b6       	in	r0, 0x3f	; 63
    377e:	f8 94       	cli
    3780:	0f 92       	push	r0
    3782:	8a 81       	ldd	r24, Y+2	; 0x02
    3784:	9b 81       	ldd	r25, Y+3	; 0x03
    3786:	fc 01       	movw	r30, r24
    3788:	82 81       	ldd	r24, Z+2	; 0x02
    378a:	93 81       	ldd	r25, Z+3	; 0x03
    378c:	0e 94 63 25 	call	0x4ac6	; 0x4ac6 <vTaskPriorityInherit>
    3790:	0f 90       	pop	r0
    3792:	0f be       	out	0x3f, r0	; 63
    3794:	2e 85       	ldd	r18, Y+14	; 0x0e
    3796:	3f 85       	ldd	r19, Y+15	; 0x0f
    3798:	8a 81       	ldd	r24, Y+2	; 0x02
    379a:	9b 81       	ldd	r25, Y+3	; 0x03
    379c:	41 96       	adiw	r24, 0x11	; 17
    379e:	b9 01       	movw	r22, r18
    37a0:	0e 94 0e 23 	call	0x461c	; 0x461c <vTaskPlaceOnEventList>
    37a4:	8a 81       	ldd	r24, Y+2	; 0x02
    37a6:	9b 81       	ldd	r25, Y+3	; 0x03
    37a8:	0e 94 44 1d 	call	0x3a88	; 0x3a88 <prvUnlockQueue>
    37ac:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    37b0:	88 23       	and	r24, r24
    37b2:	09 f0       	breq	.+2      	; 0x37b6 <xQueueGenericReceive+0x1aa>
    37b4:	41 cf       	rjmp	.-382    	; 0x3638 <xQueueGenericReceive+0x2c>
    37b6:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    37ba:	3e cf       	rjmp	.-388    	; 0x3638 <xQueueGenericReceive+0x2c>
    37bc:	8a 81       	ldd	r24, Y+2	; 0x02
    37be:	9b 81       	ldd	r25, Y+3	; 0x03
    37c0:	0e 94 44 1d 	call	0x3a88	; 0x3a88 <prvUnlockQueue>
    37c4:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    37c8:	37 cf       	rjmp	.-402    	; 0x3638 <xQueueGenericReceive+0x2c>
    37ca:	8a 81       	ldd	r24, Y+2	; 0x02
    37cc:	9b 81       	ldd	r25, Y+3	; 0x03
    37ce:	0e 94 44 1d 	call	0x3a88	; 0x3a88 <prvUnlockQueue>
    37d2:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    37d6:	8a 81       	ldd	r24, Y+2	; 0x02
    37d8:	9b 81       	ldd	r25, Y+3	; 0x03
    37da:	0e 94 a2 1d 	call	0x3b44	; 0x3b44 <prvIsQueueEmpty>
    37de:	88 23       	and	r24, r24
    37e0:	09 f4       	brne	.+2      	; 0x37e4 <xQueueGenericReceive+0x1d8>
    37e2:	2a cf       	rjmp	.-428    	; 0x3638 <xQueueGenericReceive+0x2c>
    37e4:	80 e0       	ldi	r24, 0x00	; 0
    37e6:	60 96       	adiw	r28, 0x10	; 16
    37e8:	0f b6       	in	r0, 0x3f	; 63
    37ea:	f8 94       	cli
    37ec:	de bf       	out	0x3e, r29	; 62
    37ee:	0f be       	out	0x3f, r0	; 63
    37f0:	cd bf       	out	0x3d, r28	; 61
    37f2:	df 91       	pop	r29
    37f4:	cf 91       	pop	r28
    37f6:	08 95       	ret

000037f8 <uxQueueSpacesAvailable>:
    37f8:	cf 93       	push	r28
    37fa:	df 93       	push	r29
    37fc:	00 d0       	rcall	.+0      	; 0x37fe <uxQueueSpacesAvailable+0x6>
    37fe:	00 d0       	rcall	.+0      	; 0x3800 <uxQueueSpacesAvailable+0x8>
    3800:	1f 92       	push	r1
    3802:	cd b7       	in	r28, 0x3d	; 61
    3804:	de b7       	in	r29, 0x3e	; 62
    3806:	9d 83       	std	Y+5, r25	; 0x05
    3808:	8c 83       	std	Y+4, r24	; 0x04
    380a:	8c 81       	ldd	r24, Y+4	; 0x04
    380c:	9d 81       	ldd	r25, Y+5	; 0x05
    380e:	9a 83       	std	Y+2, r25	; 0x02
    3810:	89 83       	std	Y+1, r24	; 0x01
    3812:	0f b6       	in	r0, 0x3f	; 63
    3814:	f8 94       	cli
    3816:	0f 92       	push	r0
    3818:	89 81       	ldd	r24, Y+1	; 0x01
    381a:	9a 81       	ldd	r25, Y+2	; 0x02
    381c:	fc 01       	movw	r30, r24
    381e:	23 8d       	ldd	r18, Z+27	; 0x1b
    3820:	89 81       	ldd	r24, Y+1	; 0x01
    3822:	9a 81       	ldd	r25, Y+2	; 0x02
    3824:	fc 01       	movw	r30, r24
    3826:	82 8d       	ldd	r24, Z+26	; 0x1a
    3828:	f2 2f       	mov	r31, r18
    382a:	f8 1b       	sub	r31, r24
    382c:	8f 2f       	mov	r24, r31
    382e:	8b 83       	std	Y+3, r24	; 0x03
    3830:	0f 90       	pop	r0
    3832:	0f be       	out	0x3f, r0	; 63
    3834:	8b 81       	ldd	r24, Y+3	; 0x03
    3836:	0f 90       	pop	r0
    3838:	0f 90       	pop	r0
    383a:	0f 90       	pop	r0
    383c:	0f 90       	pop	r0
    383e:	0f 90       	pop	r0
    3840:	df 91       	pop	r29
    3842:	cf 91       	pop	r28
    3844:	08 95       	ret

00003846 <prvCopyDataToQueue>:
    3846:	cf 93       	push	r28
    3848:	df 93       	push	r29
    384a:	cd b7       	in	r28, 0x3d	; 61
    384c:	de b7       	in	r29, 0x3e	; 62
    384e:	27 97       	sbiw	r28, 0x07	; 7
    3850:	0f b6       	in	r0, 0x3f	; 63
    3852:	f8 94       	cli
    3854:	de bf       	out	0x3e, r29	; 62
    3856:	0f be       	out	0x3f, r0	; 63
    3858:	cd bf       	out	0x3d, r28	; 61
    385a:	9c 83       	std	Y+4, r25	; 0x04
    385c:	8b 83       	std	Y+3, r24	; 0x03
    385e:	7e 83       	std	Y+6, r23	; 0x06
    3860:	6d 83       	std	Y+5, r22	; 0x05
    3862:	4f 83       	std	Y+7, r20	; 0x07
    3864:	19 82       	std	Y+1, r1	; 0x01
    3866:	8b 81       	ldd	r24, Y+3	; 0x03
    3868:	9c 81       	ldd	r25, Y+4	; 0x04
    386a:	fc 01       	movw	r30, r24
    386c:	82 8d       	ldd	r24, Z+26	; 0x1a
    386e:	8a 83       	std	Y+2, r24	; 0x02
    3870:	8b 81       	ldd	r24, Y+3	; 0x03
    3872:	9c 81       	ldd	r25, Y+4	; 0x04
    3874:	fc 01       	movw	r30, r24
    3876:	84 8d       	ldd	r24, Z+28	; 0x1c
    3878:	88 23       	and	r24, r24
    387a:	b1 f4       	brne	.+44     	; 0x38a8 <prvCopyDataToQueue+0x62>
    387c:	8b 81       	ldd	r24, Y+3	; 0x03
    387e:	9c 81       	ldd	r25, Y+4	; 0x04
    3880:	fc 01       	movw	r30, r24
    3882:	80 81       	ld	r24, Z
    3884:	91 81       	ldd	r25, Z+1	; 0x01
    3886:	89 2b       	or	r24, r25
    3888:	09 f0       	breq	.+2      	; 0x388c <prvCopyDataToQueue+0x46>
    388a:	9c c0       	rjmp	.+312    	; 0x39c4 <prvCopyDataToQueue+0x17e>
    388c:	8b 81       	ldd	r24, Y+3	; 0x03
    388e:	9c 81       	ldd	r25, Y+4	; 0x04
    3890:	fc 01       	movw	r30, r24
    3892:	82 81       	ldd	r24, Z+2	; 0x02
    3894:	93 81       	ldd	r25, Z+3	; 0x03
    3896:	0e 94 fb 25 	call	0x4bf6	; 0x4bf6 <xTaskPriorityDisinherit>
    389a:	89 83       	std	Y+1, r24	; 0x01
    389c:	8b 81       	ldd	r24, Y+3	; 0x03
    389e:	9c 81       	ldd	r25, Y+4	; 0x04
    38a0:	fc 01       	movw	r30, r24
    38a2:	13 82       	std	Z+3, r1	; 0x03
    38a4:	12 82       	std	Z+2, r1	; 0x02
    38a6:	8e c0       	rjmp	.+284    	; 0x39c4 <prvCopyDataToQueue+0x17e>
    38a8:	8f 81       	ldd	r24, Y+7	; 0x07
    38aa:	88 23       	and	r24, r24
    38ac:	d9 f5       	brne	.+118    	; 0x3924 <prvCopyDataToQueue+0xde>
    38ae:	8b 81       	ldd	r24, Y+3	; 0x03
    38b0:	9c 81       	ldd	r25, Y+4	; 0x04
    38b2:	fc 01       	movw	r30, r24
    38b4:	84 8d       	ldd	r24, Z+28	; 0x1c
    38b6:	48 2f       	mov	r20, r24
    38b8:	50 e0       	ldi	r21, 0x00	; 0
    38ba:	8b 81       	ldd	r24, Y+3	; 0x03
    38bc:	9c 81       	ldd	r25, Y+4	; 0x04
    38be:	fc 01       	movw	r30, r24
    38c0:	84 81       	ldd	r24, Z+4	; 0x04
    38c2:	95 81       	ldd	r25, Z+5	; 0x05
    38c4:	2d 81       	ldd	r18, Y+5	; 0x05
    38c6:	3e 81       	ldd	r19, Y+6	; 0x06
    38c8:	b9 01       	movw	r22, r18
    38ca:	0e 94 44 27 	call	0x4e88	; 0x4e88 <memcpy>
    38ce:	8b 81       	ldd	r24, Y+3	; 0x03
    38d0:	9c 81       	ldd	r25, Y+4	; 0x04
    38d2:	fc 01       	movw	r30, r24
    38d4:	24 81       	ldd	r18, Z+4	; 0x04
    38d6:	35 81       	ldd	r19, Z+5	; 0x05
    38d8:	8b 81       	ldd	r24, Y+3	; 0x03
    38da:	9c 81       	ldd	r25, Y+4	; 0x04
    38dc:	fc 01       	movw	r30, r24
    38de:	84 8d       	ldd	r24, Z+28	; 0x1c
    38e0:	88 2f       	mov	r24, r24
    38e2:	90 e0       	ldi	r25, 0x00	; 0
    38e4:	28 0f       	add	r18, r24
    38e6:	39 1f       	adc	r19, r25
    38e8:	8b 81       	ldd	r24, Y+3	; 0x03
    38ea:	9c 81       	ldd	r25, Y+4	; 0x04
    38ec:	fc 01       	movw	r30, r24
    38ee:	35 83       	std	Z+5, r19	; 0x05
    38f0:	24 83       	std	Z+4, r18	; 0x04
    38f2:	8b 81       	ldd	r24, Y+3	; 0x03
    38f4:	9c 81       	ldd	r25, Y+4	; 0x04
    38f6:	fc 01       	movw	r30, r24
    38f8:	24 81       	ldd	r18, Z+4	; 0x04
    38fa:	35 81       	ldd	r19, Z+5	; 0x05
    38fc:	8b 81       	ldd	r24, Y+3	; 0x03
    38fe:	9c 81       	ldd	r25, Y+4	; 0x04
    3900:	fc 01       	movw	r30, r24
    3902:	82 81       	ldd	r24, Z+2	; 0x02
    3904:	93 81       	ldd	r25, Z+3	; 0x03
    3906:	28 17       	cp	r18, r24
    3908:	39 07       	cpc	r19, r25
    390a:	08 f4       	brcc	.+2      	; 0x390e <prvCopyDataToQueue+0xc8>
    390c:	5b c0       	rjmp	.+182    	; 0x39c4 <prvCopyDataToQueue+0x17e>
    390e:	8b 81       	ldd	r24, Y+3	; 0x03
    3910:	9c 81       	ldd	r25, Y+4	; 0x04
    3912:	fc 01       	movw	r30, r24
    3914:	20 81       	ld	r18, Z
    3916:	31 81       	ldd	r19, Z+1	; 0x01
    3918:	8b 81       	ldd	r24, Y+3	; 0x03
    391a:	9c 81       	ldd	r25, Y+4	; 0x04
    391c:	fc 01       	movw	r30, r24
    391e:	35 83       	std	Z+5, r19	; 0x05
    3920:	24 83       	std	Z+4, r18	; 0x04
    3922:	50 c0       	rjmp	.+160    	; 0x39c4 <prvCopyDataToQueue+0x17e>
    3924:	8b 81       	ldd	r24, Y+3	; 0x03
    3926:	9c 81       	ldd	r25, Y+4	; 0x04
    3928:	fc 01       	movw	r30, r24
    392a:	84 8d       	ldd	r24, Z+28	; 0x1c
    392c:	48 2f       	mov	r20, r24
    392e:	50 e0       	ldi	r21, 0x00	; 0
    3930:	8b 81       	ldd	r24, Y+3	; 0x03
    3932:	9c 81       	ldd	r25, Y+4	; 0x04
    3934:	fc 01       	movw	r30, r24
    3936:	86 81       	ldd	r24, Z+6	; 0x06
    3938:	97 81       	ldd	r25, Z+7	; 0x07
    393a:	2d 81       	ldd	r18, Y+5	; 0x05
    393c:	3e 81       	ldd	r19, Y+6	; 0x06
    393e:	b9 01       	movw	r22, r18
    3940:	0e 94 44 27 	call	0x4e88	; 0x4e88 <memcpy>
    3944:	8b 81       	ldd	r24, Y+3	; 0x03
    3946:	9c 81       	ldd	r25, Y+4	; 0x04
    3948:	fc 01       	movw	r30, r24
    394a:	26 81       	ldd	r18, Z+6	; 0x06
    394c:	37 81       	ldd	r19, Z+7	; 0x07
    394e:	8b 81       	ldd	r24, Y+3	; 0x03
    3950:	9c 81       	ldd	r25, Y+4	; 0x04
    3952:	fc 01       	movw	r30, r24
    3954:	84 8d       	ldd	r24, Z+28	; 0x1c
    3956:	88 2f       	mov	r24, r24
    3958:	90 e0       	ldi	r25, 0x00	; 0
    395a:	91 95       	neg	r25
    395c:	81 95       	neg	r24
    395e:	91 09       	sbc	r25, r1
    3960:	28 0f       	add	r18, r24
    3962:	39 1f       	adc	r19, r25
    3964:	8b 81       	ldd	r24, Y+3	; 0x03
    3966:	9c 81       	ldd	r25, Y+4	; 0x04
    3968:	fc 01       	movw	r30, r24
    396a:	37 83       	std	Z+7, r19	; 0x07
    396c:	26 83       	std	Z+6, r18	; 0x06
    396e:	8b 81       	ldd	r24, Y+3	; 0x03
    3970:	9c 81       	ldd	r25, Y+4	; 0x04
    3972:	fc 01       	movw	r30, r24
    3974:	26 81       	ldd	r18, Z+6	; 0x06
    3976:	37 81       	ldd	r19, Z+7	; 0x07
    3978:	8b 81       	ldd	r24, Y+3	; 0x03
    397a:	9c 81       	ldd	r25, Y+4	; 0x04
    397c:	fc 01       	movw	r30, r24
    397e:	80 81       	ld	r24, Z
    3980:	91 81       	ldd	r25, Z+1	; 0x01
    3982:	28 17       	cp	r18, r24
    3984:	39 07       	cpc	r19, r25
    3986:	a8 f4       	brcc	.+42     	; 0x39b2 <prvCopyDataToQueue+0x16c>
    3988:	8b 81       	ldd	r24, Y+3	; 0x03
    398a:	9c 81       	ldd	r25, Y+4	; 0x04
    398c:	fc 01       	movw	r30, r24
    398e:	22 81       	ldd	r18, Z+2	; 0x02
    3990:	33 81       	ldd	r19, Z+3	; 0x03
    3992:	8b 81       	ldd	r24, Y+3	; 0x03
    3994:	9c 81       	ldd	r25, Y+4	; 0x04
    3996:	fc 01       	movw	r30, r24
    3998:	84 8d       	ldd	r24, Z+28	; 0x1c
    399a:	88 2f       	mov	r24, r24
    399c:	90 e0       	ldi	r25, 0x00	; 0
    399e:	91 95       	neg	r25
    39a0:	81 95       	neg	r24
    39a2:	91 09       	sbc	r25, r1
    39a4:	28 0f       	add	r18, r24
    39a6:	39 1f       	adc	r19, r25
    39a8:	8b 81       	ldd	r24, Y+3	; 0x03
    39aa:	9c 81       	ldd	r25, Y+4	; 0x04
    39ac:	fc 01       	movw	r30, r24
    39ae:	37 83       	std	Z+7, r19	; 0x07
    39b0:	26 83       	std	Z+6, r18	; 0x06
    39b2:	8f 81       	ldd	r24, Y+7	; 0x07
    39b4:	82 30       	cpi	r24, 0x02	; 2
    39b6:	31 f4       	brne	.+12     	; 0x39c4 <prvCopyDataToQueue+0x17e>
    39b8:	8a 81       	ldd	r24, Y+2	; 0x02
    39ba:	88 23       	and	r24, r24
    39bc:	19 f0       	breq	.+6      	; 0x39c4 <prvCopyDataToQueue+0x17e>
    39be:	8a 81       	ldd	r24, Y+2	; 0x02
    39c0:	81 50       	subi	r24, 0x01	; 1
    39c2:	8a 83       	std	Y+2, r24	; 0x02
    39c4:	8a 81       	ldd	r24, Y+2	; 0x02
    39c6:	21 e0       	ldi	r18, 0x01	; 1
    39c8:	28 0f       	add	r18, r24
    39ca:	8b 81       	ldd	r24, Y+3	; 0x03
    39cc:	9c 81       	ldd	r25, Y+4	; 0x04
    39ce:	fc 01       	movw	r30, r24
    39d0:	22 8f       	std	Z+26, r18	; 0x1a
    39d2:	89 81       	ldd	r24, Y+1	; 0x01
    39d4:	27 96       	adiw	r28, 0x07	; 7
    39d6:	0f b6       	in	r0, 0x3f	; 63
    39d8:	f8 94       	cli
    39da:	de bf       	out	0x3e, r29	; 62
    39dc:	0f be       	out	0x3f, r0	; 63
    39de:	cd bf       	out	0x3d, r28	; 61
    39e0:	df 91       	pop	r29
    39e2:	cf 91       	pop	r28
    39e4:	08 95       	ret

000039e6 <prvCopyDataFromQueue>:
    39e6:	cf 93       	push	r28
    39e8:	df 93       	push	r29
    39ea:	00 d0       	rcall	.+0      	; 0x39ec <prvCopyDataFromQueue+0x6>
    39ec:	00 d0       	rcall	.+0      	; 0x39ee <prvCopyDataFromQueue+0x8>
    39ee:	cd b7       	in	r28, 0x3d	; 61
    39f0:	de b7       	in	r29, 0x3e	; 62
    39f2:	9a 83       	std	Y+2, r25	; 0x02
    39f4:	89 83       	std	Y+1, r24	; 0x01
    39f6:	7c 83       	std	Y+4, r23	; 0x04
    39f8:	6b 83       	std	Y+3, r22	; 0x03
    39fa:	89 81       	ldd	r24, Y+1	; 0x01
    39fc:	9a 81       	ldd	r25, Y+2	; 0x02
    39fe:	fc 01       	movw	r30, r24
    3a00:	84 8d       	ldd	r24, Z+28	; 0x1c
    3a02:	88 23       	and	r24, r24
    3a04:	c9 f1       	breq	.+114    	; 0x3a78 <prvCopyDataFromQueue+0x92>
    3a06:	89 81       	ldd	r24, Y+1	; 0x01
    3a08:	9a 81       	ldd	r25, Y+2	; 0x02
    3a0a:	fc 01       	movw	r30, r24
    3a0c:	26 81       	ldd	r18, Z+6	; 0x06
    3a0e:	37 81       	ldd	r19, Z+7	; 0x07
    3a10:	89 81       	ldd	r24, Y+1	; 0x01
    3a12:	9a 81       	ldd	r25, Y+2	; 0x02
    3a14:	fc 01       	movw	r30, r24
    3a16:	84 8d       	ldd	r24, Z+28	; 0x1c
    3a18:	88 2f       	mov	r24, r24
    3a1a:	90 e0       	ldi	r25, 0x00	; 0
    3a1c:	28 0f       	add	r18, r24
    3a1e:	39 1f       	adc	r19, r25
    3a20:	89 81       	ldd	r24, Y+1	; 0x01
    3a22:	9a 81       	ldd	r25, Y+2	; 0x02
    3a24:	fc 01       	movw	r30, r24
    3a26:	37 83       	std	Z+7, r19	; 0x07
    3a28:	26 83       	std	Z+6, r18	; 0x06
    3a2a:	89 81       	ldd	r24, Y+1	; 0x01
    3a2c:	9a 81       	ldd	r25, Y+2	; 0x02
    3a2e:	fc 01       	movw	r30, r24
    3a30:	26 81       	ldd	r18, Z+6	; 0x06
    3a32:	37 81       	ldd	r19, Z+7	; 0x07
    3a34:	89 81       	ldd	r24, Y+1	; 0x01
    3a36:	9a 81       	ldd	r25, Y+2	; 0x02
    3a38:	fc 01       	movw	r30, r24
    3a3a:	82 81       	ldd	r24, Z+2	; 0x02
    3a3c:	93 81       	ldd	r25, Z+3	; 0x03
    3a3e:	28 17       	cp	r18, r24
    3a40:	39 07       	cpc	r19, r25
    3a42:	50 f0       	brcs	.+20     	; 0x3a58 <prvCopyDataFromQueue+0x72>
    3a44:	89 81       	ldd	r24, Y+1	; 0x01
    3a46:	9a 81       	ldd	r25, Y+2	; 0x02
    3a48:	fc 01       	movw	r30, r24
    3a4a:	20 81       	ld	r18, Z
    3a4c:	31 81       	ldd	r19, Z+1	; 0x01
    3a4e:	89 81       	ldd	r24, Y+1	; 0x01
    3a50:	9a 81       	ldd	r25, Y+2	; 0x02
    3a52:	fc 01       	movw	r30, r24
    3a54:	37 83       	std	Z+7, r19	; 0x07
    3a56:	26 83       	std	Z+6, r18	; 0x06
    3a58:	89 81       	ldd	r24, Y+1	; 0x01
    3a5a:	9a 81       	ldd	r25, Y+2	; 0x02
    3a5c:	fc 01       	movw	r30, r24
    3a5e:	84 8d       	ldd	r24, Z+28	; 0x1c
    3a60:	48 2f       	mov	r20, r24
    3a62:	50 e0       	ldi	r21, 0x00	; 0
    3a64:	89 81       	ldd	r24, Y+1	; 0x01
    3a66:	9a 81       	ldd	r25, Y+2	; 0x02
    3a68:	fc 01       	movw	r30, r24
    3a6a:	26 81       	ldd	r18, Z+6	; 0x06
    3a6c:	37 81       	ldd	r19, Z+7	; 0x07
    3a6e:	8b 81       	ldd	r24, Y+3	; 0x03
    3a70:	9c 81       	ldd	r25, Y+4	; 0x04
    3a72:	b9 01       	movw	r22, r18
    3a74:	0e 94 44 27 	call	0x4e88	; 0x4e88 <memcpy>
    3a78:	00 00       	nop
    3a7a:	0f 90       	pop	r0
    3a7c:	0f 90       	pop	r0
    3a7e:	0f 90       	pop	r0
    3a80:	0f 90       	pop	r0
    3a82:	df 91       	pop	r29
    3a84:	cf 91       	pop	r28
    3a86:	08 95       	ret

00003a88 <prvUnlockQueue>:
    3a88:	cf 93       	push	r28
    3a8a:	df 93       	push	r29
    3a8c:	00 d0       	rcall	.+0      	; 0x3a8e <prvUnlockQueue+0x6>
    3a8e:	00 d0       	rcall	.+0      	; 0x3a90 <prvUnlockQueue+0x8>
    3a90:	cd b7       	in	r28, 0x3d	; 61
    3a92:	de b7       	in	r29, 0x3e	; 62
    3a94:	9c 83       	std	Y+4, r25	; 0x04
    3a96:	8b 83       	std	Y+3, r24	; 0x03
    3a98:	0f b6       	in	r0, 0x3f	; 63
    3a9a:	f8 94       	cli
    3a9c:	0f 92       	push	r0
    3a9e:	8b 81       	ldd	r24, Y+3	; 0x03
    3aa0:	9c 81       	ldd	r25, Y+4	; 0x04
    3aa2:	fc 01       	movw	r30, r24
    3aa4:	86 8d       	ldd	r24, Z+30	; 0x1e
    3aa6:	89 83       	std	Y+1, r24	; 0x01
    3aa8:	12 c0       	rjmp	.+36     	; 0x3ace <prvUnlockQueue+0x46>
    3aaa:	8b 81       	ldd	r24, Y+3	; 0x03
    3aac:	9c 81       	ldd	r25, Y+4	; 0x04
    3aae:	fc 01       	movw	r30, r24
    3ab0:	81 89       	ldd	r24, Z+17	; 0x11
    3ab2:	88 23       	and	r24, r24
    3ab4:	81 f0       	breq	.+32     	; 0x3ad6 <prvUnlockQueue+0x4e>
    3ab6:	8b 81       	ldd	r24, Y+3	; 0x03
    3ab8:	9c 81       	ldd	r25, Y+4	; 0x04
    3aba:	41 96       	adiw	r24, 0x11	; 17
    3abc:	0e 94 31 23 	call	0x4662	; 0x4662 <xTaskRemoveFromEventList>
    3ac0:	88 23       	and	r24, r24
    3ac2:	11 f0       	breq	.+4      	; 0x3ac8 <prvUnlockQueue+0x40>
    3ac4:	0e 94 22 24 	call	0x4844	; 0x4844 <vTaskMissedYield>
    3ac8:	89 81       	ldd	r24, Y+1	; 0x01
    3aca:	81 50       	subi	r24, 0x01	; 1
    3acc:	89 83       	std	Y+1, r24	; 0x01
    3ace:	89 81       	ldd	r24, Y+1	; 0x01
    3ad0:	18 16       	cp	r1, r24
    3ad2:	5c f3       	brlt	.-42     	; 0x3aaa <prvUnlockQueue+0x22>
    3ad4:	01 c0       	rjmp	.+2      	; 0x3ad8 <prvUnlockQueue+0x50>
    3ad6:	00 00       	nop
    3ad8:	8b 81       	ldd	r24, Y+3	; 0x03
    3ada:	9c 81       	ldd	r25, Y+4	; 0x04
    3adc:	2f ef       	ldi	r18, 0xFF	; 255
    3ade:	fc 01       	movw	r30, r24
    3ae0:	26 8f       	std	Z+30, r18	; 0x1e
    3ae2:	0f 90       	pop	r0
    3ae4:	0f be       	out	0x3f, r0	; 63
    3ae6:	0f b6       	in	r0, 0x3f	; 63
    3ae8:	f8 94       	cli
    3aea:	0f 92       	push	r0
    3aec:	8b 81       	ldd	r24, Y+3	; 0x03
    3aee:	9c 81       	ldd	r25, Y+4	; 0x04
    3af0:	fc 01       	movw	r30, r24
    3af2:	85 8d       	ldd	r24, Z+29	; 0x1d
    3af4:	8a 83       	std	Y+2, r24	; 0x02
    3af6:	12 c0       	rjmp	.+36     	; 0x3b1c <prvUnlockQueue+0x94>
    3af8:	8b 81       	ldd	r24, Y+3	; 0x03
    3afa:	9c 81       	ldd	r25, Y+4	; 0x04
    3afc:	fc 01       	movw	r30, r24
    3afe:	80 85       	ldd	r24, Z+8	; 0x08
    3b00:	88 23       	and	r24, r24
    3b02:	81 f0       	breq	.+32     	; 0x3b24 <prvUnlockQueue+0x9c>
    3b04:	8b 81       	ldd	r24, Y+3	; 0x03
    3b06:	9c 81       	ldd	r25, Y+4	; 0x04
    3b08:	08 96       	adiw	r24, 0x08	; 8
    3b0a:	0e 94 31 23 	call	0x4662	; 0x4662 <xTaskRemoveFromEventList>
    3b0e:	88 23       	and	r24, r24
    3b10:	11 f0       	breq	.+4      	; 0x3b16 <prvUnlockQueue+0x8e>
    3b12:	0e 94 22 24 	call	0x4844	; 0x4844 <vTaskMissedYield>
    3b16:	8a 81       	ldd	r24, Y+2	; 0x02
    3b18:	81 50       	subi	r24, 0x01	; 1
    3b1a:	8a 83       	std	Y+2, r24	; 0x02
    3b1c:	8a 81       	ldd	r24, Y+2	; 0x02
    3b1e:	18 16       	cp	r1, r24
    3b20:	5c f3       	brlt	.-42     	; 0x3af8 <prvUnlockQueue+0x70>
    3b22:	01 c0       	rjmp	.+2      	; 0x3b26 <prvUnlockQueue+0x9e>
    3b24:	00 00       	nop
    3b26:	8b 81       	ldd	r24, Y+3	; 0x03
    3b28:	9c 81       	ldd	r25, Y+4	; 0x04
    3b2a:	2f ef       	ldi	r18, 0xFF	; 255
    3b2c:	fc 01       	movw	r30, r24
    3b2e:	25 8f       	std	Z+29, r18	; 0x1d
    3b30:	0f 90       	pop	r0
    3b32:	0f be       	out	0x3f, r0	; 63
    3b34:	00 00       	nop
    3b36:	0f 90       	pop	r0
    3b38:	0f 90       	pop	r0
    3b3a:	0f 90       	pop	r0
    3b3c:	0f 90       	pop	r0
    3b3e:	df 91       	pop	r29
    3b40:	cf 91       	pop	r28
    3b42:	08 95       	ret

00003b44 <prvIsQueueEmpty>:
    3b44:	cf 93       	push	r28
    3b46:	df 93       	push	r29
    3b48:	00 d0       	rcall	.+0      	; 0x3b4a <prvIsQueueEmpty+0x6>
    3b4a:	1f 92       	push	r1
    3b4c:	cd b7       	in	r28, 0x3d	; 61
    3b4e:	de b7       	in	r29, 0x3e	; 62
    3b50:	9b 83       	std	Y+3, r25	; 0x03
    3b52:	8a 83       	std	Y+2, r24	; 0x02
    3b54:	0f b6       	in	r0, 0x3f	; 63
    3b56:	f8 94       	cli
    3b58:	0f 92       	push	r0
    3b5a:	8a 81       	ldd	r24, Y+2	; 0x02
    3b5c:	9b 81       	ldd	r25, Y+3	; 0x03
    3b5e:	fc 01       	movw	r30, r24
    3b60:	82 8d       	ldd	r24, Z+26	; 0x1a
    3b62:	88 23       	and	r24, r24
    3b64:	19 f4       	brne	.+6      	; 0x3b6c <prvIsQueueEmpty+0x28>
    3b66:	81 e0       	ldi	r24, 0x01	; 1
    3b68:	89 83       	std	Y+1, r24	; 0x01
    3b6a:	01 c0       	rjmp	.+2      	; 0x3b6e <prvIsQueueEmpty+0x2a>
    3b6c:	19 82       	std	Y+1, r1	; 0x01
    3b6e:	0f 90       	pop	r0
    3b70:	0f be       	out	0x3f, r0	; 63
    3b72:	89 81       	ldd	r24, Y+1	; 0x01
    3b74:	0f 90       	pop	r0
    3b76:	0f 90       	pop	r0
    3b78:	0f 90       	pop	r0
    3b7a:	df 91       	pop	r29
    3b7c:	cf 91       	pop	r28
    3b7e:	08 95       	ret

00003b80 <prvIsQueueFull>:
    3b80:	cf 93       	push	r28
    3b82:	df 93       	push	r29
    3b84:	00 d0       	rcall	.+0      	; 0x3b86 <prvIsQueueFull+0x6>
    3b86:	1f 92       	push	r1
    3b88:	cd b7       	in	r28, 0x3d	; 61
    3b8a:	de b7       	in	r29, 0x3e	; 62
    3b8c:	9b 83       	std	Y+3, r25	; 0x03
    3b8e:	8a 83       	std	Y+2, r24	; 0x02
    3b90:	0f b6       	in	r0, 0x3f	; 63
    3b92:	f8 94       	cli
    3b94:	0f 92       	push	r0
    3b96:	8a 81       	ldd	r24, Y+2	; 0x02
    3b98:	9b 81       	ldd	r25, Y+3	; 0x03
    3b9a:	fc 01       	movw	r30, r24
    3b9c:	22 8d       	ldd	r18, Z+26	; 0x1a
    3b9e:	8a 81       	ldd	r24, Y+2	; 0x02
    3ba0:	9b 81       	ldd	r25, Y+3	; 0x03
    3ba2:	fc 01       	movw	r30, r24
    3ba4:	83 8d       	ldd	r24, Z+27	; 0x1b
    3ba6:	28 17       	cp	r18, r24
    3ba8:	19 f4       	brne	.+6      	; 0x3bb0 <prvIsQueueFull+0x30>
    3baa:	81 e0       	ldi	r24, 0x01	; 1
    3bac:	89 83       	std	Y+1, r24	; 0x01
    3bae:	01 c0       	rjmp	.+2      	; 0x3bb2 <prvIsQueueFull+0x32>
    3bb0:	19 82       	std	Y+1, r1	; 0x01
    3bb2:	0f 90       	pop	r0
    3bb4:	0f be       	out	0x3f, r0	; 63
    3bb6:	89 81       	ldd	r24, Y+1	; 0x01
    3bb8:	0f 90       	pop	r0
    3bba:	0f 90       	pop	r0
    3bbc:	0f 90       	pop	r0
    3bbe:	df 91       	pop	r29
    3bc0:	cf 91       	pop	r28
    3bc2:	08 95       	ret

00003bc4 <xTaskCreate>:
    3bc4:	8f 92       	push	r8
    3bc6:	9f 92       	push	r9
    3bc8:	af 92       	push	r10
    3bca:	bf 92       	push	r11
    3bcc:	cf 92       	push	r12
    3bce:	df 92       	push	r13
    3bd0:	ef 92       	push	r14
    3bd2:	ff 92       	push	r15
    3bd4:	0f 93       	push	r16
    3bd6:	1f 93       	push	r17
    3bd8:	cf 93       	push	r28
    3bda:	df 93       	push	r29
    3bdc:	cd b7       	in	r28, 0x3d	; 61
    3bde:	de b7       	in	r29, 0x3e	; 62
    3be0:	60 97       	sbiw	r28, 0x10	; 16
    3be2:	0f b6       	in	r0, 0x3f	; 63
    3be4:	f8 94       	cli
    3be6:	de bf       	out	0x3e, r29	; 62
    3be8:	0f be       	out	0x3f, r0	; 63
    3bea:	cd bf       	out	0x3d, r28	; 61
    3bec:	9f 83       	std	Y+7, r25	; 0x07
    3bee:	8e 83       	std	Y+6, r24	; 0x06
    3bf0:	79 87       	std	Y+9, r23	; 0x09
    3bf2:	68 87       	std	Y+8, r22	; 0x08
    3bf4:	5b 87       	std	Y+11, r21	; 0x0b
    3bf6:	4a 87       	std	Y+10, r20	; 0x0a
    3bf8:	3d 87       	std	Y+13, r19	; 0x0d
    3bfa:	2c 87       	std	Y+12, r18	; 0x0c
    3bfc:	0e 87       	std	Y+14, r16	; 0x0e
    3bfe:	f8 8a       	std	Y+16, r15	; 0x10
    3c00:	ef 86       	std	Y+15, r14	; 0x0f
    3c02:	8a 85       	ldd	r24, Y+10	; 0x0a
    3c04:	9b 85       	ldd	r25, Y+11	; 0x0b
    3c06:	0e 94 ea 16 	call	0x2dd4	; 0x2dd4 <pvPortMalloc>
    3c0a:	9d 83       	std	Y+5, r25	; 0x05
    3c0c:	8c 83       	std	Y+4, r24	; 0x04
    3c0e:	8c 81       	ldd	r24, Y+4	; 0x04
    3c10:	9d 81       	ldd	r25, Y+5	; 0x05
    3c12:	89 2b       	or	r24, r25
    3c14:	b9 f0       	breq	.+46     	; 0x3c44 <xTaskCreate+0x80>
    3c16:	8c e2       	ldi	r24, 0x2C	; 44
    3c18:	90 e0       	ldi	r25, 0x00	; 0
    3c1a:	0e 94 ea 16 	call	0x2dd4	; 0x2dd4 <pvPortMalloc>
    3c1e:	9a 83       	std	Y+2, r25	; 0x02
    3c20:	89 83       	std	Y+1, r24	; 0x01
    3c22:	89 81       	ldd	r24, Y+1	; 0x01
    3c24:	9a 81       	ldd	r25, Y+2	; 0x02
    3c26:	89 2b       	or	r24, r25
    3c28:	41 f0       	breq	.+16     	; 0x3c3a <xTaskCreate+0x76>
    3c2a:	89 81       	ldd	r24, Y+1	; 0x01
    3c2c:	9a 81       	ldd	r25, Y+2	; 0x02
    3c2e:	2c 81       	ldd	r18, Y+4	; 0x04
    3c30:	3d 81       	ldd	r19, Y+5	; 0x05
    3c32:	fc 01       	movw	r30, r24
    3c34:	30 8f       	std	Z+24, r19	; 0x18
    3c36:	27 8b       	std	Z+23, r18	; 0x17
    3c38:	07 c0       	rjmp	.+14     	; 0x3c48 <xTaskCreate+0x84>
    3c3a:	8c 81       	ldd	r24, Y+4	; 0x04
    3c3c:	9d 81       	ldd	r25, Y+5	; 0x05
    3c3e:	0e 94 df 17 	call	0x2fbe	; 0x2fbe <vPortFree>
    3c42:	02 c0       	rjmp	.+4      	; 0x3c48 <xTaskCreate+0x84>
    3c44:	1a 82       	std	Y+2, r1	; 0x02
    3c46:	19 82       	std	Y+1, r1	; 0x01
    3c48:	89 81       	ldd	r24, Y+1	; 0x01
    3c4a:	9a 81       	ldd	r25, Y+2	; 0x02
    3c4c:	89 2b       	or	r24, r25
    3c4e:	09 f1       	breq	.+66     	; 0x3c92 <xTaskCreate+0xce>
    3c50:	8a 85       	ldd	r24, Y+10	; 0x0a
    3c52:	9b 85       	ldd	r25, Y+11	; 0x0b
    3c54:	cc 01       	movw	r24, r24
    3c56:	a0 e0       	ldi	r26, 0x00	; 0
    3c58:	b0 e0       	ldi	r27, 0x00	; 0
    3c5a:	09 81       	ldd	r16, Y+1	; 0x01
    3c5c:	1a 81       	ldd	r17, Y+2	; 0x02
    3c5e:	4f 85       	ldd	r20, Y+15	; 0x0f
    3c60:	58 89       	ldd	r21, Y+16	; 0x10
    3c62:	2c 85       	ldd	r18, Y+12	; 0x0c
    3c64:	3d 85       	ldd	r19, Y+13	; 0x0d
    3c66:	68 85       	ldd	r22, Y+8	; 0x08
    3c68:	79 85       	ldd	r23, Y+9	; 0x09
    3c6a:	ee 81       	ldd	r30, Y+6	; 0x06
    3c6c:	ff 81       	ldd	r31, Y+7	; 0x07
    3c6e:	81 2c       	mov	r8, r1
    3c70:	91 2c       	mov	r9, r1
    3c72:	58 01       	movw	r10, r16
    3c74:	6a 01       	movw	r12, r20
    3c76:	ee 84       	ldd	r14, Y+14	; 0x0e
    3c78:	89 01       	movw	r16, r18
    3c7a:	9c 01       	movw	r18, r24
    3c7c:	ad 01       	movw	r20, r26
    3c7e:	cf 01       	movw	r24, r30
    3c80:	0e 94 5f 1e 	call	0x3cbe	; 0x3cbe <prvInitialiseNewTask>
    3c84:	89 81       	ldd	r24, Y+1	; 0x01
    3c86:	9a 81       	ldd	r25, Y+2	; 0x02
    3c88:	0e 94 3b 1f 	call	0x3e76	; 0x3e76 <prvAddNewTaskToReadyList>
    3c8c:	81 e0       	ldi	r24, 0x01	; 1
    3c8e:	8b 83       	std	Y+3, r24	; 0x03
    3c90:	02 c0       	rjmp	.+4      	; 0x3c96 <xTaskCreate+0xd2>
    3c92:	8f ef       	ldi	r24, 0xFF	; 255
    3c94:	8b 83       	std	Y+3, r24	; 0x03
    3c96:	8b 81       	ldd	r24, Y+3	; 0x03
    3c98:	60 96       	adiw	r28, 0x10	; 16
    3c9a:	0f b6       	in	r0, 0x3f	; 63
    3c9c:	f8 94       	cli
    3c9e:	de bf       	out	0x3e, r29	; 62
    3ca0:	0f be       	out	0x3f, r0	; 63
    3ca2:	cd bf       	out	0x3d, r28	; 61
    3ca4:	df 91       	pop	r29
    3ca6:	cf 91       	pop	r28
    3ca8:	1f 91       	pop	r17
    3caa:	0f 91       	pop	r16
    3cac:	ff 90       	pop	r15
    3cae:	ef 90       	pop	r14
    3cb0:	df 90       	pop	r13
    3cb2:	cf 90       	pop	r12
    3cb4:	bf 90       	pop	r11
    3cb6:	af 90       	pop	r10
    3cb8:	9f 90       	pop	r9
    3cba:	8f 90       	pop	r8
    3cbc:	08 95       	ret

00003cbe <prvInitialiseNewTask>:
    3cbe:	8f 92       	push	r8
    3cc0:	9f 92       	push	r9
    3cc2:	af 92       	push	r10
    3cc4:	bf 92       	push	r11
    3cc6:	cf 92       	push	r12
    3cc8:	df 92       	push	r13
    3cca:	ef 92       	push	r14
    3ccc:	0f 93       	push	r16
    3cce:	1f 93       	push	r17
    3cd0:	cf 93       	push	r28
    3cd2:	df 93       	push	r29
    3cd4:	cd b7       	in	r28, 0x3d	; 61
    3cd6:	de b7       	in	r29, 0x3e	; 62
    3cd8:	64 97       	sbiw	r28, 0x14	; 20
    3cda:	0f b6       	in	r0, 0x3f	; 63
    3cdc:	f8 94       	cli
    3cde:	de bf       	out	0x3e, r29	; 62
    3ce0:	0f be       	out	0x3f, r0	; 63
    3ce2:	cd bf       	out	0x3d, r28	; 61
    3ce4:	9d 83       	std	Y+5, r25	; 0x05
    3ce6:	8c 83       	std	Y+4, r24	; 0x04
    3ce8:	7f 83       	std	Y+7, r23	; 0x07
    3cea:	6e 83       	std	Y+6, r22	; 0x06
    3cec:	28 87       	std	Y+8, r18	; 0x08
    3cee:	39 87       	std	Y+9, r19	; 0x09
    3cf0:	4a 87       	std	Y+10, r20	; 0x0a
    3cf2:	5b 87       	std	Y+11, r21	; 0x0b
    3cf4:	1d 87       	std	Y+13, r17	; 0x0d
    3cf6:	0c 87       	std	Y+12, r16	; 0x0c
    3cf8:	ee 86       	std	Y+14, r14	; 0x0e
    3cfa:	d8 8a       	std	Y+16, r13	; 0x10
    3cfc:	cf 86       	std	Y+15, r12	; 0x0f
    3cfe:	ba 8a       	std	Y+18, r11	; 0x12
    3d00:	a9 8a       	std	Y+17, r10	; 0x11
    3d02:	9c 8a       	std	Y+20, r9	; 0x14
    3d04:	8b 8a       	std	Y+19, r8	; 0x13
    3d06:	28 85       	ldd	r18, Y+8	; 0x08
    3d08:	39 85       	ldd	r19, Y+9	; 0x09
    3d0a:	89 89       	ldd	r24, Y+17	; 0x11
    3d0c:	9a 89       	ldd	r25, Y+18	; 0x12
    3d0e:	fc 01       	movw	r30, r24
    3d10:	87 89       	ldd	r24, Z+23	; 0x17
    3d12:	90 8d       	ldd	r25, Z+24	; 0x18
    3d14:	a9 01       	movw	r20, r18
    3d16:	65 ea       	ldi	r22, 0xA5	; 165
    3d18:	70 e0       	ldi	r23, 0x00	; 0
    3d1a:	0e 94 4d 27 	call	0x4e9a	; 0x4e9a <memset>
    3d1e:	89 89       	ldd	r24, Y+17	; 0x11
    3d20:	9a 89       	ldd	r25, Y+18	; 0x12
    3d22:	fc 01       	movw	r30, r24
    3d24:	27 89       	ldd	r18, Z+23	; 0x17
    3d26:	30 8d       	ldd	r19, Z+24	; 0x18
    3d28:	88 85       	ldd	r24, Y+8	; 0x08
    3d2a:	99 85       	ldd	r25, Y+9	; 0x09
    3d2c:	01 97       	sbiw	r24, 0x01	; 1
    3d2e:	82 0f       	add	r24, r18
    3d30:	93 1f       	adc	r25, r19
    3d32:	9b 83       	std	Y+3, r25	; 0x03
    3d34:	8a 83       	std	Y+2, r24	; 0x02
    3d36:	19 82       	std	Y+1, r1	; 0x01
    3d38:	21 c0       	rjmp	.+66     	; 0x3d7c <prvInitialiseNewTask+0xbe>
    3d3a:	89 81       	ldd	r24, Y+1	; 0x01
    3d3c:	88 2f       	mov	r24, r24
    3d3e:	90 e0       	ldi	r25, 0x00	; 0
    3d40:	29 81       	ldd	r18, Y+1	; 0x01
    3d42:	22 2f       	mov	r18, r18
    3d44:	30 e0       	ldi	r19, 0x00	; 0
    3d46:	4e 81       	ldd	r20, Y+6	; 0x06
    3d48:	5f 81       	ldd	r21, Y+7	; 0x07
    3d4a:	24 0f       	add	r18, r20
    3d4c:	35 1f       	adc	r19, r21
    3d4e:	f9 01       	movw	r30, r18
    3d50:	40 81       	ld	r20, Z
    3d52:	29 89       	ldd	r18, Y+17	; 0x11
    3d54:	3a 89       	ldd	r19, Y+18	; 0x12
    3d56:	82 0f       	add	r24, r18
    3d58:	93 1f       	adc	r25, r19
    3d5a:	49 96       	adiw	r24, 0x19	; 25
    3d5c:	fc 01       	movw	r30, r24
    3d5e:	40 83       	st	Z, r20
    3d60:	89 81       	ldd	r24, Y+1	; 0x01
    3d62:	88 2f       	mov	r24, r24
    3d64:	90 e0       	ldi	r25, 0x00	; 0
    3d66:	2e 81       	ldd	r18, Y+6	; 0x06
    3d68:	3f 81       	ldd	r19, Y+7	; 0x07
    3d6a:	82 0f       	add	r24, r18
    3d6c:	93 1f       	adc	r25, r19
    3d6e:	fc 01       	movw	r30, r24
    3d70:	80 81       	ld	r24, Z
    3d72:	88 23       	and	r24, r24
    3d74:	39 f0       	breq	.+14     	; 0x3d84 <prvInitialiseNewTask+0xc6>
    3d76:	89 81       	ldd	r24, Y+1	; 0x01
    3d78:	8f 5f       	subi	r24, 0xFF	; 255
    3d7a:	89 83       	std	Y+1, r24	; 0x01
    3d7c:	89 81       	ldd	r24, Y+1	; 0x01
    3d7e:	88 30       	cpi	r24, 0x08	; 8
    3d80:	e0 f2       	brcs	.-72     	; 0x3d3a <prvInitialiseNewTask+0x7c>
    3d82:	01 c0       	rjmp	.+2      	; 0x3d86 <prvInitialiseNewTask+0xc8>
    3d84:	00 00       	nop
    3d86:	89 89       	ldd	r24, Y+17	; 0x11
    3d88:	9a 89       	ldd	r25, Y+18	; 0x12
    3d8a:	fc 01       	movw	r30, r24
    3d8c:	10 a2       	std	Z+32, r1	; 0x20
    3d8e:	8e 85       	ldd	r24, Y+14	; 0x0e
    3d90:	84 30       	cpi	r24, 0x04	; 4
    3d92:	10 f0       	brcs	.+4      	; 0x3d98 <prvInitialiseNewTask+0xda>
    3d94:	83 e0       	ldi	r24, 0x03	; 3
    3d96:	8e 87       	std	Y+14, r24	; 0x0e
    3d98:	89 89       	ldd	r24, Y+17	; 0x11
    3d9a:	9a 89       	ldd	r25, Y+18	; 0x12
    3d9c:	2e 85       	ldd	r18, Y+14	; 0x0e
    3d9e:	fc 01       	movw	r30, r24
    3da0:	26 8b       	std	Z+22, r18	; 0x16
    3da2:	89 89       	ldd	r24, Y+17	; 0x11
    3da4:	9a 89       	ldd	r25, Y+18	; 0x12
    3da6:	2e 85       	ldd	r18, Y+14	; 0x0e
    3da8:	fc 01       	movw	r30, r24
    3daa:	23 a3       	std	Z+35, r18	; 0x23
    3dac:	89 89       	ldd	r24, Y+17	; 0x11
    3dae:	9a 89       	ldd	r25, Y+18	; 0x12
    3db0:	fc 01       	movw	r30, r24
    3db2:	14 a2       	std	Z+36, r1	; 0x24
    3db4:	89 89       	ldd	r24, Y+17	; 0x11
    3db6:	9a 89       	ldd	r25, Y+18	; 0x12
    3db8:	02 96       	adiw	r24, 0x02	; 2
    3dba:	0e 94 52 10 	call	0x20a4	; 0x20a4 <vListInitialiseItem>
    3dbe:	89 89       	ldd	r24, Y+17	; 0x11
    3dc0:	9a 89       	ldd	r25, Y+18	; 0x12
    3dc2:	0c 96       	adiw	r24, 0x0c	; 12
    3dc4:	0e 94 52 10 	call	0x20a4	; 0x20a4 <vListInitialiseItem>
    3dc8:	89 89       	ldd	r24, Y+17	; 0x11
    3dca:	9a 89       	ldd	r25, Y+18	; 0x12
    3dcc:	29 89       	ldd	r18, Y+17	; 0x11
    3dce:	3a 89       	ldd	r19, Y+18	; 0x12
    3dd0:	fc 01       	movw	r30, r24
    3dd2:	31 87       	std	Z+9, r19	; 0x09
    3dd4:	20 87       	std	Z+8, r18	; 0x08
    3dd6:	8e 85       	ldd	r24, Y+14	; 0x0e
    3dd8:	88 2f       	mov	r24, r24
    3dda:	90 e0       	ldi	r25, 0x00	; 0
    3ddc:	24 e0       	ldi	r18, 0x04	; 4
    3dde:	30 e0       	ldi	r19, 0x00	; 0
    3de0:	28 1b       	sub	r18, r24
    3de2:	39 0b       	sbc	r19, r25
    3de4:	89 89       	ldd	r24, Y+17	; 0x11
    3de6:	9a 89       	ldd	r25, Y+18	; 0x12
    3de8:	fc 01       	movw	r30, r24
    3dea:	35 87       	std	Z+13, r19	; 0x0d
    3dec:	24 87       	std	Z+12, r18	; 0x0c
    3dee:	89 89       	ldd	r24, Y+17	; 0x11
    3df0:	9a 89       	ldd	r25, Y+18	; 0x12
    3df2:	29 89       	ldd	r18, Y+17	; 0x11
    3df4:	3a 89       	ldd	r19, Y+18	; 0x12
    3df6:	fc 01       	movw	r30, r24
    3df8:	33 8b       	std	Z+19, r19	; 0x13
    3dfa:	22 8b       	std	Z+18, r18	; 0x12
    3dfc:	89 89       	ldd	r24, Y+17	; 0x11
    3dfe:	9a 89       	ldd	r25, Y+18	; 0x12
    3e00:	fc 01       	movw	r30, r24
    3e02:	16 a2       	std	Z+38, r1	; 0x26
    3e04:	15 a2       	std	Z+37, r1	; 0x25
    3e06:	89 89       	ldd	r24, Y+17	; 0x11
    3e08:	9a 89       	ldd	r25, Y+18	; 0x12
    3e0a:	fc 01       	movw	r30, r24
    3e0c:	17 a2       	std	Z+39, r1	; 0x27
    3e0e:	10 a6       	std	Z+40, r1	; 0x28
    3e10:	11 a6       	std	Z+41, r1	; 0x29
    3e12:	12 a6       	std	Z+42, r1	; 0x2a
    3e14:	89 89       	ldd	r24, Y+17	; 0x11
    3e16:	9a 89       	ldd	r25, Y+18	; 0x12
    3e18:	fc 01       	movw	r30, r24
    3e1a:	13 a6       	std	Z+43, r1	; 0x2b
    3e1c:	4c 85       	ldd	r20, Y+12	; 0x0c
    3e1e:	5d 85       	ldd	r21, Y+13	; 0x0d
    3e20:	2c 81       	ldd	r18, Y+4	; 0x04
    3e22:	3d 81       	ldd	r19, Y+5	; 0x05
    3e24:	8a 81       	ldd	r24, Y+2	; 0x02
    3e26:	9b 81       	ldd	r25, Y+3	; 0x03
    3e28:	b9 01       	movw	r22, r18
    3e2a:	0e 94 82 11 	call	0x2304	; 0x2304 <pxPortInitialiseStack>
    3e2e:	9c 01       	movw	r18, r24
    3e30:	89 89       	ldd	r24, Y+17	; 0x11
    3e32:	9a 89       	ldd	r25, Y+18	; 0x12
    3e34:	fc 01       	movw	r30, r24
    3e36:	31 83       	std	Z+1, r19	; 0x01
    3e38:	20 83       	st	Z, r18
    3e3a:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e3c:	98 89       	ldd	r25, Y+16	; 0x10
    3e3e:	89 2b       	or	r24, r25
    3e40:	39 f0       	breq	.+14     	; 0x3e50 <prvInitialiseNewTask+0x192>
    3e42:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e44:	98 89       	ldd	r25, Y+16	; 0x10
    3e46:	29 89       	ldd	r18, Y+17	; 0x11
    3e48:	3a 89       	ldd	r19, Y+18	; 0x12
    3e4a:	fc 01       	movw	r30, r24
    3e4c:	31 83       	std	Z+1, r19	; 0x01
    3e4e:	20 83       	st	Z, r18
    3e50:	00 00       	nop
    3e52:	64 96       	adiw	r28, 0x14	; 20
    3e54:	0f b6       	in	r0, 0x3f	; 63
    3e56:	f8 94       	cli
    3e58:	de bf       	out	0x3e, r29	; 62
    3e5a:	0f be       	out	0x3f, r0	; 63
    3e5c:	cd bf       	out	0x3d, r28	; 61
    3e5e:	df 91       	pop	r29
    3e60:	cf 91       	pop	r28
    3e62:	1f 91       	pop	r17
    3e64:	0f 91       	pop	r16
    3e66:	ef 90       	pop	r14
    3e68:	df 90       	pop	r13
    3e6a:	cf 90       	pop	r12
    3e6c:	bf 90       	pop	r11
    3e6e:	af 90       	pop	r10
    3e70:	9f 90       	pop	r9
    3e72:	8f 90       	pop	r8
    3e74:	08 95       	ret

00003e76 <prvAddNewTaskToReadyList>:
    3e76:	cf 93       	push	r28
    3e78:	df 93       	push	r29
    3e7a:	00 d0       	rcall	.+0      	; 0x3e7c <prvAddNewTaskToReadyList+0x6>
    3e7c:	cd b7       	in	r28, 0x3d	; 61
    3e7e:	de b7       	in	r29, 0x3e	; 62
    3e80:	9a 83       	std	Y+2, r25	; 0x02
    3e82:	89 83       	std	Y+1, r24	; 0x01
    3e84:	0f b6       	in	r0, 0x3f	; 63
    3e86:	f8 94       	cli
    3e88:	0f 92       	push	r0
    3e8a:	80 91 33 08 	lds	r24, 0x0833	; 0x800833 <uxCurrentNumberOfTasks>
    3e8e:	8f 5f       	subi	r24, 0xFF	; 255
    3e90:	80 93 33 08 	sts	0x0833, r24	; 0x800833 <uxCurrentNumberOfTasks>
    3e94:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    3e98:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    3e9c:	89 2b       	or	r24, r25
    3e9e:	69 f4       	brne	.+26     	; 0x3eba <prvAddNewTaskToReadyList+0x44>
    3ea0:	89 81       	ldd	r24, Y+1	; 0x01
    3ea2:	9a 81       	ldd	r25, Y+2	; 0x02
    3ea4:	90 93 e5 07 	sts	0x07E5, r25	; 0x8007e5 <pxCurrentTCB+0x1>
    3ea8:	80 93 e4 07 	sts	0x07E4, r24	; 0x8007e4 <pxCurrentTCB>
    3eac:	80 91 33 08 	lds	r24, 0x0833	; 0x800833 <uxCurrentNumberOfTasks>
    3eb0:	81 30       	cpi	r24, 0x01	; 1
    3eb2:	c9 f4       	brne	.+50     	; 0x3ee6 <prvAddNewTaskToReadyList+0x70>
    3eb4:	0e 94 3f 24 	call	0x487e	; 0x487e <prvInitialiseTaskLists>
    3eb8:	16 c0       	rjmp	.+44     	; 0x3ee6 <prvAddNewTaskToReadyList+0x70>
    3eba:	80 91 37 08 	lds	r24, 0x0837	; 0x800837 <xSchedulerRunning>
    3ebe:	88 23       	and	r24, r24
    3ec0:	91 f4       	brne	.+36     	; 0x3ee6 <prvAddNewTaskToReadyList+0x70>
    3ec2:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    3ec6:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    3eca:	fc 01       	movw	r30, r24
    3ecc:	26 89       	ldd	r18, Z+22	; 0x16
    3ece:	89 81       	ldd	r24, Y+1	; 0x01
    3ed0:	9a 81       	ldd	r25, Y+2	; 0x02
    3ed2:	fc 01       	movw	r30, r24
    3ed4:	86 89       	ldd	r24, Z+22	; 0x16
    3ed6:	82 17       	cp	r24, r18
    3ed8:	30 f0       	brcs	.+12     	; 0x3ee6 <prvAddNewTaskToReadyList+0x70>
    3eda:	89 81       	ldd	r24, Y+1	; 0x01
    3edc:	9a 81       	ldd	r25, Y+2	; 0x02
    3ede:	90 93 e5 07 	sts	0x07E5, r25	; 0x8007e5 <pxCurrentTCB+0x1>
    3ee2:	80 93 e4 07 	sts	0x07E4, r24	; 0x8007e4 <pxCurrentTCB>
    3ee6:	80 91 3b 08 	lds	r24, 0x083B	; 0x80083b <uxTaskNumber>
    3eea:	8f 5f       	subi	r24, 0xFF	; 255
    3eec:	80 93 3b 08 	sts	0x083B, r24	; 0x80083b <uxTaskNumber>
    3ef0:	20 91 3b 08 	lds	r18, 0x083B	; 0x80083b <uxTaskNumber>
    3ef4:	89 81       	ldd	r24, Y+1	; 0x01
    3ef6:	9a 81       	ldd	r25, Y+2	; 0x02
    3ef8:	fc 01       	movw	r30, r24
    3efa:	21 a3       	std	Z+33, r18	; 0x21
    3efc:	89 81       	ldd	r24, Y+1	; 0x01
    3efe:	9a 81       	ldd	r25, Y+2	; 0x02
    3f00:	fc 01       	movw	r30, r24
    3f02:	96 89       	ldd	r25, Z+22	; 0x16
    3f04:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <uxTopReadyPriority>
    3f08:	89 17       	cp	r24, r25
    3f0a:	30 f4       	brcc	.+12     	; 0x3f18 <prvAddNewTaskToReadyList+0xa2>
    3f0c:	89 81       	ldd	r24, Y+1	; 0x01
    3f0e:	9a 81       	ldd	r25, Y+2	; 0x02
    3f10:	fc 01       	movw	r30, r24
    3f12:	86 89       	ldd	r24, Z+22	; 0x16
    3f14:	80 93 36 08 	sts	0x0836, r24	; 0x800836 <uxTopReadyPriority>
    3f18:	89 81       	ldd	r24, Y+1	; 0x01
    3f1a:	9a 81       	ldd	r25, Y+2	; 0x02
    3f1c:	ac 01       	movw	r20, r24
    3f1e:	4e 5f       	subi	r20, 0xFE	; 254
    3f20:	5f 4f       	sbci	r21, 0xFF	; 255
    3f22:	89 81       	ldd	r24, Y+1	; 0x01
    3f24:	9a 81       	ldd	r25, Y+2	; 0x02
    3f26:	fc 01       	movw	r30, r24
    3f28:	86 89       	ldd	r24, Z+22	; 0x16
    3f2a:	28 2f       	mov	r18, r24
    3f2c:	30 e0       	ldi	r19, 0x00	; 0
    3f2e:	c9 01       	movw	r24, r18
    3f30:	88 0f       	add	r24, r24
    3f32:	99 1f       	adc	r25, r25
    3f34:	88 0f       	add	r24, r24
    3f36:	99 1f       	adc	r25, r25
    3f38:	88 0f       	add	r24, r24
    3f3a:	99 1f       	adc	r25, r25
    3f3c:	82 0f       	add	r24, r18
    3f3e:	93 1f       	adc	r25, r19
    3f40:	8a 51       	subi	r24, 0x1A	; 26
    3f42:	98 4f       	sbci	r25, 0xF8	; 248
    3f44:	ba 01       	movw	r22, r20
    3f46:	0e 94 64 10 	call	0x20c8	; 0x20c8 <vListInsertEnd>
    3f4a:	0f 90       	pop	r0
    3f4c:	0f be       	out	0x3f, r0	; 63
    3f4e:	80 91 37 08 	lds	r24, 0x0837	; 0x800837 <xSchedulerRunning>
    3f52:	88 23       	and	r24, r24
    3f54:	71 f0       	breq	.+28     	; 0x3f72 <prvAddNewTaskToReadyList+0xfc>
    3f56:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    3f5a:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    3f5e:	fc 01       	movw	r30, r24
    3f60:	26 89       	ldd	r18, Z+22	; 0x16
    3f62:	89 81       	ldd	r24, Y+1	; 0x01
    3f64:	9a 81       	ldd	r25, Y+2	; 0x02
    3f66:	fc 01       	movw	r30, r24
    3f68:	86 89       	ldd	r24, Z+22	; 0x16
    3f6a:	28 17       	cp	r18, r24
    3f6c:	10 f4       	brcc	.+4      	; 0x3f72 <prvAddNewTaskToReadyList+0xfc>
    3f6e:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    3f72:	00 00       	nop
    3f74:	0f 90       	pop	r0
    3f76:	0f 90       	pop	r0
    3f78:	df 91       	pop	r29
    3f7a:	cf 91       	pop	r28
    3f7c:	08 95       	ret

00003f7e <vTaskDelayUntil>:
    3f7e:	cf 93       	push	r28
    3f80:	df 93       	push	r29
    3f82:	cd b7       	in	r28, 0x3d	; 61
    3f84:	de b7       	in	r29, 0x3e	; 62
    3f86:	2a 97       	sbiw	r28, 0x0a	; 10
    3f88:	0f b6       	in	r0, 0x3f	; 63
    3f8a:	f8 94       	cli
    3f8c:	de bf       	out	0x3e, r29	; 62
    3f8e:	0f be       	out	0x3f, r0	; 63
    3f90:	cd bf       	out	0x3d, r28	; 61
    3f92:	98 87       	std	Y+8, r25	; 0x08
    3f94:	8f 83       	std	Y+7, r24	; 0x07
    3f96:	7a 87       	std	Y+10, r23	; 0x0a
    3f98:	69 87       	std	Y+9, r22	; 0x09
    3f9a:	19 82       	std	Y+1, r1	; 0x01
    3f9c:	0e 94 91 20 	call	0x4122	; 0x4122 <vTaskSuspendAll>
    3fa0:	80 91 34 08 	lds	r24, 0x0834	; 0x800834 <xTickCount>
    3fa4:	90 91 35 08 	lds	r25, 0x0835	; 0x800835 <xTickCount+0x1>
    3fa8:	9b 83       	std	Y+3, r25	; 0x03
    3faa:	8a 83       	std	Y+2, r24	; 0x02
    3fac:	8f 81       	ldd	r24, Y+7	; 0x07
    3fae:	98 85       	ldd	r25, Y+8	; 0x08
    3fb0:	fc 01       	movw	r30, r24
    3fb2:	20 81       	ld	r18, Z
    3fb4:	31 81       	ldd	r19, Z+1	; 0x01
    3fb6:	89 85       	ldd	r24, Y+9	; 0x09
    3fb8:	9a 85       	ldd	r25, Y+10	; 0x0a
    3fba:	82 0f       	add	r24, r18
    3fbc:	93 1f       	adc	r25, r19
    3fbe:	9d 83       	std	Y+5, r25	; 0x05
    3fc0:	8c 83       	std	Y+4, r24	; 0x04
    3fc2:	8f 81       	ldd	r24, Y+7	; 0x07
    3fc4:	98 85       	ldd	r25, Y+8	; 0x08
    3fc6:	fc 01       	movw	r30, r24
    3fc8:	20 81       	ld	r18, Z
    3fca:	31 81       	ldd	r19, Z+1	; 0x01
    3fcc:	8a 81       	ldd	r24, Y+2	; 0x02
    3fce:	9b 81       	ldd	r25, Y+3	; 0x03
    3fd0:	82 17       	cp	r24, r18
    3fd2:	93 07       	cpc	r25, r19
    3fd4:	a0 f4       	brcc	.+40     	; 0x3ffe <vTaskDelayUntil+0x80>
    3fd6:	8f 81       	ldd	r24, Y+7	; 0x07
    3fd8:	98 85       	ldd	r25, Y+8	; 0x08
    3fda:	fc 01       	movw	r30, r24
    3fdc:	20 81       	ld	r18, Z
    3fde:	31 81       	ldd	r19, Z+1	; 0x01
    3fe0:	8c 81       	ldd	r24, Y+4	; 0x04
    3fe2:	9d 81       	ldd	r25, Y+5	; 0x05
    3fe4:	82 17       	cp	r24, r18
    3fe6:	93 07       	cpc	r25, r19
    3fe8:	e8 f4       	brcc	.+58     	; 0x4024 <vTaskDelayUntil+0xa6>
    3fea:	2c 81       	ldd	r18, Y+4	; 0x04
    3fec:	3d 81       	ldd	r19, Y+5	; 0x05
    3fee:	8a 81       	ldd	r24, Y+2	; 0x02
    3ff0:	9b 81       	ldd	r25, Y+3	; 0x03
    3ff2:	82 17       	cp	r24, r18
    3ff4:	93 07       	cpc	r25, r19
    3ff6:	b0 f4       	brcc	.+44     	; 0x4024 <vTaskDelayUntil+0xa6>
    3ff8:	81 e0       	ldi	r24, 0x01	; 1
    3ffa:	89 83       	std	Y+1, r24	; 0x01
    3ffc:	13 c0       	rjmp	.+38     	; 0x4024 <vTaskDelayUntil+0xa6>
    3ffe:	8f 81       	ldd	r24, Y+7	; 0x07
    4000:	98 85       	ldd	r25, Y+8	; 0x08
    4002:	fc 01       	movw	r30, r24
    4004:	20 81       	ld	r18, Z
    4006:	31 81       	ldd	r19, Z+1	; 0x01
    4008:	8c 81       	ldd	r24, Y+4	; 0x04
    400a:	9d 81       	ldd	r25, Y+5	; 0x05
    400c:	82 17       	cp	r24, r18
    400e:	93 07       	cpc	r25, r19
    4010:	38 f0       	brcs	.+14     	; 0x4020 <vTaskDelayUntil+0xa2>
    4012:	2c 81       	ldd	r18, Y+4	; 0x04
    4014:	3d 81       	ldd	r19, Y+5	; 0x05
    4016:	8a 81       	ldd	r24, Y+2	; 0x02
    4018:	9b 81       	ldd	r25, Y+3	; 0x03
    401a:	82 17       	cp	r24, r18
    401c:	93 07       	cpc	r25, r19
    401e:	10 f4       	brcc	.+4      	; 0x4024 <vTaskDelayUntil+0xa6>
    4020:	81 e0       	ldi	r24, 0x01	; 1
    4022:	89 83       	std	Y+1, r24	; 0x01
    4024:	8f 81       	ldd	r24, Y+7	; 0x07
    4026:	98 85       	ldd	r25, Y+8	; 0x08
    4028:	2c 81       	ldd	r18, Y+4	; 0x04
    402a:	3d 81       	ldd	r19, Y+5	; 0x05
    402c:	fc 01       	movw	r30, r24
    402e:	31 83       	std	Z+1, r19	; 0x01
    4030:	20 83       	st	Z, r18
    4032:	89 81       	ldd	r24, Y+1	; 0x01
    4034:	88 23       	and	r24, r24
    4036:	59 f0       	breq	.+22     	; 0x404e <vTaskDelayUntil+0xd0>
    4038:	2c 81       	ldd	r18, Y+4	; 0x04
    403a:	3d 81       	ldd	r19, Y+5	; 0x05
    403c:	8a 81       	ldd	r24, Y+2	; 0x02
    403e:	9b 81       	ldd	r25, Y+3	; 0x03
    4040:	a9 01       	movw	r20, r18
    4042:	48 1b       	sub	r20, r24
    4044:	59 0b       	sbc	r21, r25
    4046:	ca 01       	movw	r24, r20
    4048:	60 e0       	ldi	r22, 0x00	; 0
    404a:	0e 94 92 26 	call	0x4d24	; 0x4d24 <prvAddCurrentTaskToDelayedList>
    404e:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    4052:	8e 83       	std	Y+6, r24	; 0x06
    4054:	8e 81       	ldd	r24, Y+6	; 0x06
    4056:	88 23       	and	r24, r24
    4058:	11 f4       	brne	.+4      	; 0x405e <vTaskDelayUntil+0xe0>
    405a:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    405e:	00 00       	nop
    4060:	2a 96       	adiw	r28, 0x0a	; 10
    4062:	0f b6       	in	r0, 0x3f	; 63
    4064:	f8 94       	cli
    4066:	de bf       	out	0x3e, r29	; 62
    4068:	0f be       	out	0x3f, r0	; 63
    406a:	cd bf       	out	0x3d, r28	; 61
    406c:	df 91       	pop	r29
    406e:	cf 91       	pop	r28
    4070:	08 95       	ret

00004072 <vTaskDelay>:
    4072:	cf 93       	push	r28
    4074:	df 93       	push	r29
    4076:	00 d0       	rcall	.+0      	; 0x4078 <vTaskDelay+0x6>
    4078:	1f 92       	push	r1
    407a:	cd b7       	in	r28, 0x3d	; 61
    407c:	de b7       	in	r29, 0x3e	; 62
    407e:	9b 83       	std	Y+3, r25	; 0x03
    4080:	8a 83       	std	Y+2, r24	; 0x02
    4082:	19 82       	std	Y+1, r1	; 0x01
    4084:	8a 81       	ldd	r24, Y+2	; 0x02
    4086:	9b 81       	ldd	r25, Y+3	; 0x03
    4088:	89 2b       	or	r24, r25
    408a:	51 f0       	breq	.+20     	; 0x40a0 <vTaskDelay+0x2e>
    408c:	0e 94 91 20 	call	0x4122	; 0x4122 <vTaskSuspendAll>
    4090:	8a 81       	ldd	r24, Y+2	; 0x02
    4092:	9b 81       	ldd	r25, Y+3	; 0x03
    4094:	60 e0       	ldi	r22, 0x00	; 0
    4096:	0e 94 92 26 	call	0x4d24	; 0x4d24 <prvAddCurrentTaskToDelayedList>
    409a:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    409e:	89 83       	std	Y+1, r24	; 0x01
    40a0:	89 81       	ldd	r24, Y+1	; 0x01
    40a2:	88 23       	and	r24, r24
    40a4:	11 f4       	brne	.+4      	; 0x40aa <vTaskDelay+0x38>
    40a6:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    40aa:	00 00       	nop
    40ac:	0f 90       	pop	r0
    40ae:	0f 90       	pop	r0
    40b0:	0f 90       	pop	r0
    40b2:	df 91       	pop	r29
    40b4:	cf 91       	pop	r28
    40b6:	08 95       	ret

000040b8 <vTaskStartScheduler>:
    40b8:	ef 92       	push	r14
    40ba:	ff 92       	push	r15
    40bc:	0f 93       	push	r16
    40be:	cf 93       	push	r28
    40c0:	df 93       	push	r29
    40c2:	1f 92       	push	r1
    40c4:	cd b7       	in	r28, 0x3d	; 61
    40c6:	de b7       	in	r29, 0x3e	; 62
    40c8:	0f 2e       	mov	r0, r31
    40ca:	fe e3       	ldi	r31, 0x3E	; 62
    40cc:	ef 2e       	mov	r14, r31
    40ce:	f8 e0       	ldi	r31, 0x08	; 8
    40d0:	ff 2e       	mov	r15, r31
    40d2:	f0 2d       	mov	r31, r0
    40d4:	00 e0       	ldi	r16, 0x00	; 0
    40d6:	20 e0       	ldi	r18, 0x00	; 0
    40d8:	30 e0       	ldi	r19, 0x00	; 0
    40da:	45 e5       	ldi	r20, 0x55	; 85
    40dc:	50 e0       	ldi	r21, 0x00	; 0
    40de:	69 e9       	ldi	r22, 0x99	; 153
    40e0:	71 e0       	ldi	r23, 0x01	; 1
    40e2:	8d e2       	ldi	r24, 0x2D	; 45
    40e4:	94 e2       	ldi	r25, 0x24	; 36
    40e6:	0e 94 e2 1d 	call	0x3bc4	; 0x3bc4 <xTaskCreate>
    40ea:	89 83       	std	Y+1, r24	; 0x01
    40ec:	89 81       	ldd	r24, Y+1	; 0x01
    40ee:	81 30       	cpi	r24, 0x01	; 1
    40f0:	81 f4       	brne	.+32     	; 0x4112 <vTaskStartScheduler+0x5a>
    40f2:	f8 94       	cli
    40f4:	8f ef       	ldi	r24, 0xFF	; 255
    40f6:	9f ef       	ldi	r25, 0xFF	; 255
    40f8:	90 93 3d 08 	sts	0x083D, r25	; 0x80083d <xNextTaskUnblockTime+0x1>
    40fc:	80 93 3c 08 	sts	0x083C, r24	; 0x80083c <xNextTaskUnblockTime>
    4100:	81 e0       	ldi	r24, 0x01	; 1
    4102:	80 93 37 08 	sts	0x0837, r24	; 0x800837 <xSchedulerRunning>
    4106:	10 92 35 08 	sts	0x0835, r1	; 0x800835 <xTickCount+0x1>
    410a:	10 92 34 08 	sts	0x0834, r1	; 0x800834 <xTickCount>
    410e:	0e 94 2b 13 	call	0x2656	; 0x2656 <xPortStartScheduler>
    4112:	00 00       	nop
    4114:	0f 90       	pop	r0
    4116:	df 91       	pop	r29
    4118:	cf 91       	pop	r28
    411a:	0f 91       	pop	r16
    411c:	ff 90       	pop	r15
    411e:	ef 90       	pop	r14
    4120:	08 95       	ret

00004122 <vTaskSuspendAll>:
    4122:	cf 93       	push	r28
    4124:	df 93       	push	r29
    4126:	cd b7       	in	r28, 0x3d	; 61
    4128:	de b7       	in	r29, 0x3e	; 62
    412a:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <uxSchedulerSuspended>
    412e:	8f 5f       	subi	r24, 0xFF	; 255
    4130:	80 93 40 08 	sts	0x0840, r24	; 0x800840 <uxSchedulerSuspended>
    4134:	00 00       	nop
    4136:	df 91       	pop	r29
    4138:	cf 91       	pop	r28
    413a:	08 95       	ret

0000413c <xTaskResumeAll>:
    413c:	cf 93       	push	r28
    413e:	df 93       	push	r29
    4140:	00 d0       	rcall	.+0      	; 0x4142 <xTaskResumeAll+0x6>
    4142:	00 d0       	rcall	.+0      	; 0x4144 <xTaskResumeAll+0x8>
    4144:	cd b7       	in	r28, 0x3d	; 61
    4146:	de b7       	in	r29, 0x3e	; 62
    4148:	1a 82       	std	Y+2, r1	; 0x02
    414a:	19 82       	std	Y+1, r1	; 0x01
    414c:	1b 82       	std	Y+3, r1	; 0x03
    414e:	0f b6       	in	r0, 0x3f	; 63
    4150:	f8 94       	cli
    4152:	0f 92       	push	r0
    4154:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <uxSchedulerSuspended>
    4158:	81 50       	subi	r24, 0x01	; 1
    415a:	80 93 40 08 	sts	0x0840, r24	; 0x800840 <uxSchedulerSuspended>
    415e:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <uxSchedulerSuspended>
    4162:	88 23       	and	r24, r24
    4164:	09 f0       	breq	.+2      	; 0x4168 <xTaskResumeAll+0x2c>
    4166:	77 c0       	rjmp	.+238    	; 0x4256 <xTaskResumeAll+0x11a>
    4168:	80 91 33 08 	lds	r24, 0x0833	; 0x800833 <uxCurrentNumberOfTasks>
    416c:	88 23       	and	r24, r24
    416e:	09 f4       	brne	.+2      	; 0x4172 <xTaskResumeAll+0x36>
    4170:	72 c0       	rjmp	.+228    	; 0x4256 <xTaskResumeAll+0x11a>
    4172:	49 c0       	rjmp	.+146    	; 0x4206 <xTaskResumeAll+0xca>
    4174:	80 91 25 08 	lds	r24, 0x0825	; 0x800825 <xPendingReadyList+0x5>
    4178:	90 91 26 08 	lds	r25, 0x0826	; 0x800826 <xPendingReadyList+0x6>
    417c:	fc 01       	movw	r30, r24
    417e:	86 81       	ldd	r24, Z+6	; 0x06
    4180:	97 81       	ldd	r25, Z+7	; 0x07
    4182:	9a 83       	std	Y+2, r25	; 0x02
    4184:	89 83       	std	Y+1, r24	; 0x01
    4186:	89 81       	ldd	r24, Y+1	; 0x01
    4188:	9a 81       	ldd	r25, Y+2	; 0x02
    418a:	0c 96       	adiw	r24, 0x0c	; 12
    418c:	0e 94 2b 11 	call	0x2256	; 0x2256 <uxListRemove>
    4190:	89 81       	ldd	r24, Y+1	; 0x01
    4192:	9a 81       	ldd	r25, Y+2	; 0x02
    4194:	02 96       	adiw	r24, 0x02	; 2
    4196:	0e 94 2b 11 	call	0x2256	; 0x2256 <uxListRemove>
    419a:	89 81       	ldd	r24, Y+1	; 0x01
    419c:	9a 81       	ldd	r25, Y+2	; 0x02
    419e:	fc 01       	movw	r30, r24
    41a0:	96 89       	ldd	r25, Z+22	; 0x16
    41a2:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <uxTopReadyPriority>
    41a6:	89 17       	cp	r24, r25
    41a8:	30 f4       	brcc	.+12     	; 0x41b6 <xTaskResumeAll+0x7a>
    41aa:	89 81       	ldd	r24, Y+1	; 0x01
    41ac:	9a 81       	ldd	r25, Y+2	; 0x02
    41ae:	fc 01       	movw	r30, r24
    41b0:	86 89       	ldd	r24, Z+22	; 0x16
    41b2:	80 93 36 08 	sts	0x0836, r24	; 0x800836 <uxTopReadyPriority>
    41b6:	89 81       	ldd	r24, Y+1	; 0x01
    41b8:	9a 81       	ldd	r25, Y+2	; 0x02
    41ba:	ac 01       	movw	r20, r24
    41bc:	4e 5f       	subi	r20, 0xFE	; 254
    41be:	5f 4f       	sbci	r21, 0xFF	; 255
    41c0:	89 81       	ldd	r24, Y+1	; 0x01
    41c2:	9a 81       	ldd	r25, Y+2	; 0x02
    41c4:	fc 01       	movw	r30, r24
    41c6:	86 89       	ldd	r24, Z+22	; 0x16
    41c8:	28 2f       	mov	r18, r24
    41ca:	30 e0       	ldi	r19, 0x00	; 0
    41cc:	c9 01       	movw	r24, r18
    41ce:	88 0f       	add	r24, r24
    41d0:	99 1f       	adc	r25, r25
    41d2:	88 0f       	add	r24, r24
    41d4:	99 1f       	adc	r25, r25
    41d6:	88 0f       	add	r24, r24
    41d8:	99 1f       	adc	r25, r25
    41da:	82 0f       	add	r24, r18
    41dc:	93 1f       	adc	r25, r19
    41de:	8a 51       	subi	r24, 0x1A	; 26
    41e0:	98 4f       	sbci	r25, 0xF8	; 248
    41e2:	ba 01       	movw	r22, r20
    41e4:	0e 94 64 10 	call	0x20c8	; 0x20c8 <vListInsertEnd>
    41e8:	89 81       	ldd	r24, Y+1	; 0x01
    41ea:	9a 81       	ldd	r25, Y+2	; 0x02
    41ec:	fc 01       	movw	r30, r24
    41ee:	26 89       	ldd	r18, Z+22	; 0x16
    41f0:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    41f4:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    41f8:	fc 01       	movw	r30, r24
    41fa:	86 89       	ldd	r24, Z+22	; 0x16
    41fc:	28 17       	cp	r18, r24
    41fe:	18 f0       	brcs	.+6      	; 0x4206 <xTaskResumeAll+0xca>
    4200:	81 e0       	ldi	r24, 0x01	; 1
    4202:	80 93 39 08 	sts	0x0839, r24	; 0x800839 <xYieldPending>
    4206:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <xPendingReadyList>
    420a:	88 23       	and	r24, r24
    420c:	09 f0       	breq	.+2      	; 0x4210 <xTaskResumeAll+0xd4>
    420e:	b2 cf       	rjmp	.-156    	; 0x4174 <xTaskResumeAll+0x38>
    4210:	89 81       	ldd	r24, Y+1	; 0x01
    4212:	9a 81       	ldd	r25, Y+2	; 0x02
    4214:	89 2b       	or	r24, r25
    4216:	11 f0       	breq	.+4      	; 0x421c <xTaskResumeAll+0xe0>
    4218:	0e 94 34 25 	call	0x4a68	; 0x4a68 <prvResetNextTaskUnblockTime>
    421c:	80 91 38 08 	lds	r24, 0x0838	; 0x800838 <uxPendedTicks>
    4220:	8c 83       	std	Y+4, r24	; 0x04
    4222:	8c 81       	ldd	r24, Y+4	; 0x04
    4224:	88 23       	and	r24, r24
    4226:	79 f0       	breq	.+30     	; 0x4246 <xTaskResumeAll+0x10a>
    4228:	0e 94 4c 21 	call	0x4298	; 0x4298 <xTaskIncrementTick>
    422c:	88 23       	and	r24, r24
    422e:	19 f0       	breq	.+6      	; 0x4236 <xTaskResumeAll+0xfa>
    4230:	81 e0       	ldi	r24, 0x01	; 1
    4232:	80 93 39 08 	sts	0x0839, r24	; 0x800839 <xYieldPending>
    4236:	8c 81       	ldd	r24, Y+4	; 0x04
    4238:	81 50       	subi	r24, 0x01	; 1
    423a:	8c 83       	std	Y+4, r24	; 0x04
    423c:	8c 81       	ldd	r24, Y+4	; 0x04
    423e:	88 23       	and	r24, r24
    4240:	99 f7       	brne	.-26     	; 0x4228 <xTaskResumeAll+0xec>
    4242:	10 92 38 08 	sts	0x0838, r1	; 0x800838 <uxPendedTicks>
    4246:	80 91 39 08 	lds	r24, 0x0839	; 0x800839 <xYieldPending>
    424a:	88 23       	and	r24, r24
    424c:	21 f0       	breq	.+8      	; 0x4256 <xTaskResumeAll+0x11a>
    424e:	81 e0       	ldi	r24, 0x01	; 1
    4250:	8b 83       	std	Y+3, r24	; 0x03
    4252:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    4256:	0f 90       	pop	r0
    4258:	0f be       	out	0x3f, r0	; 63
    425a:	8b 81       	ldd	r24, Y+3	; 0x03
    425c:	0f 90       	pop	r0
    425e:	0f 90       	pop	r0
    4260:	0f 90       	pop	r0
    4262:	0f 90       	pop	r0
    4264:	df 91       	pop	r29
    4266:	cf 91       	pop	r28
    4268:	08 95       	ret

0000426a <xTaskGetTickCount>:
    426a:	cf 93       	push	r28
    426c:	df 93       	push	r29
    426e:	00 d0       	rcall	.+0      	; 0x4270 <xTaskGetTickCount+0x6>
    4270:	cd b7       	in	r28, 0x3d	; 61
    4272:	de b7       	in	r29, 0x3e	; 62
    4274:	0f b6       	in	r0, 0x3f	; 63
    4276:	f8 94       	cli
    4278:	0f 92       	push	r0
    427a:	80 91 34 08 	lds	r24, 0x0834	; 0x800834 <xTickCount>
    427e:	90 91 35 08 	lds	r25, 0x0835	; 0x800835 <xTickCount+0x1>
    4282:	9a 83       	std	Y+2, r25	; 0x02
    4284:	89 83       	std	Y+1, r24	; 0x01
    4286:	0f 90       	pop	r0
    4288:	0f be       	out	0x3f, r0	; 63
    428a:	89 81       	ldd	r24, Y+1	; 0x01
    428c:	9a 81       	ldd	r25, Y+2	; 0x02
    428e:	0f 90       	pop	r0
    4290:	0f 90       	pop	r0
    4292:	df 91       	pop	r29
    4294:	cf 91       	pop	r28
    4296:	08 95       	ret

00004298 <xTaskIncrementTick>:
    4298:	cf 93       	push	r28
    429a:	df 93       	push	r29
    429c:	cd b7       	in	r28, 0x3d	; 61
    429e:	de b7       	in	r29, 0x3e	; 62
    42a0:	29 97       	sbiw	r28, 0x09	; 9
    42a2:	0f b6       	in	r0, 0x3f	; 63
    42a4:	f8 94       	cli
    42a6:	de bf       	out	0x3e, r29	; 62
    42a8:	0f be       	out	0x3f, r0	; 63
    42aa:	cd bf       	out	0x3d, r28	; 61
    42ac:	19 82       	std	Y+1, r1	; 0x01
    42ae:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <uxSchedulerSuspended>
    42b2:	88 23       	and	r24, r24
    42b4:	09 f0       	breq	.+2      	; 0x42b8 <xTaskIncrementTick+0x20>
    42b6:	c8 c0       	rjmp	.+400    	; 0x4448 <xTaskIncrementTick+0x1b0>
    42b8:	80 91 34 08 	lds	r24, 0x0834	; 0x800834 <xTickCount>
    42bc:	90 91 35 08 	lds	r25, 0x0835	; 0x800835 <xTickCount+0x1>
    42c0:	01 96       	adiw	r24, 0x01	; 1
    42c2:	9b 83       	std	Y+3, r25	; 0x03
    42c4:	8a 83       	std	Y+2, r24	; 0x02
    42c6:	8a 81       	ldd	r24, Y+2	; 0x02
    42c8:	9b 81       	ldd	r25, Y+3	; 0x03
    42ca:	90 93 35 08 	sts	0x0835, r25	; 0x800835 <xTickCount+0x1>
    42ce:	80 93 34 08 	sts	0x0834, r24	; 0x800834 <xTickCount>
    42d2:	8a 81       	ldd	r24, Y+2	; 0x02
    42d4:	9b 81       	ldd	r25, Y+3	; 0x03
    42d6:	89 2b       	or	r24, r25
    42d8:	d9 f4       	brne	.+54     	; 0x4310 <xTaskIncrementTick+0x78>
    42da:	80 91 1c 08 	lds	r24, 0x081C	; 0x80081c <pxDelayedTaskList>
    42de:	90 91 1d 08 	lds	r25, 0x081D	; 0x80081d <pxDelayedTaskList+0x1>
    42e2:	9d 83       	std	Y+5, r25	; 0x05
    42e4:	8c 83       	std	Y+4, r24	; 0x04
    42e6:	80 91 1e 08 	lds	r24, 0x081E	; 0x80081e <pxOverflowDelayedTaskList>
    42ea:	90 91 1f 08 	lds	r25, 0x081F	; 0x80081f <pxOverflowDelayedTaskList+0x1>
    42ee:	90 93 1d 08 	sts	0x081D, r25	; 0x80081d <pxDelayedTaskList+0x1>
    42f2:	80 93 1c 08 	sts	0x081C, r24	; 0x80081c <pxDelayedTaskList>
    42f6:	8c 81       	ldd	r24, Y+4	; 0x04
    42f8:	9d 81       	ldd	r25, Y+5	; 0x05
    42fa:	90 93 1f 08 	sts	0x081F, r25	; 0x80081f <pxOverflowDelayedTaskList+0x1>
    42fe:	80 93 1e 08 	sts	0x081E, r24	; 0x80081e <pxOverflowDelayedTaskList>
    4302:	80 91 3a 08 	lds	r24, 0x083A	; 0x80083a <xNumOfOverflows>
    4306:	8f 5f       	subi	r24, 0xFF	; 255
    4308:	80 93 3a 08 	sts	0x083A, r24	; 0x80083a <xNumOfOverflows>
    430c:	0e 94 34 25 	call	0x4a68	; 0x4a68 <prvResetNextTaskUnblockTime>
    4310:	80 91 3c 08 	lds	r24, 0x083C	; 0x80083c <xNextTaskUnblockTime>
    4314:	90 91 3d 08 	lds	r25, 0x083D	; 0x80083d <xNextTaskUnblockTime+0x1>
    4318:	2a 81       	ldd	r18, Y+2	; 0x02
    431a:	3b 81       	ldd	r19, Y+3	; 0x03
    431c:	28 17       	cp	r18, r24
    431e:	39 07       	cpc	r19, r25
    4320:	08 f4       	brcc	.+2      	; 0x4324 <xTaskIncrementTick+0x8c>
    4322:	78 c0       	rjmp	.+240    	; 0x4414 <xTaskIncrementTick+0x17c>
    4324:	80 91 1c 08 	lds	r24, 0x081C	; 0x80081c <pxDelayedTaskList>
    4328:	90 91 1d 08 	lds	r25, 0x081D	; 0x80081d <pxDelayedTaskList+0x1>
    432c:	fc 01       	movw	r30, r24
    432e:	80 81       	ld	r24, Z
    4330:	88 23       	and	r24, r24
    4332:	39 f4       	brne	.+14     	; 0x4342 <xTaskIncrementTick+0xaa>
    4334:	8f ef       	ldi	r24, 0xFF	; 255
    4336:	9f ef       	ldi	r25, 0xFF	; 255
    4338:	90 93 3d 08 	sts	0x083D, r25	; 0x80083d <xNextTaskUnblockTime+0x1>
    433c:	80 93 3c 08 	sts	0x083C, r24	; 0x80083c <xNextTaskUnblockTime>
    4340:	69 c0       	rjmp	.+210    	; 0x4414 <xTaskIncrementTick+0x17c>
    4342:	80 91 1c 08 	lds	r24, 0x081C	; 0x80081c <pxDelayedTaskList>
    4346:	90 91 1d 08 	lds	r25, 0x081D	; 0x80081d <pxDelayedTaskList+0x1>
    434a:	fc 01       	movw	r30, r24
    434c:	85 81       	ldd	r24, Z+5	; 0x05
    434e:	96 81       	ldd	r25, Z+6	; 0x06
    4350:	fc 01       	movw	r30, r24
    4352:	86 81       	ldd	r24, Z+6	; 0x06
    4354:	97 81       	ldd	r25, Z+7	; 0x07
    4356:	9f 83       	std	Y+7, r25	; 0x07
    4358:	8e 83       	std	Y+6, r24	; 0x06
    435a:	8e 81       	ldd	r24, Y+6	; 0x06
    435c:	9f 81       	ldd	r25, Y+7	; 0x07
    435e:	fc 01       	movw	r30, r24
    4360:	82 81       	ldd	r24, Z+2	; 0x02
    4362:	93 81       	ldd	r25, Z+3	; 0x03
    4364:	99 87       	std	Y+9, r25	; 0x09
    4366:	88 87       	std	Y+8, r24	; 0x08
    4368:	2a 81       	ldd	r18, Y+2	; 0x02
    436a:	3b 81       	ldd	r19, Y+3	; 0x03
    436c:	88 85       	ldd	r24, Y+8	; 0x08
    436e:	99 85       	ldd	r25, Y+9	; 0x09
    4370:	28 17       	cp	r18, r24
    4372:	39 07       	cpc	r19, r25
    4374:	38 f4       	brcc	.+14     	; 0x4384 <xTaskIncrementTick+0xec>
    4376:	88 85       	ldd	r24, Y+8	; 0x08
    4378:	99 85       	ldd	r25, Y+9	; 0x09
    437a:	90 93 3d 08 	sts	0x083D, r25	; 0x80083d <xNextTaskUnblockTime+0x1>
    437e:	80 93 3c 08 	sts	0x083C, r24	; 0x80083c <xNextTaskUnblockTime>
    4382:	48 c0       	rjmp	.+144    	; 0x4414 <xTaskIncrementTick+0x17c>
    4384:	8e 81       	ldd	r24, Y+6	; 0x06
    4386:	9f 81       	ldd	r25, Y+7	; 0x07
    4388:	02 96       	adiw	r24, 0x02	; 2
    438a:	0e 94 2b 11 	call	0x2256	; 0x2256 <uxListRemove>
    438e:	8e 81       	ldd	r24, Y+6	; 0x06
    4390:	9f 81       	ldd	r25, Y+7	; 0x07
    4392:	fc 01       	movw	r30, r24
    4394:	84 89       	ldd	r24, Z+20	; 0x14
    4396:	95 89       	ldd	r25, Z+21	; 0x15
    4398:	89 2b       	or	r24, r25
    439a:	29 f0       	breq	.+10     	; 0x43a6 <xTaskIncrementTick+0x10e>
    439c:	8e 81       	ldd	r24, Y+6	; 0x06
    439e:	9f 81       	ldd	r25, Y+7	; 0x07
    43a0:	0c 96       	adiw	r24, 0x0c	; 12
    43a2:	0e 94 2b 11 	call	0x2256	; 0x2256 <uxListRemove>
    43a6:	8e 81       	ldd	r24, Y+6	; 0x06
    43a8:	9f 81       	ldd	r25, Y+7	; 0x07
    43aa:	fc 01       	movw	r30, r24
    43ac:	96 89       	ldd	r25, Z+22	; 0x16
    43ae:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <uxTopReadyPriority>
    43b2:	89 17       	cp	r24, r25
    43b4:	30 f4       	brcc	.+12     	; 0x43c2 <xTaskIncrementTick+0x12a>
    43b6:	8e 81       	ldd	r24, Y+6	; 0x06
    43b8:	9f 81       	ldd	r25, Y+7	; 0x07
    43ba:	fc 01       	movw	r30, r24
    43bc:	86 89       	ldd	r24, Z+22	; 0x16
    43be:	80 93 36 08 	sts	0x0836, r24	; 0x800836 <uxTopReadyPriority>
    43c2:	8e 81       	ldd	r24, Y+6	; 0x06
    43c4:	9f 81       	ldd	r25, Y+7	; 0x07
    43c6:	ac 01       	movw	r20, r24
    43c8:	4e 5f       	subi	r20, 0xFE	; 254
    43ca:	5f 4f       	sbci	r21, 0xFF	; 255
    43cc:	8e 81       	ldd	r24, Y+6	; 0x06
    43ce:	9f 81       	ldd	r25, Y+7	; 0x07
    43d0:	fc 01       	movw	r30, r24
    43d2:	86 89       	ldd	r24, Z+22	; 0x16
    43d4:	28 2f       	mov	r18, r24
    43d6:	30 e0       	ldi	r19, 0x00	; 0
    43d8:	c9 01       	movw	r24, r18
    43da:	88 0f       	add	r24, r24
    43dc:	99 1f       	adc	r25, r25
    43de:	88 0f       	add	r24, r24
    43e0:	99 1f       	adc	r25, r25
    43e2:	88 0f       	add	r24, r24
    43e4:	99 1f       	adc	r25, r25
    43e6:	82 0f       	add	r24, r18
    43e8:	93 1f       	adc	r25, r19
    43ea:	8a 51       	subi	r24, 0x1A	; 26
    43ec:	98 4f       	sbci	r25, 0xF8	; 248
    43ee:	ba 01       	movw	r22, r20
    43f0:	0e 94 64 10 	call	0x20c8	; 0x20c8 <vListInsertEnd>
    43f4:	8e 81       	ldd	r24, Y+6	; 0x06
    43f6:	9f 81       	ldd	r25, Y+7	; 0x07
    43f8:	fc 01       	movw	r30, r24
    43fa:	26 89       	ldd	r18, Z+22	; 0x16
    43fc:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4400:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4404:	fc 01       	movw	r30, r24
    4406:	86 89       	ldd	r24, Z+22	; 0x16
    4408:	28 17       	cp	r18, r24
    440a:	08 f4       	brcc	.+2      	; 0x440e <xTaskIncrementTick+0x176>
    440c:	8b cf       	rjmp	.-234    	; 0x4324 <xTaskIncrementTick+0x8c>
    440e:	81 e0       	ldi	r24, 0x01	; 1
    4410:	89 83       	std	Y+1, r24	; 0x01
    4412:	88 cf       	rjmp	.-240    	; 0x4324 <xTaskIncrementTick+0x8c>
    4414:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4418:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    441c:	fc 01       	movw	r30, r24
    441e:	86 89       	ldd	r24, Z+22	; 0x16
    4420:	28 2f       	mov	r18, r24
    4422:	30 e0       	ldi	r19, 0x00	; 0
    4424:	c9 01       	movw	r24, r18
    4426:	88 0f       	add	r24, r24
    4428:	99 1f       	adc	r25, r25
    442a:	88 0f       	add	r24, r24
    442c:	99 1f       	adc	r25, r25
    442e:	88 0f       	add	r24, r24
    4430:	99 1f       	adc	r25, r25
    4432:	82 0f       	add	r24, r18
    4434:	93 1f       	adc	r25, r19
    4436:	8a 51       	subi	r24, 0x1A	; 26
    4438:	98 4f       	sbci	r25, 0xF8	; 248
    443a:	fc 01       	movw	r30, r24
    443c:	80 81       	ld	r24, Z
    443e:	82 30       	cpi	r24, 0x02	; 2
    4440:	40 f0       	brcs	.+16     	; 0x4452 <xTaskIncrementTick+0x1ba>
    4442:	81 e0       	ldi	r24, 0x01	; 1
    4444:	89 83       	std	Y+1, r24	; 0x01
    4446:	05 c0       	rjmp	.+10     	; 0x4452 <xTaskIncrementTick+0x1ba>
    4448:	80 91 38 08 	lds	r24, 0x0838	; 0x800838 <uxPendedTicks>
    444c:	8f 5f       	subi	r24, 0xFF	; 255
    444e:	80 93 38 08 	sts	0x0838, r24	; 0x800838 <uxPendedTicks>
    4452:	80 91 39 08 	lds	r24, 0x0839	; 0x800839 <xYieldPending>
    4456:	88 23       	and	r24, r24
    4458:	11 f0       	breq	.+4      	; 0x445e <xTaskIncrementTick+0x1c6>
    445a:	81 e0       	ldi	r24, 0x01	; 1
    445c:	89 83       	std	Y+1, r24	; 0x01
    445e:	89 81       	ldd	r24, Y+1	; 0x01
    4460:	29 96       	adiw	r28, 0x09	; 9
    4462:	0f b6       	in	r0, 0x3f	; 63
    4464:	f8 94       	cli
    4466:	de bf       	out	0x3e, r29	; 62
    4468:	0f be       	out	0x3f, r0	; 63
    446a:	cd bf       	out	0x3d, r28	; 61
    446c:	df 91       	pop	r29
    446e:	cf 91       	pop	r28
    4470:	08 95       	ret

00004472 <vTaskSetApplicationTaskTag>:
    4472:	cf 93       	push	r28
    4474:	df 93       	push	r29
    4476:	00 d0       	rcall	.+0      	; 0x4478 <vTaskSetApplicationTaskTag+0x6>
    4478:	00 d0       	rcall	.+0      	; 0x447a <vTaskSetApplicationTaskTag+0x8>
    447a:	00 d0       	rcall	.+0      	; 0x447c <vTaskSetApplicationTaskTag+0xa>
    447c:	cd b7       	in	r28, 0x3d	; 61
    447e:	de b7       	in	r29, 0x3e	; 62
    4480:	9c 83       	std	Y+4, r25	; 0x04
    4482:	8b 83       	std	Y+3, r24	; 0x03
    4484:	7e 83       	std	Y+6, r23	; 0x06
    4486:	6d 83       	std	Y+5, r22	; 0x05
    4488:	8b 81       	ldd	r24, Y+3	; 0x03
    448a:	9c 81       	ldd	r25, Y+4	; 0x04
    448c:	89 2b       	or	r24, r25
    448e:	39 f4       	brne	.+14     	; 0x449e <vTaskSetApplicationTaskTag+0x2c>
    4490:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4494:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4498:	9a 83       	std	Y+2, r25	; 0x02
    449a:	89 83       	std	Y+1, r24	; 0x01
    449c:	04 c0       	rjmp	.+8      	; 0x44a6 <vTaskSetApplicationTaskTag+0x34>
    449e:	8b 81       	ldd	r24, Y+3	; 0x03
    44a0:	9c 81       	ldd	r25, Y+4	; 0x04
    44a2:	9a 83       	std	Y+2, r25	; 0x02
    44a4:	89 83       	std	Y+1, r24	; 0x01
    44a6:	0f b6       	in	r0, 0x3f	; 63
    44a8:	f8 94       	cli
    44aa:	0f 92       	push	r0
    44ac:	89 81       	ldd	r24, Y+1	; 0x01
    44ae:	9a 81       	ldd	r25, Y+2	; 0x02
    44b0:	2d 81       	ldd	r18, Y+5	; 0x05
    44b2:	3e 81       	ldd	r19, Y+6	; 0x06
    44b4:	fc 01       	movw	r30, r24
    44b6:	36 a3       	std	Z+38, r19	; 0x26
    44b8:	25 a3       	std	Z+37, r18	; 0x25
    44ba:	0f 90       	pop	r0
    44bc:	0f be       	out	0x3f, r0	; 63
    44be:	00 00       	nop
    44c0:	26 96       	adiw	r28, 0x06	; 6
    44c2:	0f b6       	in	r0, 0x3f	; 63
    44c4:	f8 94       	cli
    44c6:	de bf       	out	0x3e, r29	; 62
    44c8:	0f be       	out	0x3f, r0	; 63
    44ca:	cd bf       	out	0x3d, r28	; 61
    44cc:	df 91       	pop	r29
    44ce:	cf 91       	pop	r28
    44d0:	08 95       	ret

000044d2 <vTaskSwitchContext>:
    44d2:	cf 93       	push	r28
    44d4:	df 93       	push	r29
    44d6:	00 d0       	rcall	.+0      	; 0x44d8 <vTaskSwitchContext+0x6>
    44d8:	1f 92       	push	r1
    44da:	cd b7       	in	r28, 0x3d	; 61
    44dc:	de b7       	in	r29, 0x3e	; 62
    44de:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <uxSchedulerSuspended>
    44e2:	88 23       	and	r24, r24
    44e4:	21 f0       	breq	.+8      	; 0x44ee <vTaskSwitchContext+0x1c>
    44e6:	81 e0       	ldi	r24, 0x01	; 1
    44e8:	80 93 39 08 	sts	0x0839, r24	; 0x800839 <xYieldPending>
    44ec:	90 c0       	rjmp	.+288    	; 0x460e <vTaskSwitchContext+0x13c>
    44ee:	10 92 39 08 	sts	0x0839, r1	; 0x800839 <xYieldPending>
    44f2:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    44f6:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    44fa:	fc 01       	movw	r30, r24
    44fc:	85 a1       	ldd	r24, Z+37	; 0x25
    44fe:	96 a1       	ldd	r25, Z+38	; 0x26
    4500:	0e 94 64 0f 	call	0x1ec8	; 0x1ec8 <switch_out>
    4504:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4508:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    450c:	fc 01       	movw	r30, r24
    450e:	20 81       	ld	r18, Z
    4510:	31 81       	ldd	r19, Z+1	; 0x01
    4512:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4516:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    451a:	fc 01       	movw	r30, r24
    451c:	87 89       	ldd	r24, Z+23	; 0x17
    451e:	90 8d       	ldd	r25, Z+24	; 0x18
    4520:	82 17       	cp	r24, r18
    4522:	93 07       	cpc	r25, r19
    4524:	70 f0       	brcs	.+28     	; 0x4542 <vTaskSwitchContext+0x70>
    4526:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    452a:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    452e:	9c 01       	movw	r18, r24
    4530:	27 5e       	subi	r18, 0xE7	; 231
    4532:	3f 4f       	sbci	r19, 0xFF	; 255
    4534:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4538:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    453c:	b9 01       	movw	r22, r18
    453e:	0e 94 74 08 	call	0x10e8	; 0x10e8 <vApplicationStackOverflowHook>
    4542:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <uxTopReadyPriority>
    4546:	89 83       	std	Y+1, r24	; 0x01
    4548:	03 c0       	rjmp	.+6      	; 0x4550 <vTaskSwitchContext+0x7e>
    454a:	89 81       	ldd	r24, Y+1	; 0x01
    454c:	81 50       	subi	r24, 0x01	; 1
    454e:	89 83       	std	Y+1, r24	; 0x01
    4550:	89 81       	ldd	r24, Y+1	; 0x01
    4552:	28 2f       	mov	r18, r24
    4554:	30 e0       	ldi	r19, 0x00	; 0
    4556:	c9 01       	movw	r24, r18
    4558:	88 0f       	add	r24, r24
    455a:	99 1f       	adc	r25, r25
    455c:	88 0f       	add	r24, r24
    455e:	99 1f       	adc	r25, r25
    4560:	88 0f       	add	r24, r24
    4562:	99 1f       	adc	r25, r25
    4564:	82 0f       	add	r24, r18
    4566:	93 1f       	adc	r25, r19
    4568:	8a 51       	subi	r24, 0x1A	; 26
    456a:	98 4f       	sbci	r25, 0xF8	; 248
    456c:	fc 01       	movw	r30, r24
    456e:	80 81       	ld	r24, Z
    4570:	88 23       	and	r24, r24
    4572:	59 f3       	breq	.-42     	; 0x454a <vTaskSwitchContext+0x78>
    4574:	89 81       	ldd	r24, Y+1	; 0x01
    4576:	28 2f       	mov	r18, r24
    4578:	30 e0       	ldi	r19, 0x00	; 0
    457a:	c9 01       	movw	r24, r18
    457c:	88 0f       	add	r24, r24
    457e:	99 1f       	adc	r25, r25
    4580:	88 0f       	add	r24, r24
    4582:	99 1f       	adc	r25, r25
    4584:	88 0f       	add	r24, r24
    4586:	99 1f       	adc	r25, r25
    4588:	82 0f       	add	r24, r18
    458a:	93 1f       	adc	r25, r19
    458c:	8a 51       	subi	r24, 0x1A	; 26
    458e:	98 4f       	sbci	r25, 0xF8	; 248
    4590:	9b 83       	std	Y+3, r25	; 0x03
    4592:	8a 83       	std	Y+2, r24	; 0x02
    4594:	8a 81       	ldd	r24, Y+2	; 0x02
    4596:	9b 81       	ldd	r25, Y+3	; 0x03
    4598:	fc 01       	movw	r30, r24
    459a:	81 81       	ldd	r24, Z+1	; 0x01
    459c:	92 81       	ldd	r25, Z+2	; 0x02
    459e:	fc 01       	movw	r30, r24
    45a0:	22 81       	ldd	r18, Z+2	; 0x02
    45a2:	33 81       	ldd	r19, Z+3	; 0x03
    45a4:	8a 81       	ldd	r24, Y+2	; 0x02
    45a6:	9b 81       	ldd	r25, Y+3	; 0x03
    45a8:	fc 01       	movw	r30, r24
    45aa:	32 83       	std	Z+2, r19	; 0x02
    45ac:	21 83       	std	Z+1, r18	; 0x01
    45ae:	8a 81       	ldd	r24, Y+2	; 0x02
    45b0:	9b 81       	ldd	r25, Y+3	; 0x03
    45b2:	fc 01       	movw	r30, r24
    45b4:	21 81       	ldd	r18, Z+1	; 0x01
    45b6:	32 81       	ldd	r19, Z+2	; 0x02
    45b8:	8a 81       	ldd	r24, Y+2	; 0x02
    45ba:	9b 81       	ldd	r25, Y+3	; 0x03
    45bc:	03 96       	adiw	r24, 0x03	; 3
    45be:	28 17       	cp	r18, r24
    45c0:	39 07       	cpc	r19, r25
    45c2:	69 f4       	brne	.+26     	; 0x45de <vTaskSwitchContext+0x10c>
    45c4:	8a 81       	ldd	r24, Y+2	; 0x02
    45c6:	9b 81       	ldd	r25, Y+3	; 0x03
    45c8:	fc 01       	movw	r30, r24
    45ca:	81 81       	ldd	r24, Z+1	; 0x01
    45cc:	92 81       	ldd	r25, Z+2	; 0x02
    45ce:	fc 01       	movw	r30, r24
    45d0:	22 81       	ldd	r18, Z+2	; 0x02
    45d2:	33 81       	ldd	r19, Z+3	; 0x03
    45d4:	8a 81       	ldd	r24, Y+2	; 0x02
    45d6:	9b 81       	ldd	r25, Y+3	; 0x03
    45d8:	fc 01       	movw	r30, r24
    45da:	32 83       	std	Z+2, r19	; 0x02
    45dc:	21 83       	std	Z+1, r18	; 0x01
    45de:	8a 81       	ldd	r24, Y+2	; 0x02
    45e0:	9b 81       	ldd	r25, Y+3	; 0x03
    45e2:	fc 01       	movw	r30, r24
    45e4:	81 81       	ldd	r24, Z+1	; 0x01
    45e6:	92 81       	ldd	r25, Z+2	; 0x02
    45e8:	fc 01       	movw	r30, r24
    45ea:	86 81       	ldd	r24, Z+6	; 0x06
    45ec:	97 81       	ldd	r25, Z+7	; 0x07
    45ee:	90 93 e5 07 	sts	0x07E5, r25	; 0x8007e5 <pxCurrentTCB+0x1>
    45f2:	80 93 e4 07 	sts	0x07E4, r24	; 0x8007e4 <pxCurrentTCB>
    45f6:	89 81       	ldd	r24, Y+1	; 0x01
    45f8:	80 93 36 08 	sts	0x0836, r24	; 0x800836 <uxTopReadyPriority>
    45fc:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4600:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4604:	fc 01       	movw	r30, r24
    4606:	85 a1       	ldd	r24, Z+37	; 0x25
    4608:	96 a1       	ldd	r25, Z+38	; 0x26
    460a:	0e 94 3f 0f 	call	0x1e7e	; 0x1e7e <switch_in>
    460e:	00 00       	nop
    4610:	0f 90       	pop	r0
    4612:	0f 90       	pop	r0
    4614:	0f 90       	pop	r0
    4616:	df 91       	pop	r29
    4618:	cf 91       	pop	r28
    461a:	08 95       	ret

0000461c <vTaskPlaceOnEventList>:
    461c:	cf 93       	push	r28
    461e:	df 93       	push	r29
    4620:	00 d0       	rcall	.+0      	; 0x4622 <vTaskPlaceOnEventList+0x6>
    4622:	00 d0       	rcall	.+0      	; 0x4624 <vTaskPlaceOnEventList+0x8>
    4624:	cd b7       	in	r28, 0x3d	; 61
    4626:	de b7       	in	r29, 0x3e	; 62
    4628:	9a 83       	std	Y+2, r25	; 0x02
    462a:	89 83       	std	Y+1, r24	; 0x01
    462c:	7c 83       	std	Y+4, r23	; 0x04
    462e:	6b 83       	std	Y+3, r22	; 0x03
    4630:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4634:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4638:	9c 01       	movw	r18, r24
    463a:	24 5f       	subi	r18, 0xF4	; 244
    463c:	3f 4f       	sbci	r19, 0xFF	; 255
    463e:	89 81       	ldd	r24, Y+1	; 0x01
    4640:	9a 81       	ldd	r25, Y+2	; 0x02
    4642:	b9 01       	movw	r22, r18
    4644:	0e 94 b3 10 	call	0x2166	; 0x2166 <vListInsert>
    4648:	8b 81       	ldd	r24, Y+3	; 0x03
    464a:	9c 81       	ldd	r25, Y+4	; 0x04
    464c:	61 e0       	ldi	r22, 0x01	; 1
    464e:	0e 94 92 26 	call	0x4d24	; 0x4d24 <prvAddCurrentTaskToDelayedList>
    4652:	00 00       	nop
    4654:	0f 90       	pop	r0
    4656:	0f 90       	pop	r0
    4658:	0f 90       	pop	r0
    465a:	0f 90       	pop	r0
    465c:	df 91       	pop	r29
    465e:	cf 91       	pop	r28
    4660:	08 95       	ret

00004662 <xTaskRemoveFromEventList>:
    4662:	cf 93       	push	r28
    4664:	df 93       	push	r29
    4666:	00 d0       	rcall	.+0      	; 0x4668 <xTaskRemoveFromEventList+0x6>
    4668:	00 d0       	rcall	.+0      	; 0x466a <xTaskRemoveFromEventList+0x8>
    466a:	1f 92       	push	r1
    466c:	cd b7       	in	r28, 0x3d	; 61
    466e:	de b7       	in	r29, 0x3e	; 62
    4670:	9d 83       	std	Y+5, r25	; 0x05
    4672:	8c 83       	std	Y+4, r24	; 0x04
    4674:	8c 81       	ldd	r24, Y+4	; 0x04
    4676:	9d 81       	ldd	r25, Y+5	; 0x05
    4678:	fc 01       	movw	r30, r24
    467a:	85 81       	ldd	r24, Z+5	; 0x05
    467c:	96 81       	ldd	r25, Z+6	; 0x06
    467e:	fc 01       	movw	r30, r24
    4680:	86 81       	ldd	r24, Z+6	; 0x06
    4682:	97 81       	ldd	r25, Z+7	; 0x07
    4684:	9b 83       	std	Y+3, r25	; 0x03
    4686:	8a 83       	std	Y+2, r24	; 0x02
    4688:	8a 81       	ldd	r24, Y+2	; 0x02
    468a:	9b 81       	ldd	r25, Y+3	; 0x03
    468c:	0c 96       	adiw	r24, 0x0c	; 12
    468e:	0e 94 2b 11 	call	0x2256	; 0x2256 <uxListRemove>
    4692:	80 91 40 08 	lds	r24, 0x0840	; 0x800840 <uxSchedulerSuspended>
    4696:	88 23       	and	r24, r24
    4698:	69 f5       	brne	.+90     	; 0x46f4 <xTaskRemoveFromEventList+0x92>
    469a:	8a 81       	ldd	r24, Y+2	; 0x02
    469c:	9b 81       	ldd	r25, Y+3	; 0x03
    469e:	02 96       	adiw	r24, 0x02	; 2
    46a0:	0e 94 2b 11 	call	0x2256	; 0x2256 <uxListRemove>
    46a4:	8a 81       	ldd	r24, Y+2	; 0x02
    46a6:	9b 81       	ldd	r25, Y+3	; 0x03
    46a8:	fc 01       	movw	r30, r24
    46aa:	96 89       	ldd	r25, Z+22	; 0x16
    46ac:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <uxTopReadyPriority>
    46b0:	89 17       	cp	r24, r25
    46b2:	30 f4       	brcc	.+12     	; 0x46c0 <xTaskRemoveFromEventList+0x5e>
    46b4:	8a 81       	ldd	r24, Y+2	; 0x02
    46b6:	9b 81       	ldd	r25, Y+3	; 0x03
    46b8:	fc 01       	movw	r30, r24
    46ba:	86 89       	ldd	r24, Z+22	; 0x16
    46bc:	80 93 36 08 	sts	0x0836, r24	; 0x800836 <uxTopReadyPriority>
    46c0:	8a 81       	ldd	r24, Y+2	; 0x02
    46c2:	9b 81       	ldd	r25, Y+3	; 0x03
    46c4:	ac 01       	movw	r20, r24
    46c6:	4e 5f       	subi	r20, 0xFE	; 254
    46c8:	5f 4f       	sbci	r21, 0xFF	; 255
    46ca:	8a 81       	ldd	r24, Y+2	; 0x02
    46cc:	9b 81       	ldd	r25, Y+3	; 0x03
    46ce:	fc 01       	movw	r30, r24
    46d0:	86 89       	ldd	r24, Z+22	; 0x16
    46d2:	28 2f       	mov	r18, r24
    46d4:	30 e0       	ldi	r19, 0x00	; 0
    46d6:	c9 01       	movw	r24, r18
    46d8:	88 0f       	add	r24, r24
    46da:	99 1f       	adc	r25, r25
    46dc:	88 0f       	add	r24, r24
    46de:	99 1f       	adc	r25, r25
    46e0:	88 0f       	add	r24, r24
    46e2:	99 1f       	adc	r25, r25
    46e4:	82 0f       	add	r24, r18
    46e6:	93 1f       	adc	r25, r19
    46e8:	8a 51       	subi	r24, 0x1A	; 26
    46ea:	98 4f       	sbci	r25, 0xF8	; 248
    46ec:	ba 01       	movw	r22, r20
    46ee:	0e 94 64 10 	call	0x20c8	; 0x20c8 <vListInsertEnd>
    46f2:	08 c0       	rjmp	.+16     	; 0x4704 <xTaskRemoveFromEventList+0xa2>
    46f4:	8a 81       	ldd	r24, Y+2	; 0x02
    46f6:	9b 81       	ldd	r25, Y+3	; 0x03
    46f8:	0c 96       	adiw	r24, 0x0c	; 12
    46fa:	bc 01       	movw	r22, r24
    46fc:	80 e2       	ldi	r24, 0x20	; 32
    46fe:	98 e0       	ldi	r25, 0x08	; 8
    4700:	0e 94 64 10 	call	0x20c8	; 0x20c8 <vListInsertEnd>
    4704:	8a 81       	ldd	r24, Y+2	; 0x02
    4706:	9b 81       	ldd	r25, Y+3	; 0x03
    4708:	fc 01       	movw	r30, r24
    470a:	26 89       	ldd	r18, Z+22	; 0x16
    470c:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4710:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4714:	fc 01       	movw	r30, r24
    4716:	86 89       	ldd	r24, Z+22	; 0x16
    4718:	82 17       	cp	r24, r18
    471a:	30 f4       	brcc	.+12     	; 0x4728 <xTaskRemoveFromEventList+0xc6>
    471c:	81 e0       	ldi	r24, 0x01	; 1
    471e:	89 83       	std	Y+1, r24	; 0x01
    4720:	81 e0       	ldi	r24, 0x01	; 1
    4722:	80 93 39 08 	sts	0x0839, r24	; 0x800839 <xYieldPending>
    4726:	01 c0       	rjmp	.+2      	; 0x472a <xTaskRemoveFromEventList+0xc8>
    4728:	19 82       	std	Y+1, r1	; 0x01
    472a:	89 81       	ldd	r24, Y+1	; 0x01
    472c:	0f 90       	pop	r0
    472e:	0f 90       	pop	r0
    4730:	0f 90       	pop	r0
    4732:	0f 90       	pop	r0
    4734:	0f 90       	pop	r0
    4736:	df 91       	pop	r29
    4738:	cf 91       	pop	r28
    473a:	08 95       	ret

0000473c <vTaskSetTimeOutState>:
    473c:	cf 93       	push	r28
    473e:	df 93       	push	r29
    4740:	00 d0       	rcall	.+0      	; 0x4742 <vTaskSetTimeOutState+0x6>
    4742:	cd b7       	in	r28, 0x3d	; 61
    4744:	de b7       	in	r29, 0x3e	; 62
    4746:	9a 83       	std	Y+2, r25	; 0x02
    4748:	89 83       	std	Y+1, r24	; 0x01
    474a:	20 91 3a 08 	lds	r18, 0x083A	; 0x80083a <xNumOfOverflows>
    474e:	89 81       	ldd	r24, Y+1	; 0x01
    4750:	9a 81       	ldd	r25, Y+2	; 0x02
    4752:	fc 01       	movw	r30, r24
    4754:	20 83       	st	Z, r18
    4756:	20 91 34 08 	lds	r18, 0x0834	; 0x800834 <xTickCount>
    475a:	30 91 35 08 	lds	r19, 0x0835	; 0x800835 <xTickCount+0x1>
    475e:	89 81       	ldd	r24, Y+1	; 0x01
    4760:	9a 81       	ldd	r25, Y+2	; 0x02
    4762:	fc 01       	movw	r30, r24
    4764:	32 83       	std	Z+2, r19	; 0x02
    4766:	21 83       	std	Z+1, r18	; 0x01
    4768:	00 00       	nop
    476a:	0f 90       	pop	r0
    476c:	0f 90       	pop	r0
    476e:	df 91       	pop	r29
    4770:	cf 91       	pop	r28
    4772:	08 95       	ret

00004774 <xTaskCheckForTimeOut>:
    4774:	cf 93       	push	r28
    4776:	df 93       	push	r29
    4778:	cd b7       	in	r28, 0x3d	; 61
    477a:	de b7       	in	r29, 0x3e	; 62
    477c:	27 97       	sbiw	r28, 0x07	; 7
    477e:	0f b6       	in	r0, 0x3f	; 63
    4780:	f8 94       	cli
    4782:	de bf       	out	0x3e, r29	; 62
    4784:	0f be       	out	0x3f, r0	; 63
    4786:	cd bf       	out	0x3d, r28	; 61
    4788:	9d 83       	std	Y+5, r25	; 0x05
    478a:	8c 83       	std	Y+4, r24	; 0x04
    478c:	7f 83       	std	Y+7, r23	; 0x07
    478e:	6e 83       	std	Y+6, r22	; 0x06
    4790:	0f b6       	in	r0, 0x3f	; 63
    4792:	f8 94       	cli
    4794:	0f 92       	push	r0
    4796:	80 91 34 08 	lds	r24, 0x0834	; 0x800834 <xTickCount>
    479a:	90 91 35 08 	lds	r25, 0x0835	; 0x800835 <xTickCount+0x1>
    479e:	9b 83       	std	Y+3, r25	; 0x03
    47a0:	8a 83       	std	Y+2, r24	; 0x02
    47a2:	8c 81       	ldd	r24, Y+4	; 0x04
    47a4:	9d 81       	ldd	r25, Y+5	; 0x05
    47a6:	fc 01       	movw	r30, r24
    47a8:	90 81       	ld	r25, Z
    47aa:	80 91 3a 08 	lds	r24, 0x083A	; 0x80083a <xNumOfOverflows>
    47ae:	98 17       	cp	r25, r24
    47b0:	69 f0       	breq	.+26     	; 0x47cc <xTaskCheckForTimeOut+0x58>
    47b2:	8c 81       	ldd	r24, Y+4	; 0x04
    47b4:	9d 81       	ldd	r25, Y+5	; 0x05
    47b6:	fc 01       	movw	r30, r24
    47b8:	21 81       	ldd	r18, Z+1	; 0x01
    47ba:	32 81       	ldd	r19, Z+2	; 0x02
    47bc:	8a 81       	ldd	r24, Y+2	; 0x02
    47be:	9b 81       	ldd	r25, Y+3	; 0x03
    47c0:	82 17       	cp	r24, r18
    47c2:	93 07       	cpc	r25, r19
    47c4:	18 f0       	brcs	.+6      	; 0x47cc <xTaskCheckForTimeOut+0x58>
    47c6:	81 e0       	ldi	r24, 0x01	; 1
    47c8:	89 83       	std	Y+1, r24	; 0x01
    47ca:	30 c0       	rjmp	.+96     	; 0x482c <xTaskCheckForTimeOut+0xb8>
    47cc:	8c 81       	ldd	r24, Y+4	; 0x04
    47ce:	9d 81       	ldd	r25, Y+5	; 0x05
    47d0:	fc 01       	movw	r30, r24
    47d2:	81 81       	ldd	r24, Z+1	; 0x01
    47d4:	92 81       	ldd	r25, Z+2	; 0x02
    47d6:	2a 81       	ldd	r18, Y+2	; 0x02
    47d8:	3b 81       	ldd	r19, Y+3	; 0x03
    47da:	28 1b       	sub	r18, r24
    47dc:	39 0b       	sbc	r19, r25
    47de:	8e 81       	ldd	r24, Y+6	; 0x06
    47e0:	9f 81       	ldd	r25, Y+7	; 0x07
    47e2:	fc 01       	movw	r30, r24
    47e4:	80 81       	ld	r24, Z
    47e6:	91 81       	ldd	r25, Z+1	; 0x01
    47e8:	28 17       	cp	r18, r24
    47ea:	39 07       	cpc	r19, r25
    47ec:	e8 f4       	brcc	.+58     	; 0x4828 <xTaskCheckForTimeOut+0xb4>
    47ee:	8e 81       	ldd	r24, Y+6	; 0x06
    47f0:	9f 81       	ldd	r25, Y+7	; 0x07
    47f2:	fc 01       	movw	r30, r24
    47f4:	20 81       	ld	r18, Z
    47f6:	31 81       	ldd	r19, Z+1	; 0x01
    47f8:	8c 81       	ldd	r24, Y+4	; 0x04
    47fa:	9d 81       	ldd	r25, Y+5	; 0x05
    47fc:	fc 01       	movw	r30, r24
    47fe:	41 81       	ldd	r20, Z+1	; 0x01
    4800:	52 81       	ldd	r21, Z+2	; 0x02
    4802:	8a 81       	ldd	r24, Y+2	; 0x02
    4804:	9b 81       	ldd	r25, Y+3	; 0x03
    4806:	ba 01       	movw	r22, r20
    4808:	68 1b       	sub	r22, r24
    480a:	79 0b       	sbc	r23, r25
    480c:	cb 01       	movw	r24, r22
    480e:	28 0f       	add	r18, r24
    4810:	39 1f       	adc	r19, r25
    4812:	8e 81       	ldd	r24, Y+6	; 0x06
    4814:	9f 81       	ldd	r25, Y+7	; 0x07
    4816:	fc 01       	movw	r30, r24
    4818:	31 83       	std	Z+1, r19	; 0x01
    481a:	20 83       	st	Z, r18
    481c:	8c 81       	ldd	r24, Y+4	; 0x04
    481e:	9d 81       	ldd	r25, Y+5	; 0x05
    4820:	0e 94 9e 23 	call	0x473c	; 0x473c <vTaskSetTimeOutState>
    4824:	19 82       	std	Y+1, r1	; 0x01
    4826:	02 c0       	rjmp	.+4      	; 0x482c <xTaskCheckForTimeOut+0xb8>
    4828:	81 e0       	ldi	r24, 0x01	; 1
    482a:	89 83       	std	Y+1, r24	; 0x01
    482c:	0f 90       	pop	r0
    482e:	0f be       	out	0x3f, r0	; 63
    4830:	89 81       	ldd	r24, Y+1	; 0x01
    4832:	27 96       	adiw	r28, 0x07	; 7
    4834:	0f b6       	in	r0, 0x3f	; 63
    4836:	f8 94       	cli
    4838:	de bf       	out	0x3e, r29	; 62
    483a:	0f be       	out	0x3f, r0	; 63
    483c:	cd bf       	out	0x3d, r28	; 61
    483e:	df 91       	pop	r29
    4840:	cf 91       	pop	r28
    4842:	08 95       	ret

00004844 <vTaskMissedYield>:
    4844:	cf 93       	push	r28
    4846:	df 93       	push	r29
    4848:	cd b7       	in	r28, 0x3d	; 61
    484a:	de b7       	in	r29, 0x3e	; 62
    484c:	81 e0       	ldi	r24, 0x01	; 1
    484e:	80 93 39 08 	sts	0x0839, r24	; 0x800839 <xYieldPending>
    4852:	00 00       	nop
    4854:	df 91       	pop	r29
    4856:	cf 91       	pop	r28
    4858:	08 95       	ret

0000485a <prvIdleTask>:
    485a:	cf 93       	push	r28
    485c:	df 93       	push	r29
    485e:	00 d0       	rcall	.+0      	; 0x4860 <prvIdleTask+0x6>
    4860:	cd b7       	in	r28, 0x3d	; 61
    4862:	de b7       	in	r29, 0x3e	; 62
    4864:	9a 83       	std	Y+2, r25	; 0x02
    4866:	89 83       	std	Y+1, r24	; 0x01
    4868:	0e 94 7d 24 	call	0x48fa	; 0x48fa <prvCheckTasksWaitingTermination>
    486c:	80 91 e6 07 	lds	r24, 0x07E6	; 0x8007e6 <pxReadyTasksLists>
    4870:	82 30       	cpi	r24, 0x02	; 2
    4872:	10 f0       	brcs	.+4      	; 0x4878 <prvIdleTask+0x1e>
    4874:	0e 94 60 13 	call	0x26c0	; 0x26c0 <vPortYield>
    4878:	0e 94 d3 07 	call	0xfa6	; 0xfa6 <vApplicationIdleHook>
    487c:	f5 cf       	rjmp	.-22     	; 0x4868 <prvIdleTask+0xe>

0000487e <prvInitialiseTaskLists>:
    487e:	cf 93       	push	r28
    4880:	df 93       	push	r29
    4882:	1f 92       	push	r1
    4884:	cd b7       	in	r28, 0x3d	; 61
    4886:	de b7       	in	r29, 0x3e	; 62
    4888:	19 82       	std	Y+1, r1	; 0x01
    488a:	13 c0       	rjmp	.+38     	; 0x48b2 <prvInitialiseTaskLists+0x34>
    488c:	89 81       	ldd	r24, Y+1	; 0x01
    488e:	28 2f       	mov	r18, r24
    4890:	30 e0       	ldi	r19, 0x00	; 0
    4892:	c9 01       	movw	r24, r18
    4894:	88 0f       	add	r24, r24
    4896:	99 1f       	adc	r25, r25
    4898:	88 0f       	add	r24, r24
    489a:	99 1f       	adc	r25, r25
    489c:	88 0f       	add	r24, r24
    489e:	99 1f       	adc	r25, r25
    48a0:	82 0f       	add	r24, r18
    48a2:	93 1f       	adc	r25, r19
    48a4:	8a 51       	subi	r24, 0x1A	; 26
    48a6:	98 4f       	sbci	r25, 0xF8	; 248
    48a8:	0e 94 1c 10 	call	0x2038	; 0x2038 <vListInitialise>
    48ac:	89 81       	ldd	r24, Y+1	; 0x01
    48ae:	8f 5f       	subi	r24, 0xFF	; 255
    48b0:	89 83       	std	Y+1, r24	; 0x01
    48b2:	89 81       	ldd	r24, Y+1	; 0x01
    48b4:	84 30       	cpi	r24, 0x04	; 4
    48b6:	50 f3       	brcs	.-44     	; 0x488c <prvInitialiseTaskLists+0xe>
    48b8:	8a e0       	ldi	r24, 0x0A	; 10
    48ba:	98 e0       	ldi	r25, 0x08	; 8
    48bc:	0e 94 1c 10 	call	0x2038	; 0x2038 <vListInitialise>
    48c0:	83 e1       	ldi	r24, 0x13	; 19
    48c2:	98 e0       	ldi	r25, 0x08	; 8
    48c4:	0e 94 1c 10 	call	0x2038	; 0x2038 <vListInitialise>
    48c8:	80 e2       	ldi	r24, 0x20	; 32
    48ca:	98 e0       	ldi	r25, 0x08	; 8
    48cc:	0e 94 1c 10 	call	0x2038	; 0x2038 <vListInitialise>
    48d0:	89 e2       	ldi	r24, 0x29	; 41
    48d2:	98 e0       	ldi	r25, 0x08	; 8
    48d4:	0e 94 1c 10 	call	0x2038	; 0x2038 <vListInitialise>
    48d8:	8a e0       	ldi	r24, 0x0A	; 10
    48da:	98 e0       	ldi	r25, 0x08	; 8
    48dc:	90 93 1d 08 	sts	0x081D, r25	; 0x80081d <pxDelayedTaskList+0x1>
    48e0:	80 93 1c 08 	sts	0x081C, r24	; 0x80081c <pxDelayedTaskList>
    48e4:	83 e1       	ldi	r24, 0x13	; 19
    48e6:	98 e0       	ldi	r25, 0x08	; 8
    48e8:	90 93 1f 08 	sts	0x081F, r25	; 0x80081f <pxOverflowDelayedTaskList+0x1>
    48ec:	80 93 1e 08 	sts	0x081E, r24	; 0x80081e <pxOverflowDelayedTaskList>
    48f0:	00 00       	nop
    48f2:	0f 90       	pop	r0
    48f4:	df 91       	pop	r29
    48f6:	cf 91       	pop	r28
    48f8:	08 95       	ret

000048fa <prvCheckTasksWaitingTermination>:
    48fa:	cf 93       	push	r28
    48fc:	df 93       	push	r29
    48fe:	00 d0       	rcall	.+0      	; 0x4900 <prvCheckTasksWaitingTermination+0x6>
    4900:	1f 92       	push	r1
    4902:	cd b7       	in	r28, 0x3d	; 61
    4904:	de b7       	in	r29, 0x3e	; 62
    4906:	2f c0       	rjmp	.+94     	; 0x4966 <prvCheckTasksWaitingTermination+0x6c>
    4908:	0e 94 91 20 	call	0x4122	; 0x4122 <vTaskSuspendAll>
    490c:	90 91 29 08 	lds	r25, 0x0829	; 0x800829 <xTasksWaitingTermination>
    4910:	81 e0       	ldi	r24, 0x01	; 1
    4912:	99 23       	and	r25, r25
    4914:	09 f0       	breq	.+2      	; 0x4918 <prvCheckTasksWaitingTermination+0x1e>
    4916:	80 e0       	ldi	r24, 0x00	; 0
    4918:	89 83       	std	Y+1, r24	; 0x01
    491a:	0e 94 9e 20 	call	0x413c	; 0x413c <xTaskResumeAll>
    491e:	89 81       	ldd	r24, Y+1	; 0x01
    4920:	88 23       	and	r24, r24
    4922:	09 f5       	brne	.+66     	; 0x4966 <prvCheckTasksWaitingTermination+0x6c>
    4924:	0f b6       	in	r0, 0x3f	; 63
    4926:	f8 94       	cli
    4928:	0f 92       	push	r0
    492a:	80 91 2e 08 	lds	r24, 0x082E	; 0x80082e <xTasksWaitingTermination+0x5>
    492e:	90 91 2f 08 	lds	r25, 0x082F	; 0x80082f <xTasksWaitingTermination+0x6>
    4932:	fc 01       	movw	r30, r24
    4934:	86 81       	ldd	r24, Z+6	; 0x06
    4936:	97 81       	ldd	r25, Z+7	; 0x07
    4938:	9b 83       	std	Y+3, r25	; 0x03
    493a:	8a 83       	std	Y+2, r24	; 0x02
    493c:	8a 81       	ldd	r24, Y+2	; 0x02
    493e:	9b 81       	ldd	r25, Y+3	; 0x03
    4940:	02 96       	adiw	r24, 0x02	; 2
    4942:	0e 94 2b 11 	call	0x2256	; 0x2256 <uxListRemove>
    4946:	80 91 33 08 	lds	r24, 0x0833	; 0x800833 <uxCurrentNumberOfTasks>
    494a:	81 50       	subi	r24, 0x01	; 1
    494c:	80 93 33 08 	sts	0x0833, r24	; 0x800833 <uxCurrentNumberOfTasks>
    4950:	80 91 32 08 	lds	r24, 0x0832	; 0x800832 <uxDeletedTasksWaitingCleanUp>
    4954:	81 50       	subi	r24, 0x01	; 1
    4956:	80 93 32 08 	sts	0x0832, r24	; 0x800832 <uxDeletedTasksWaitingCleanUp>
    495a:	0f 90       	pop	r0
    495c:	0f be       	out	0x3f, r0	; 63
    495e:	8a 81       	ldd	r24, Y+2	; 0x02
    4960:	9b 81       	ldd	r25, Y+3	; 0x03
    4962:	0e 94 1c 25 	call	0x4a38	; 0x4a38 <prvDeleteTCB>
    4966:	80 91 32 08 	lds	r24, 0x0832	; 0x800832 <uxDeletedTasksWaitingCleanUp>
    496a:	88 23       	and	r24, r24
    496c:	69 f6       	brne	.-102    	; 0x4908 <prvCheckTasksWaitingTermination+0xe>
    496e:	00 00       	nop
    4970:	0f 90       	pop	r0
    4972:	0f 90       	pop	r0
    4974:	0f 90       	pop	r0
    4976:	df 91       	pop	r29
    4978:	cf 91       	pop	r28
    497a:	08 95       	ret

0000497c <prvTaskCheckFreeStackSpace>:
    497c:	cf 93       	push	r28
    497e:	df 93       	push	r29
    4980:	00 d0       	rcall	.+0      	; 0x4982 <prvTaskCheckFreeStackSpace+0x6>
    4982:	00 d0       	rcall	.+0      	; 0x4984 <prvTaskCheckFreeStackSpace+0x8>
    4984:	00 d0       	rcall	.+0      	; 0x4986 <prvTaskCheckFreeStackSpace+0xa>
    4986:	cd b7       	in	r28, 0x3d	; 61
    4988:	de b7       	in	r29, 0x3e	; 62
    498a:	9e 83       	std	Y+6, r25	; 0x06
    498c:	8d 83       	std	Y+5, r24	; 0x05
    498e:	19 82       	std	Y+1, r1	; 0x01
    4990:	1a 82       	std	Y+2, r1	; 0x02
    4992:	1b 82       	std	Y+3, r1	; 0x03
    4994:	1c 82       	std	Y+4, r1	; 0x04
    4996:	10 c0       	rjmp	.+32     	; 0x49b8 <prvTaskCheckFreeStackSpace+0x3c>
    4998:	8d 81       	ldd	r24, Y+5	; 0x05
    499a:	9e 81       	ldd	r25, Y+6	; 0x06
    499c:	01 96       	adiw	r24, 0x01	; 1
    499e:	9e 83       	std	Y+6, r25	; 0x06
    49a0:	8d 83       	std	Y+5, r24	; 0x05
    49a2:	89 81       	ldd	r24, Y+1	; 0x01
    49a4:	9a 81       	ldd	r25, Y+2	; 0x02
    49a6:	ab 81       	ldd	r26, Y+3	; 0x03
    49a8:	bc 81       	ldd	r27, Y+4	; 0x04
    49aa:	01 96       	adiw	r24, 0x01	; 1
    49ac:	a1 1d       	adc	r26, r1
    49ae:	b1 1d       	adc	r27, r1
    49b0:	89 83       	std	Y+1, r24	; 0x01
    49b2:	9a 83       	std	Y+2, r25	; 0x02
    49b4:	ab 83       	std	Y+3, r26	; 0x03
    49b6:	bc 83       	std	Y+4, r27	; 0x04
    49b8:	8d 81       	ldd	r24, Y+5	; 0x05
    49ba:	9e 81       	ldd	r25, Y+6	; 0x06
    49bc:	fc 01       	movw	r30, r24
    49be:	80 81       	ld	r24, Z
    49c0:	85 3a       	cpi	r24, 0xA5	; 165
    49c2:	51 f3       	breq	.-44     	; 0x4998 <prvTaskCheckFreeStackSpace+0x1c>
    49c4:	89 81       	ldd	r24, Y+1	; 0x01
    49c6:	9a 81       	ldd	r25, Y+2	; 0x02
    49c8:	26 96       	adiw	r28, 0x06	; 6
    49ca:	0f b6       	in	r0, 0x3f	; 63
    49cc:	f8 94       	cli
    49ce:	de bf       	out	0x3e, r29	; 62
    49d0:	0f be       	out	0x3f, r0	; 63
    49d2:	cd bf       	out	0x3d, r28	; 61
    49d4:	df 91       	pop	r29
    49d6:	cf 91       	pop	r28
    49d8:	08 95       	ret

000049da <uxTaskGetStackHighWaterMark>:
    49da:	cf 93       	push	r28
    49dc:	df 93       	push	r29
    49de:	cd b7       	in	r28, 0x3d	; 61
    49e0:	de b7       	in	r29, 0x3e	; 62
    49e2:	27 97       	sbiw	r28, 0x07	; 7
    49e4:	0f b6       	in	r0, 0x3f	; 63
    49e6:	f8 94       	cli
    49e8:	de bf       	out	0x3e, r29	; 62
    49ea:	0f be       	out	0x3f, r0	; 63
    49ec:	cd bf       	out	0x3d, r28	; 61
    49ee:	9f 83       	std	Y+7, r25	; 0x07
    49f0:	8e 83       	std	Y+6, r24	; 0x06
    49f2:	8e 81       	ldd	r24, Y+6	; 0x06
    49f4:	9f 81       	ldd	r25, Y+7	; 0x07
    49f6:	89 2b       	or	r24, r25
    49f8:	29 f4       	brne	.+10     	; 0x4a04 <uxTaskGetStackHighWaterMark+0x2a>
    49fa:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    49fe:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4a02:	02 c0       	rjmp	.+4      	; 0x4a08 <uxTaskGetStackHighWaterMark+0x2e>
    4a04:	8e 81       	ldd	r24, Y+6	; 0x06
    4a06:	9f 81       	ldd	r25, Y+7	; 0x07
    4a08:	9a 83       	std	Y+2, r25	; 0x02
    4a0a:	89 83       	std	Y+1, r24	; 0x01
    4a0c:	89 81       	ldd	r24, Y+1	; 0x01
    4a0e:	9a 81       	ldd	r25, Y+2	; 0x02
    4a10:	fc 01       	movw	r30, r24
    4a12:	87 89       	ldd	r24, Z+23	; 0x17
    4a14:	90 8d       	ldd	r25, Z+24	; 0x18
    4a16:	9c 83       	std	Y+4, r25	; 0x04
    4a18:	8b 83       	std	Y+3, r24	; 0x03
    4a1a:	8b 81       	ldd	r24, Y+3	; 0x03
    4a1c:	9c 81       	ldd	r25, Y+4	; 0x04
    4a1e:	0e 94 be 24 	call	0x497c	; 0x497c <prvTaskCheckFreeStackSpace>
    4a22:	8d 83       	std	Y+5, r24	; 0x05
    4a24:	8d 81       	ldd	r24, Y+5	; 0x05
    4a26:	27 96       	adiw	r28, 0x07	; 7
    4a28:	0f b6       	in	r0, 0x3f	; 63
    4a2a:	f8 94       	cli
    4a2c:	de bf       	out	0x3e, r29	; 62
    4a2e:	0f be       	out	0x3f, r0	; 63
    4a30:	cd bf       	out	0x3d, r28	; 61
    4a32:	df 91       	pop	r29
    4a34:	cf 91       	pop	r28
    4a36:	08 95       	ret

00004a38 <prvDeleteTCB>:
    4a38:	cf 93       	push	r28
    4a3a:	df 93       	push	r29
    4a3c:	00 d0       	rcall	.+0      	; 0x4a3e <prvDeleteTCB+0x6>
    4a3e:	cd b7       	in	r28, 0x3d	; 61
    4a40:	de b7       	in	r29, 0x3e	; 62
    4a42:	9a 83       	std	Y+2, r25	; 0x02
    4a44:	89 83       	std	Y+1, r24	; 0x01
    4a46:	89 81       	ldd	r24, Y+1	; 0x01
    4a48:	9a 81       	ldd	r25, Y+2	; 0x02
    4a4a:	fc 01       	movw	r30, r24
    4a4c:	87 89       	ldd	r24, Z+23	; 0x17
    4a4e:	90 8d       	ldd	r25, Z+24	; 0x18
    4a50:	0e 94 df 17 	call	0x2fbe	; 0x2fbe <vPortFree>
    4a54:	89 81       	ldd	r24, Y+1	; 0x01
    4a56:	9a 81       	ldd	r25, Y+2	; 0x02
    4a58:	0e 94 df 17 	call	0x2fbe	; 0x2fbe <vPortFree>
    4a5c:	00 00       	nop
    4a5e:	0f 90       	pop	r0
    4a60:	0f 90       	pop	r0
    4a62:	df 91       	pop	r29
    4a64:	cf 91       	pop	r28
    4a66:	08 95       	ret

00004a68 <prvResetNextTaskUnblockTime>:
    4a68:	cf 93       	push	r28
    4a6a:	df 93       	push	r29
    4a6c:	00 d0       	rcall	.+0      	; 0x4a6e <prvResetNextTaskUnblockTime+0x6>
    4a6e:	cd b7       	in	r28, 0x3d	; 61
    4a70:	de b7       	in	r29, 0x3e	; 62
    4a72:	80 91 1c 08 	lds	r24, 0x081C	; 0x80081c <pxDelayedTaskList>
    4a76:	90 91 1d 08 	lds	r25, 0x081D	; 0x80081d <pxDelayedTaskList+0x1>
    4a7a:	fc 01       	movw	r30, r24
    4a7c:	80 81       	ld	r24, Z
    4a7e:	88 23       	and	r24, r24
    4a80:	39 f4       	brne	.+14     	; 0x4a90 <prvResetNextTaskUnblockTime+0x28>
    4a82:	8f ef       	ldi	r24, 0xFF	; 255
    4a84:	9f ef       	ldi	r25, 0xFF	; 255
    4a86:	90 93 3d 08 	sts	0x083D, r25	; 0x80083d <xNextTaskUnblockTime+0x1>
    4a8a:	80 93 3c 08 	sts	0x083C, r24	; 0x80083c <xNextTaskUnblockTime>
    4a8e:	15 c0       	rjmp	.+42     	; 0x4aba <prvResetNextTaskUnblockTime+0x52>
    4a90:	80 91 1c 08 	lds	r24, 0x081C	; 0x80081c <pxDelayedTaskList>
    4a94:	90 91 1d 08 	lds	r25, 0x081D	; 0x80081d <pxDelayedTaskList+0x1>
    4a98:	fc 01       	movw	r30, r24
    4a9a:	85 81       	ldd	r24, Z+5	; 0x05
    4a9c:	96 81       	ldd	r25, Z+6	; 0x06
    4a9e:	fc 01       	movw	r30, r24
    4aa0:	86 81       	ldd	r24, Z+6	; 0x06
    4aa2:	97 81       	ldd	r25, Z+7	; 0x07
    4aa4:	9a 83       	std	Y+2, r25	; 0x02
    4aa6:	89 83       	std	Y+1, r24	; 0x01
    4aa8:	89 81       	ldd	r24, Y+1	; 0x01
    4aaa:	9a 81       	ldd	r25, Y+2	; 0x02
    4aac:	fc 01       	movw	r30, r24
    4aae:	82 81       	ldd	r24, Z+2	; 0x02
    4ab0:	93 81       	ldd	r25, Z+3	; 0x03
    4ab2:	90 93 3d 08 	sts	0x083D, r25	; 0x80083d <xNextTaskUnblockTime+0x1>
    4ab6:	80 93 3c 08 	sts	0x083C, r24	; 0x80083c <xNextTaskUnblockTime>
    4aba:	00 00       	nop
    4abc:	0f 90       	pop	r0
    4abe:	0f 90       	pop	r0
    4ac0:	df 91       	pop	r29
    4ac2:	cf 91       	pop	r28
    4ac4:	08 95       	ret

00004ac6 <vTaskPriorityInherit>:
    4ac6:	cf 93       	push	r28
    4ac8:	df 93       	push	r29
    4aca:	00 d0       	rcall	.+0      	; 0x4acc <vTaskPriorityInherit+0x6>
    4acc:	00 d0       	rcall	.+0      	; 0x4ace <vTaskPriorityInherit+0x8>
    4ace:	cd b7       	in	r28, 0x3d	; 61
    4ad0:	de b7       	in	r29, 0x3e	; 62
    4ad2:	9c 83       	std	Y+4, r25	; 0x04
    4ad4:	8b 83       	std	Y+3, r24	; 0x03
    4ad6:	8b 81       	ldd	r24, Y+3	; 0x03
    4ad8:	9c 81       	ldd	r25, Y+4	; 0x04
    4ada:	9a 83       	std	Y+2, r25	; 0x02
    4adc:	89 83       	std	Y+1, r24	; 0x01
    4ade:	8b 81       	ldd	r24, Y+3	; 0x03
    4ae0:	9c 81       	ldd	r25, Y+4	; 0x04
    4ae2:	89 2b       	or	r24, r25
    4ae4:	09 f4       	brne	.+2      	; 0x4ae8 <vTaskPriorityInherit+0x22>
    4ae6:	7f c0       	rjmp	.+254    	; 0x4be6 <vTaskPriorityInherit+0x120>
    4ae8:	89 81       	ldd	r24, Y+1	; 0x01
    4aea:	9a 81       	ldd	r25, Y+2	; 0x02
    4aec:	fc 01       	movw	r30, r24
    4aee:	26 89       	ldd	r18, Z+22	; 0x16
    4af0:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4af4:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4af8:	fc 01       	movw	r30, r24
    4afa:	86 89       	ldd	r24, Z+22	; 0x16
    4afc:	28 17       	cp	r18, r24
    4afe:	08 f0       	brcs	.+2      	; 0x4b02 <vTaskPriorityInherit+0x3c>
    4b00:	72 c0       	rjmp	.+228    	; 0x4be6 <vTaskPriorityInherit+0x120>
    4b02:	89 81       	ldd	r24, Y+1	; 0x01
    4b04:	9a 81       	ldd	r25, Y+2	; 0x02
    4b06:	fc 01       	movw	r30, r24
    4b08:	84 85       	ldd	r24, Z+12	; 0x0c
    4b0a:	95 85       	ldd	r25, Z+13	; 0x0d
    4b0c:	99 23       	and	r25, r25
    4b0e:	8c f0       	brlt	.+34     	; 0x4b32 <vTaskPriorityInherit+0x6c>
    4b10:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4b14:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4b18:	fc 01       	movw	r30, r24
    4b1a:	86 89       	ldd	r24, Z+22	; 0x16
    4b1c:	88 2f       	mov	r24, r24
    4b1e:	90 e0       	ldi	r25, 0x00	; 0
    4b20:	24 e0       	ldi	r18, 0x04	; 4
    4b22:	30 e0       	ldi	r19, 0x00	; 0
    4b24:	28 1b       	sub	r18, r24
    4b26:	39 0b       	sbc	r19, r25
    4b28:	89 81       	ldd	r24, Y+1	; 0x01
    4b2a:	9a 81       	ldd	r25, Y+2	; 0x02
    4b2c:	fc 01       	movw	r30, r24
    4b2e:	35 87       	std	Z+13, r19	; 0x0d
    4b30:	24 87       	std	Z+12, r18	; 0x0c
    4b32:	89 81       	ldd	r24, Y+1	; 0x01
    4b34:	9a 81       	ldd	r25, Y+2	; 0x02
    4b36:	fc 01       	movw	r30, r24
    4b38:	42 85       	ldd	r20, Z+10	; 0x0a
    4b3a:	53 85       	ldd	r21, Z+11	; 0x0b
    4b3c:	89 81       	ldd	r24, Y+1	; 0x01
    4b3e:	9a 81       	ldd	r25, Y+2	; 0x02
    4b40:	fc 01       	movw	r30, r24
    4b42:	86 89       	ldd	r24, Z+22	; 0x16
    4b44:	28 2f       	mov	r18, r24
    4b46:	30 e0       	ldi	r19, 0x00	; 0
    4b48:	c9 01       	movw	r24, r18
    4b4a:	88 0f       	add	r24, r24
    4b4c:	99 1f       	adc	r25, r25
    4b4e:	88 0f       	add	r24, r24
    4b50:	99 1f       	adc	r25, r25
    4b52:	88 0f       	add	r24, r24
    4b54:	99 1f       	adc	r25, r25
    4b56:	82 0f       	add	r24, r18
    4b58:	93 1f       	adc	r25, r19
    4b5a:	8a 51       	subi	r24, 0x1A	; 26
    4b5c:	98 4f       	sbci	r25, 0xF8	; 248
    4b5e:	48 17       	cp	r20, r24
    4b60:	59 07       	cpc	r21, r25
    4b62:	b9 f5       	brne	.+110    	; 0x4bd2 <vTaskPriorityInherit+0x10c>
    4b64:	89 81       	ldd	r24, Y+1	; 0x01
    4b66:	9a 81       	ldd	r25, Y+2	; 0x02
    4b68:	02 96       	adiw	r24, 0x02	; 2
    4b6a:	0e 94 2b 11 	call	0x2256	; 0x2256 <uxListRemove>
    4b6e:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4b72:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4b76:	fc 01       	movw	r30, r24
    4b78:	26 89       	ldd	r18, Z+22	; 0x16
    4b7a:	89 81       	ldd	r24, Y+1	; 0x01
    4b7c:	9a 81       	ldd	r25, Y+2	; 0x02
    4b7e:	fc 01       	movw	r30, r24
    4b80:	26 8b       	std	Z+22, r18	; 0x16
    4b82:	89 81       	ldd	r24, Y+1	; 0x01
    4b84:	9a 81       	ldd	r25, Y+2	; 0x02
    4b86:	fc 01       	movw	r30, r24
    4b88:	96 89       	ldd	r25, Z+22	; 0x16
    4b8a:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <uxTopReadyPriority>
    4b8e:	89 17       	cp	r24, r25
    4b90:	30 f4       	brcc	.+12     	; 0x4b9e <vTaskPriorityInherit+0xd8>
    4b92:	89 81       	ldd	r24, Y+1	; 0x01
    4b94:	9a 81       	ldd	r25, Y+2	; 0x02
    4b96:	fc 01       	movw	r30, r24
    4b98:	86 89       	ldd	r24, Z+22	; 0x16
    4b9a:	80 93 36 08 	sts	0x0836, r24	; 0x800836 <uxTopReadyPriority>
    4b9e:	89 81       	ldd	r24, Y+1	; 0x01
    4ba0:	9a 81       	ldd	r25, Y+2	; 0x02
    4ba2:	ac 01       	movw	r20, r24
    4ba4:	4e 5f       	subi	r20, 0xFE	; 254
    4ba6:	5f 4f       	sbci	r21, 0xFF	; 255
    4ba8:	89 81       	ldd	r24, Y+1	; 0x01
    4baa:	9a 81       	ldd	r25, Y+2	; 0x02
    4bac:	fc 01       	movw	r30, r24
    4bae:	86 89       	ldd	r24, Z+22	; 0x16
    4bb0:	28 2f       	mov	r18, r24
    4bb2:	30 e0       	ldi	r19, 0x00	; 0
    4bb4:	c9 01       	movw	r24, r18
    4bb6:	88 0f       	add	r24, r24
    4bb8:	99 1f       	adc	r25, r25
    4bba:	88 0f       	add	r24, r24
    4bbc:	99 1f       	adc	r25, r25
    4bbe:	88 0f       	add	r24, r24
    4bc0:	99 1f       	adc	r25, r25
    4bc2:	82 0f       	add	r24, r18
    4bc4:	93 1f       	adc	r25, r19
    4bc6:	8a 51       	subi	r24, 0x1A	; 26
    4bc8:	98 4f       	sbci	r25, 0xF8	; 248
    4bca:	ba 01       	movw	r22, r20
    4bcc:	0e 94 64 10 	call	0x20c8	; 0x20c8 <vListInsertEnd>
    4bd0:	0a c0       	rjmp	.+20     	; 0x4be6 <vTaskPriorityInherit+0x120>
    4bd2:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4bd6:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4bda:	fc 01       	movw	r30, r24
    4bdc:	26 89       	ldd	r18, Z+22	; 0x16
    4bde:	89 81       	ldd	r24, Y+1	; 0x01
    4be0:	9a 81       	ldd	r25, Y+2	; 0x02
    4be2:	fc 01       	movw	r30, r24
    4be4:	26 8b       	std	Z+22, r18	; 0x16
    4be6:	00 00       	nop
    4be8:	0f 90       	pop	r0
    4bea:	0f 90       	pop	r0
    4bec:	0f 90       	pop	r0
    4bee:	0f 90       	pop	r0
    4bf0:	df 91       	pop	r29
    4bf2:	cf 91       	pop	r28
    4bf4:	08 95       	ret

00004bf6 <xTaskPriorityDisinherit>:
    4bf6:	cf 93       	push	r28
    4bf8:	df 93       	push	r29
    4bfa:	00 d0       	rcall	.+0      	; 0x4bfc <xTaskPriorityDisinherit+0x6>
    4bfc:	00 d0       	rcall	.+0      	; 0x4bfe <xTaskPriorityDisinherit+0x8>
    4bfe:	1f 92       	push	r1
    4c00:	cd b7       	in	r28, 0x3d	; 61
    4c02:	de b7       	in	r29, 0x3e	; 62
    4c04:	9d 83       	std	Y+5, r25	; 0x05
    4c06:	8c 83       	std	Y+4, r24	; 0x04
    4c08:	8c 81       	ldd	r24, Y+4	; 0x04
    4c0a:	9d 81       	ldd	r25, Y+5	; 0x05
    4c0c:	9b 83       	std	Y+3, r25	; 0x03
    4c0e:	8a 83       	std	Y+2, r24	; 0x02
    4c10:	19 82       	std	Y+1, r1	; 0x01
    4c12:	8c 81       	ldd	r24, Y+4	; 0x04
    4c14:	9d 81       	ldd	r25, Y+5	; 0x05
    4c16:	89 2b       	or	r24, r25
    4c18:	09 f4       	brne	.+2      	; 0x4c1c <xTaskPriorityDisinherit+0x26>
    4c1a:	61 c0       	rjmp	.+194    	; 0x4cde <xTaskPriorityDisinherit+0xe8>
    4c1c:	8a 81       	ldd	r24, Y+2	; 0x02
    4c1e:	9b 81       	ldd	r25, Y+3	; 0x03
    4c20:	fc 01       	movw	r30, r24
    4c22:	84 a1       	ldd	r24, Z+36	; 0x24
    4c24:	2f ef       	ldi	r18, 0xFF	; 255
    4c26:	28 0f       	add	r18, r24
    4c28:	8a 81       	ldd	r24, Y+2	; 0x02
    4c2a:	9b 81       	ldd	r25, Y+3	; 0x03
    4c2c:	fc 01       	movw	r30, r24
    4c2e:	24 a3       	std	Z+36, r18	; 0x24
    4c30:	8a 81       	ldd	r24, Y+2	; 0x02
    4c32:	9b 81       	ldd	r25, Y+3	; 0x03
    4c34:	fc 01       	movw	r30, r24
    4c36:	26 89       	ldd	r18, Z+22	; 0x16
    4c38:	8a 81       	ldd	r24, Y+2	; 0x02
    4c3a:	9b 81       	ldd	r25, Y+3	; 0x03
    4c3c:	fc 01       	movw	r30, r24
    4c3e:	83 a1       	ldd	r24, Z+35	; 0x23
    4c40:	28 17       	cp	r18, r24
    4c42:	09 f4       	brne	.+2      	; 0x4c46 <xTaskPriorityDisinherit+0x50>
    4c44:	4c c0       	rjmp	.+152    	; 0x4cde <xTaskPriorityDisinherit+0xe8>
    4c46:	8a 81       	ldd	r24, Y+2	; 0x02
    4c48:	9b 81       	ldd	r25, Y+3	; 0x03
    4c4a:	fc 01       	movw	r30, r24
    4c4c:	84 a1       	ldd	r24, Z+36	; 0x24
    4c4e:	88 23       	and	r24, r24
    4c50:	09 f0       	breq	.+2      	; 0x4c54 <xTaskPriorityDisinherit+0x5e>
    4c52:	45 c0       	rjmp	.+138    	; 0x4cde <xTaskPriorityDisinherit+0xe8>
    4c54:	8a 81       	ldd	r24, Y+2	; 0x02
    4c56:	9b 81       	ldd	r25, Y+3	; 0x03
    4c58:	02 96       	adiw	r24, 0x02	; 2
    4c5a:	0e 94 2b 11 	call	0x2256	; 0x2256 <uxListRemove>
    4c5e:	8a 81       	ldd	r24, Y+2	; 0x02
    4c60:	9b 81       	ldd	r25, Y+3	; 0x03
    4c62:	fc 01       	movw	r30, r24
    4c64:	23 a1       	ldd	r18, Z+35	; 0x23
    4c66:	8a 81       	ldd	r24, Y+2	; 0x02
    4c68:	9b 81       	ldd	r25, Y+3	; 0x03
    4c6a:	fc 01       	movw	r30, r24
    4c6c:	26 8b       	std	Z+22, r18	; 0x16
    4c6e:	8a 81       	ldd	r24, Y+2	; 0x02
    4c70:	9b 81       	ldd	r25, Y+3	; 0x03
    4c72:	fc 01       	movw	r30, r24
    4c74:	86 89       	ldd	r24, Z+22	; 0x16
    4c76:	88 2f       	mov	r24, r24
    4c78:	90 e0       	ldi	r25, 0x00	; 0
    4c7a:	24 e0       	ldi	r18, 0x04	; 4
    4c7c:	30 e0       	ldi	r19, 0x00	; 0
    4c7e:	28 1b       	sub	r18, r24
    4c80:	39 0b       	sbc	r19, r25
    4c82:	8a 81       	ldd	r24, Y+2	; 0x02
    4c84:	9b 81       	ldd	r25, Y+3	; 0x03
    4c86:	fc 01       	movw	r30, r24
    4c88:	35 87       	std	Z+13, r19	; 0x0d
    4c8a:	24 87       	std	Z+12, r18	; 0x0c
    4c8c:	8a 81       	ldd	r24, Y+2	; 0x02
    4c8e:	9b 81       	ldd	r25, Y+3	; 0x03
    4c90:	fc 01       	movw	r30, r24
    4c92:	96 89       	ldd	r25, Z+22	; 0x16
    4c94:	80 91 36 08 	lds	r24, 0x0836	; 0x800836 <uxTopReadyPriority>
    4c98:	89 17       	cp	r24, r25
    4c9a:	30 f4       	brcc	.+12     	; 0x4ca8 <xTaskPriorityDisinherit+0xb2>
    4c9c:	8a 81       	ldd	r24, Y+2	; 0x02
    4c9e:	9b 81       	ldd	r25, Y+3	; 0x03
    4ca0:	fc 01       	movw	r30, r24
    4ca2:	86 89       	ldd	r24, Z+22	; 0x16
    4ca4:	80 93 36 08 	sts	0x0836, r24	; 0x800836 <uxTopReadyPriority>
    4ca8:	8a 81       	ldd	r24, Y+2	; 0x02
    4caa:	9b 81       	ldd	r25, Y+3	; 0x03
    4cac:	ac 01       	movw	r20, r24
    4cae:	4e 5f       	subi	r20, 0xFE	; 254
    4cb0:	5f 4f       	sbci	r21, 0xFF	; 255
    4cb2:	8a 81       	ldd	r24, Y+2	; 0x02
    4cb4:	9b 81       	ldd	r25, Y+3	; 0x03
    4cb6:	fc 01       	movw	r30, r24
    4cb8:	86 89       	ldd	r24, Z+22	; 0x16
    4cba:	28 2f       	mov	r18, r24
    4cbc:	30 e0       	ldi	r19, 0x00	; 0
    4cbe:	c9 01       	movw	r24, r18
    4cc0:	88 0f       	add	r24, r24
    4cc2:	99 1f       	adc	r25, r25
    4cc4:	88 0f       	add	r24, r24
    4cc6:	99 1f       	adc	r25, r25
    4cc8:	88 0f       	add	r24, r24
    4cca:	99 1f       	adc	r25, r25
    4ccc:	82 0f       	add	r24, r18
    4cce:	93 1f       	adc	r25, r19
    4cd0:	8a 51       	subi	r24, 0x1A	; 26
    4cd2:	98 4f       	sbci	r25, 0xF8	; 248
    4cd4:	ba 01       	movw	r22, r20
    4cd6:	0e 94 64 10 	call	0x20c8	; 0x20c8 <vListInsertEnd>
    4cda:	81 e0       	ldi	r24, 0x01	; 1
    4cdc:	89 83       	std	Y+1, r24	; 0x01
    4cde:	89 81       	ldd	r24, Y+1	; 0x01
    4ce0:	0f 90       	pop	r0
    4ce2:	0f 90       	pop	r0
    4ce4:	0f 90       	pop	r0
    4ce6:	0f 90       	pop	r0
    4ce8:	0f 90       	pop	r0
    4cea:	df 91       	pop	r29
    4cec:	cf 91       	pop	r28
    4cee:	08 95       	ret

00004cf0 <pvTaskIncrementMutexHeldCount>:
    4cf0:	cf 93       	push	r28
    4cf2:	df 93       	push	r29
    4cf4:	cd b7       	in	r28, 0x3d	; 61
    4cf6:	de b7       	in	r29, 0x3e	; 62
    4cf8:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4cfc:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4d00:	89 2b       	or	r24, r25
    4d02:	49 f0       	breq	.+18     	; 0x4d16 <pvTaskIncrementMutexHeldCount+0x26>
    4d04:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4d08:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4d0c:	fc 01       	movw	r30, r24
    4d0e:	24 a1       	ldd	r18, Z+36	; 0x24
    4d10:	2f 5f       	subi	r18, 0xFF	; 255
    4d12:	fc 01       	movw	r30, r24
    4d14:	24 a3       	std	Z+36, r18	; 0x24
    4d16:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4d1a:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4d1e:	df 91       	pop	r29
    4d20:	cf 91       	pop	r28
    4d22:	08 95       	ret

00004d24 <prvAddCurrentTaskToDelayedList>:
    4d24:	cf 93       	push	r28
    4d26:	df 93       	push	r29
    4d28:	cd b7       	in	r28, 0x3d	; 61
    4d2a:	de b7       	in	r29, 0x3e	; 62
    4d2c:	27 97       	sbiw	r28, 0x07	; 7
    4d2e:	0f b6       	in	r0, 0x3f	; 63
    4d30:	f8 94       	cli
    4d32:	de bf       	out	0x3e, r29	; 62
    4d34:	0f be       	out	0x3f, r0	; 63
    4d36:	cd bf       	out	0x3d, r28	; 61
    4d38:	9e 83       	std	Y+6, r25	; 0x06
    4d3a:	8d 83       	std	Y+5, r24	; 0x05
    4d3c:	6f 83       	std	Y+7, r22	; 0x07
    4d3e:	80 91 34 08 	lds	r24, 0x0834	; 0x800834 <xTickCount>
    4d42:	90 91 35 08 	lds	r25, 0x0835	; 0x800835 <xTickCount+0x1>
    4d46:	9a 83       	std	Y+2, r25	; 0x02
    4d48:	89 83       	std	Y+1, r24	; 0x01
    4d4a:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4d4e:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4d52:	02 96       	adiw	r24, 0x02	; 2
    4d54:	0e 94 2b 11 	call	0x2256	; 0x2256 <uxListRemove>
    4d58:	29 81       	ldd	r18, Y+1	; 0x01
    4d5a:	3a 81       	ldd	r19, Y+2	; 0x02
    4d5c:	8d 81       	ldd	r24, Y+5	; 0x05
    4d5e:	9e 81       	ldd	r25, Y+6	; 0x06
    4d60:	82 0f       	add	r24, r18
    4d62:	93 1f       	adc	r25, r19
    4d64:	9c 83       	std	Y+4, r25	; 0x04
    4d66:	8b 83       	std	Y+3, r24	; 0x03
    4d68:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4d6c:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4d70:	2b 81       	ldd	r18, Y+3	; 0x03
    4d72:	3c 81       	ldd	r19, Y+4	; 0x04
    4d74:	fc 01       	movw	r30, r24
    4d76:	33 83       	std	Z+3, r19	; 0x03
    4d78:	22 83       	std	Z+2, r18	; 0x02
    4d7a:	2b 81       	ldd	r18, Y+3	; 0x03
    4d7c:	3c 81       	ldd	r19, Y+4	; 0x04
    4d7e:	89 81       	ldd	r24, Y+1	; 0x01
    4d80:	9a 81       	ldd	r25, Y+2	; 0x02
    4d82:	28 17       	cp	r18, r24
    4d84:	39 07       	cpc	r19, r25
    4d86:	78 f4       	brcc	.+30     	; 0x4da6 <prvAddCurrentTaskToDelayedList+0x82>
    4d88:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4d8c:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4d90:	9c 01       	movw	r18, r24
    4d92:	2e 5f       	subi	r18, 0xFE	; 254
    4d94:	3f 4f       	sbci	r19, 0xFF	; 255
    4d96:	80 91 1e 08 	lds	r24, 0x081E	; 0x80081e <pxOverflowDelayedTaskList>
    4d9a:	90 91 1f 08 	lds	r25, 0x081F	; 0x80081f <pxOverflowDelayedTaskList+0x1>
    4d9e:	b9 01       	movw	r22, r18
    4da0:	0e 94 b3 10 	call	0x2166	; 0x2166 <vListInsert>
    4da4:	1d c0       	rjmp	.+58     	; 0x4de0 <prvAddCurrentTaskToDelayedList+0xbc>
    4da6:	80 91 e4 07 	lds	r24, 0x07E4	; 0x8007e4 <pxCurrentTCB>
    4daa:	90 91 e5 07 	lds	r25, 0x07E5	; 0x8007e5 <pxCurrentTCB+0x1>
    4dae:	9c 01       	movw	r18, r24
    4db0:	2e 5f       	subi	r18, 0xFE	; 254
    4db2:	3f 4f       	sbci	r19, 0xFF	; 255
    4db4:	80 91 1c 08 	lds	r24, 0x081C	; 0x80081c <pxDelayedTaskList>
    4db8:	90 91 1d 08 	lds	r25, 0x081D	; 0x80081d <pxDelayedTaskList+0x1>
    4dbc:	b9 01       	movw	r22, r18
    4dbe:	0e 94 b3 10 	call	0x2166	; 0x2166 <vListInsert>
    4dc2:	80 91 3c 08 	lds	r24, 0x083C	; 0x80083c <xNextTaskUnblockTime>
    4dc6:	90 91 3d 08 	lds	r25, 0x083D	; 0x80083d <xNextTaskUnblockTime+0x1>
    4dca:	2b 81       	ldd	r18, Y+3	; 0x03
    4dcc:	3c 81       	ldd	r19, Y+4	; 0x04
    4dce:	28 17       	cp	r18, r24
    4dd0:	39 07       	cpc	r19, r25
    4dd2:	30 f4       	brcc	.+12     	; 0x4de0 <prvAddCurrentTaskToDelayedList+0xbc>
    4dd4:	8b 81       	ldd	r24, Y+3	; 0x03
    4dd6:	9c 81       	ldd	r25, Y+4	; 0x04
    4dd8:	90 93 3d 08 	sts	0x083D, r25	; 0x80083d <xNextTaskUnblockTime+0x1>
    4ddc:	80 93 3c 08 	sts	0x083C, r24	; 0x80083c <xNextTaskUnblockTime>
    4de0:	00 00       	nop
    4de2:	27 96       	adiw	r28, 0x07	; 7
    4de4:	0f b6       	in	r0, 0x3f	; 63
    4de6:	f8 94       	cli
    4de8:	de bf       	out	0x3e, r29	; 62
    4dea:	0f be       	out	0x3f, r0	; 63
    4dec:	cd bf       	out	0x3d, r28	; 61
    4dee:	df 91       	pop	r29
    4df0:	cf 91       	pop	r28
    4df2:	08 95       	ret

00004df4 <__divmodhi4>:
    4df4:	97 fb       	bst	r25, 7
    4df6:	07 2e       	mov	r0, r23
    4df8:	16 f4       	brtc	.+4      	; 0x4dfe <__divmodhi4+0xa>
    4dfa:	00 94       	com	r0
    4dfc:	07 d0       	rcall	.+14     	; 0x4e0c <__divmodhi4_neg1>
    4dfe:	77 fd       	sbrc	r23, 7
    4e00:	09 d0       	rcall	.+18     	; 0x4e14 <__divmodhi4_neg2>
    4e02:	0e 94 30 27 	call	0x4e60	; 0x4e60 <__udivmodhi4>
    4e06:	07 fc       	sbrc	r0, 7
    4e08:	05 d0       	rcall	.+10     	; 0x4e14 <__divmodhi4_neg2>
    4e0a:	3e f4       	brtc	.+14     	; 0x4e1a <__divmodhi4_exit>

00004e0c <__divmodhi4_neg1>:
    4e0c:	90 95       	com	r25
    4e0e:	81 95       	neg	r24
    4e10:	9f 4f       	sbci	r25, 0xFF	; 255
    4e12:	08 95       	ret

00004e14 <__divmodhi4_neg2>:
    4e14:	70 95       	com	r23
    4e16:	61 95       	neg	r22
    4e18:	7f 4f       	sbci	r23, 0xFF	; 255

00004e1a <__divmodhi4_exit>:
    4e1a:	08 95       	ret

00004e1c <__udivmodsi4>:
    4e1c:	a1 e2       	ldi	r26, 0x21	; 33
    4e1e:	1a 2e       	mov	r1, r26
    4e20:	aa 1b       	sub	r26, r26
    4e22:	bb 1b       	sub	r27, r27
    4e24:	fd 01       	movw	r30, r26
    4e26:	0d c0       	rjmp	.+26     	; 0x4e42 <__udivmodsi4_ep>

00004e28 <__udivmodsi4_loop>:
    4e28:	aa 1f       	adc	r26, r26
    4e2a:	bb 1f       	adc	r27, r27
    4e2c:	ee 1f       	adc	r30, r30
    4e2e:	ff 1f       	adc	r31, r31
    4e30:	a2 17       	cp	r26, r18
    4e32:	b3 07       	cpc	r27, r19
    4e34:	e4 07       	cpc	r30, r20
    4e36:	f5 07       	cpc	r31, r21
    4e38:	20 f0       	brcs	.+8      	; 0x4e42 <__udivmodsi4_ep>
    4e3a:	a2 1b       	sub	r26, r18
    4e3c:	b3 0b       	sbc	r27, r19
    4e3e:	e4 0b       	sbc	r30, r20
    4e40:	f5 0b       	sbc	r31, r21

00004e42 <__udivmodsi4_ep>:
    4e42:	66 1f       	adc	r22, r22
    4e44:	77 1f       	adc	r23, r23
    4e46:	88 1f       	adc	r24, r24
    4e48:	99 1f       	adc	r25, r25
    4e4a:	1a 94       	dec	r1
    4e4c:	69 f7       	brne	.-38     	; 0x4e28 <__udivmodsi4_loop>
    4e4e:	60 95       	com	r22
    4e50:	70 95       	com	r23
    4e52:	80 95       	com	r24
    4e54:	90 95       	com	r25
    4e56:	9b 01       	movw	r18, r22
    4e58:	ac 01       	movw	r20, r24
    4e5a:	bd 01       	movw	r22, r26
    4e5c:	cf 01       	movw	r24, r30
    4e5e:	08 95       	ret

00004e60 <__udivmodhi4>:
    4e60:	aa 1b       	sub	r26, r26
    4e62:	bb 1b       	sub	r27, r27
    4e64:	51 e1       	ldi	r21, 0x11	; 17
    4e66:	07 c0       	rjmp	.+14     	; 0x4e76 <__udivmodhi4_ep>

00004e68 <__udivmodhi4_loop>:
    4e68:	aa 1f       	adc	r26, r26
    4e6a:	bb 1f       	adc	r27, r27
    4e6c:	a6 17       	cp	r26, r22
    4e6e:	b7 07       	cpc	r27, r23
    4e70:	10 f0       	brcs	.+4      	; 0x4e76 <__udivmodhi4_ep>
    4e72:	a6 1b       	sub	r26, r22
    4e74:	b7 0b       	sbc	r27, r23

00004e76 <__udivmodhi4_ep>:
    4e76:	88 1f       	adc	r24, r24
    4e78:	99 1f       	adc	r25, r25
    4e7a:	5a 95       	dec	r21
    4e7c:	a9 f7       	brne	.-22     	; 0x4e68 <__udivmodhi4_loop>
    4e7e:	80 95       	com	r24
    4e80:	90 95       	com	r25
    4e82:	bc 01       	movw	r22, r24
    4e84:	cd 01       	movw	r24, r26
    4e86:	08 95       	ret

00004e88 <memcpy>:
    4e88:	fb 01       	movw	r30, r22
    4e8a:	dc 01       	movw	r26, r24
    4e8c:	02 c0       	rjmp	.+4      	; 0x4e92 <memcpy+0xa>
    4e8e:	01 90       	ld	r0, Z+
    4e90:	0d 92       	st	X+, r0
    4e92:	41 50       	subi	r20, 0x01	; 1
    4e94:	50 40       	sbci	r21, 0x00	; 0
    4e96:	d8 f7       	brcc	.-10     	; 0x4e8e <memcpy+0x6>
    4e98:	08 95       	ret

00004e9a <memset>:
    4e9a:	dc 01       	movw	r26, r24
    4e9c:	01 c0       	rjmp	.+2      	; 0x4ea0 <memset+0x6>
    4e9e:	6d 93       	st	X+, r22
    4ea0:	41 50       	subi	r20, 0x01	; 1
    4ea2:	50 40       	sbci	r21, 0x00	; 0
    4ea4:	e0 f7       	brcc	.-8      	; 0x4e9e <memset+0x4>
    4ea6:	08 95       	ret

00004ea8 <strlen>:
    4ea8:	fc 01       	movw	r30, r24
    4eaa:	01 90       	ld	r0, Z+
    4eac:	00 20       	and	r0, r0
    4eae:	e9 f7       	brne	.-6      	; 0x4eaa <strlen+0x2>
    4eb0:	80 95       	com	r24
    4eb2:	90 95       	com	r25
    4eb4:	8e 0f       	add	r24, r30
    4eb6:	9f 1f       	adc	r25, r31
    4eb8:	08 95       	ret

00004eba <_exit>:
    4eba:	f8 94       	cli

00004ebc <__stop_program>:
    4ebc:	ff cf       	rjmp	.-2      	; 0x4ebc <__stop_program>
